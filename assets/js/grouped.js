(function(window, undefined) {
    var
        rootjQuery, readyList, document = window.document,
        location = window.location,
        navigator = window.navigator,
        _jQuery = window.jQuery,
        _$ = window.$,
        core_push = Array.prototype.push,
        core_slice = Array.prototype.slice,
        core_indexOf = Array.prototype.indexOf,
        core_toString = Object.prototype.toString,
        core_hasOwn = Object.prototype.hasOwnProperty,
        core_trim = String.prototype.trim,
        jQuery = function(selector, context) {
            return new jQuery.fn.init(selector, context, rootjQuery);
        }, core_pnum = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,
        core_rnotwhite = /\S/,
        core_rspace = /\s+/,
        rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
        rquickExpr = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,
        rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
        rvalidchars = /^[\],:{}\s]*$/,
        rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
        rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
        rvalidtokens = /"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,
        rmsPrefix = /^-ms-/,
        rdashAlpha = /-([\da-z])/gi,
        fcamelCase = function(all, letter) {
            return (letter + "").toUpperCase();
        }, DOMContentLoaded = function() {
            if (document.addEventListener) {
                document.removeEventListener("DOMContentLoaded", DOMContentLoaded, false);
                jQuery.ready();
            } else if (document.readyState === "complete") {
                document.detachEvent("onreadystatechange", DOMContentLoaded);
                jQuery.ready();
            }
        }, class2type = {};
    jQuery.fn = jQuery.prototype = {
        constructor: jQuery,
        init: function(selector, context, rootjQuery) {
            var match, elem, ret, doc;
            if (!selector) {
                return this;
            }
            if (selector.nodeType) {
                this.context = this[0] = selector;
                this.length = 1;
                return this;
            }
            if (typeof selector === "string") {
                if (selector.charAt(0) === "<" && selector.charAt(selector.length - 1) === ">" && selector.length >= 3) {
                    match = [null, selector, null];
                } else {
                    match = rquickExpr.exec(selector);
                }
                if (match && (match[1] || !context)) {
                    if (match[1]) {
                        context = context instanceof jQuery ? context[0] : context;
                        doc = (context && context.nodeType ? context.ownerDocument || context : document);
                        selector = jQuery.parseHTML(match[1], doc, true);
                        if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
                            this.attr.call(selector, context, true);
                        }
                        return jQuery.merge(this, selector);
                    } else {
                        elem = document.getElementById(match[2]);
                        if (elem && elem.parentNode) {
                            if (elem.id !== match[2]) {
                                return rootjQuery.find(selector);
                            }
                            this.length = 1;
                            this[0] = elem;
                        }
                        this.context = document;
                        this.selector = selector;
                        return this;
                    }
                } else if (!context || context.jquery) {
                    return (context || rootjQuery).find(selector);
                } else {
                    return this.constructor(context).find(selector);
                }
            } else if (jQuery.isFunction(selector)) {
                return rootjQuery.ready(selector);
            }
            if (selector.selector !== undefined) {
                this.selector = selector.selector;
                this.context = selector.context;
            }
            return jQuery.makeArray(selector, this);
        },
        selector: "",
        jquery: "1.8.2",
        length: 0,
        size: function() {
            return this.length;
        },
        toArray: function() {
            return core_slice.call(this);
        },
        get: function(num) {
            return num == null ? this.toArray() : (num < 0 ? this[this.length + num] : this[num]);
        },
        pushStack: function(elems, name, selector) {
            var ret = jQuery.merge(this.constructor(), elems);
            ret.prevObject = this;
            ret.context = this.context;
            if (name === "find") {
                ret.selector = this.selector + (this.selector ? " " : "") + selector;
            } else if (name) {
                ret.selector = this.selector + "." + name + "(" + selector + ")";
            }
            return ret;
        },
        each: function(callback, args) {
            return jQuery.each(this, callback, args);
        },
        ready: function(fn) {
            jQuery.ready.promise().done(fn);
            return this;
        },
        eq: function(i) {
            i = +i;
            return i === -1 ? this.slice(i) : this.slice(i, i + 1);
        },
        first: function() {
            return this.eq(0);
        },
        last: function() {
            return this.eq(-1);
        },
        slice: function() {
            return this.pushStack(core_slice.apply(this, arguments), "slice", core_slice.call(arguments).join(","));
        },
        map: function(callback) {
            return this.pushStack(jQuery.map(this, function(elem, i) {
                return callback.call(elem, i, elem);
            }));
        },
        end: function() {
            return this.prevObject || this.constructor(null);
        },
        push: core_push,
        sort: [].sort,
        splice: [].splice
    };
    jQuery.fn.init.prototype = jQuery.fn;
    jQuery.extend = jQuery.fn.extend = function() {
        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1,
            length = arguments.length,
            deep = false;
        if (typeof target === "boolean") {
            deep = target;
            target = arguments[1] || {};
            i = 2;
        }
        if (typeof target !== "object" && !jQuery.isFunction(target)) {
            target = {};
        }
        if (length === i) {
            target = this;
            --i;
        }
        for (; i < length; i++) {
            if ((options = arguments[i]) != null) {
                for (name in options) {
                    src = target[name];
                    copy = options[name];
                    if (target === copy) {
                        continue;
                    }
                    if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {
                        if (copyIsArray) {
                            copyIsArray = false;
                            clone = src && jQuery.isArray(src) ? src : [];
                        } else {
                            clone = src && jQuery.isPlainObject(src) ? src : {};
                        }
                        target[name] = jQuery.extend(deep, clone, copy);
                    } else if (copy !== undefined) {
                        target[name] = copy;
                    }
                }
            }
        }
        return target;
    };
    jQuery.extend({
        noConflict: function(deep) {
            if (window.$ === jQuery) {
                window.$ = _$;
            }
            if (deep && window.jQuery === jQuery) {
                window.jQuery = _jQuery;
            }
            return jQuery;
        },
        isReady: false,
        readyWait: 1,
        holdReady: function(hold) {
            if (hold) {
                jQuery.readyWait++;
            } else {
                jQuery.ready(true);
            }
        },
        ready: function(wait) {
            if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
                return;
            }
            if (!document.body) {
                return setTimeout(jQuery.ready, 1);
            }
            jQuery.isReady = true;
            if (wait !== true && --jQuery.readyWait > 0) {
                return;
            }
            readyList.resolveWith(document, [jQuery]);
            if (jQuery.fn.trigger) {
                jQuery(document).trigger("ready").off("ready");
            }
        },
        isFunction: function(obj) {
            return jQuery.type(obj) === "function";
        },
        isArray: Array.isArray || function(obj) {
            return jQuery.type(obj) === "array";
        },
        isWindow: function(obj) {
            return obj != null && obj == obj.window;
        },
        isNumeric: function(obj) {
            return !isNaN(parseFloat(obj)) && isFinite(obj);
        },
        type: function(obj) {
            return obj == null ? String(obj) : class2type[core_toString.call(obj)] || "object";
        },
        isPlainObject: function(obj) {
            if (!obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow(obj)) {
                return false;
            }
            try {
                if (obj.constructor && !core_hasOwn.call(obj, "constructor") && !core_hasOwn.call(obj.constructor.prototype, "isPrototypeOf")) {
                    return false;
                }
            } catch (e) {
                return false;
            }
            var key;
            for (key in obj) {}
            return key === undefined || core_hasOwn.call(obj, key);
        },
        isEmptyObject: function(obj) {
            var name;
            for (name in obj) {
                return false;
            }
            return true;
        },
        error: function(msg) {
            throw new Error(msg);
        },
        parseHTML: function(data, context, scripts) {
            var parsed;
            if (!data || typeof data !== "string") {
                return null;
            }
            if (typeof context === "boolean") {
                scripts = context;
                context = 0;
            }
            context = context || document;
            if ((parsed = rsingleTag.exec(data))) {
                return [context.createElement(parsed[1])];
            }
            parsed = jQuery.buildFragment([data], context, scripts ? null : []);
            return jQuery.merge([], (parsed.cacheable ? jQuery.clone(parsed.fragment) : parsed.fragment).childNodes);
        },
        parseJSON: function(data) {
            if (!data || typeof data !== "string") {
                return null;
            }
            data = jQuery.trim(data);
            if (window.JSON && window.JSON.parse) {
                return window.JSON.parse(data);
            }
            if (rvalidchars.test(data.replace(rvalidescape, "@").replace(rvalidtokens, "]").replace(rvalidbraces, ""))) {
                return (new Function("return " + data))();
            }
            jQuery.error("Invalid JSON: " + data);
        },
        parseXML: function(data) {
            var xml, tmp;
            if (!data || typeof data !== "string") {
                return null;
            }
            try {
                if (window.DOMParser) {
                    tmp = new DOMParser();
                    xml = tmp.parseFromString(data, "text/xml");
                } else {
                    xml = new ActiveXObject("Microsoft.XMLDOM");
                    xml.async = "false";
                    xml.loadXML(data);
                }
            } catch (e) {
                xml = undefined;
            }
            if (!xml || !xml.documentElement || xml.getElementsByTagName("parsererror").length) {
                jQuery.error("Invalid XML: " + data);
            }
            return xml;
        },
        noop: function() {},
        globalEval: function(data) {
            if (data && core_rnotwhite.test(data)) {
                (window.execScript || function(data) {
                    window["eval"].call(window, data);
                })(data);
            }
        },
        camelCase: function(string) {
            return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
        },
        nodeName: function(elem, name) {
            return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
        },
        each: function(obj, callback, args) {
            var name, i = 0,
                length = obj.length,
                isObj = length === undefined || jQuery.isFunction(obj);
            if (args) {
                if (isObj) {
                    for (name in obj) {
                        if (callback.apply(obj[name], args) === false) {
                            break;
                        }
                    }
                } else {
                    for (; i < length;) {
                        if (callback.apply(obj[i++], args) === false) {
                            break;
                        }
                    }
                }
            } else {
                if (isObj) {
                    for (name in obj) {
                        if (callback.call(obj[name], name, obj[name]) === false) {
                            break;
                        }
                    }
                } else {
                    for (; i < length;) {
                        if (callback.call(obj[i], i, obj[i++]) === false) {
                            break;
                        }
                    }
                }
            }
            return obj;
        },
        trim: core_trim && !core_trim.call("\uFEFF\xA0") ? function(text) {
            return text == null ? "" : core_trim.call(text);
        } : function(text) {
            return text == null ? "" : (text + "").replace(rtrim, "");
        },
        makeArray: function(arr, results) {
            var type, ret = results || [];
            if (arr != null) {
                type = jQuery.type(arr);
                if (arr.length == null || type === "string" || type === "function" || type === "regexp" || jQuery.isWindow(arr)) {
                    core_push.call(ret, arr);
                } else {
                    jQuery.merge(ret, arr);
                }
            }
            return ret;
        },
        inArray: function(elem, arr, i) {
            var len;
            if (arr) {
                if (core_indexOf) {
                    return core_indexOf.call(arr, elem, i);
                }
                len = arr.length;
                i = i ? i < 0 ? Math.max(0, len + i) : i : 0;
                for (; i < len; i++) {
                    if (i in arr && arr[i] === elem) {
                        return i;
                    }
                }
            }
            return -1;
        },
        merge: function(first, second) {
            var l = second.length,
                i = first.length,
                j = 0;
            if (typeof l === "number") {
                for (; j < l; j++) {
                    first[i++] = second[j];
                }
            } else {
                while (second[j] !== undefined) {
                    first[i++] = second[j++];
                }
            }
            first.length = i;
            return first;
        },
        grep: function(elems, callback, inv) {
            var retVal, ret = [],
                i = 0,
                length = elems.length;
            inv = !! inv;
            for (; i < length; i++) {
                retVal = !! callback(elems[i], i);
                if (inv !== retVal) {
                    ret.push(elems[i]);
                }
            }
            return ret;
        },
        map: function(elems, callback, arg) {
            var value, key, ret = [],
                i = 0,
                length = elems.length,
                isArray = elems instanceof jQuery || length !== undefined && typeof length === "number" && ((length > 0 && elems[0] && elems[length - 1]) || length === 0 || jQuery.isArray(elems));
            if (isArray) {
                for (; i < length; i++) {
                    value = callback(elems[i], i, arg);
                    if (value != null) {
                        ret[ret.length] = value;
                    }
                }
            } else {
                for (key in elems) {
                    value = callback(elems[key], key, arg);
                    if (value != null) {
                        ret[ret.length] = value;
                    }
                }
            }
            return ret.concat.apply([], ret);
        },
        guid: 1,
        proxy: function(fn, context) {
            var tmp, args, proxy;
            if (typeof context === "string") {
                tmp = fn[context];
                context = fn;
                fn = tmp;
            }
            if (!jQuery.isFunction(fn)) {
                return undefined;
            }
            args = core_slice.call(arguments, 2);
            proxy = function() {
                return fn.apply(context, args.concat(core_slice.call(arguments)));
            };
            proxy.guid = fn.guid = fn.guid || jQuery.guid++;
            return proxy;
        },
        access: function(elems, fn, key, value, chainable, emptyGet, pass) {
            var exec, bulk = key == null,
                i = 0,
                length = elems.length;
            if (key && typeof key === "object") {
                for (i in key) {
                    jQuery.access(elems, fn, i, key[i], 1, emptyGet, value);
                }
                chainable = 1;
            } else if (value !== undefined) {
                exec = pass === undefined && jQuery.isFunction(value);
                if (bulk) {
                    if (exec) {
                        exec = fn;
                        fn = function(elem, key, value) {
                            return exec.call(jQuery(elem), value);
                        };
                    } else {
                        fn.call(elems, value);
                        fn = null;
                    }
                }
                if (fn) {
                    for (; i < length; i++) {
                        fn(elems[i], key, exec ? value.call(elems[i], i, fn(elems[i], key)) : value, pass);
                    }
                }
                chainable = 1;
            }
            return chainable ? elems : bulk ? fn.call(elems) : length ? fn(elems[0], key) : emptyGet;
        },
        now: function() {
            return (new Date()).getTime();
        }
    });
    jQuery.ready.promise = function(obj) {
        if (!readyList) {
            readyList = jQuery.Deferred();
            if (document.readyState === "complete") {
                setTimeout(jQuery.ready, 1);
            } else if (document.addEventListener) {
                document.addEventListener("DOMContentLoaded", DOMContentLoaded, false);
                window.addEventListener("load", jQuery.ready, false);
            } else {
                document.attachEvent("onreadystatechange", DOMContentLoaded);
                window.attachEvent("onload", jQuery.ready);
                var top = false;
                try {
                    top = window.frameElement == null && document.documentElement;
                } catch (e) {}
                if (top && top.doScroll) {
                    (function doScrollCheck() {
                        if (!jQuery.isReady) {
                            try {
                                top.doScroll("left");
                            } catch (e) {
                                return setTimeout(doScrollCheck, 50);
                            }
                            jQuery.ready();
                        }
                    })();
                }
            }
        }
        return readyList.promise(obj);
    };
    jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(i, name) {
        class2type["[object " + name + "]"] = name.toLowerCase();
    });
    rootjQuery = jQuery(document);
    var optionsCache = {};

    function createOptions(options) {
        var object = optionsCache[options] = {};
        jQuery.each(options.split(core_rspace), function(_, flag) {
            object[flag] = true;
        });
        return object;
    }
    jQuery.Callbacks = function(options) {
        options = typeof options === "string" ? (optionsCache[options] || createOptions(options)) : jQuery.extend({}, options);
        var
            memory, fired, firing, firingStart, firingLength, firingIndex, list = [],
            stack = !options.once && [],
            fire = function(data) {
                memory = options.memory && data;
                fired = true;
                firingIndex = firingStart || 0;
                firingStart = 0;
                firingLength = list.length;
                firing = true;
                for (; list && firingIndex < firingLength; firingIndex++) {
                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {
                        memory = false;
                        break;
                    }
                }
                firing = false;
                if (list) {
                    if (stack) {
                        if (stack.length) {
                            fire(stack.shift());
                        }
                    } else if (memory) {
                        list = [];
                    } else {
                        self.disable();
                    }
                }
            }, self = {
                add: function() {
                    if (list) {
                        var start = list.length;
                        (function add(args) {
                            jQuery.each(args, function(_, arg) {
                                var type = jQuery.type(arg);
                                if (type === "function" && (!options.unique || !self.has(arg))) {
                                    list.push(arg);
                                } else if (arg && arg.length && type !== "string") {
                                    add(arg);
                                }
                            });
                        })(arguments);
                        if (firing) {
                            firingLength = list.length;
                        } else if (memory) {
                            firingStart = start;
                            fire(memory);
                        }
                    }
                    return this;
                },
                remove: function() {
                    if (list) {
                        jQuery.each(arguments, function(_, arg) {
                            var index;
                            while ((index = jQuery.inArray(arg, list, index)) > -1) {
                                list.splice(index, 1);
                                if (firing) {
                                    if (index <= firingLength) {
                                        firingLength--;
                                    }
                                    if (index <= firingIndex) {
                                        firingIndex--;
                                    }
                                }
                            }
                        });
                    }
                    return this;
                },
                has: function(fn) {
                    return jQuery.inArray(fn, list) > -1;
                },
                empty: function() {
                    list = [];
                    return this;
                },
                disable: function() {
                    list = stack = memory = undefined;
                    return this;
                },
                disabled: function() {
                    return !list;
                },
                lock: function() {
                    stack = undefined;
                    if (!memory) {
                        self.disable();
                    }
                    return this;
                },
                locked: function() {
                    return !stack;
                },
                fireWith: function(context, args) {
                    args = args || [];
                    args = [context, args.slice ? args.slice() : args];
                    if (list && (!fired || stack)) {
                        if (firing) {
                            stack.push(args);
                        } else {
                            fire(args);
                        }
                    }
                    return this;
                },
                fire: function() {
                    self.fireWith(this, arguments);
                    return this;
                },
                fired: function() {
                    return !!fired;
                }
            };
        return self;
    };
    jQuery.extend({
        Deferred: function(func) {
            var tuples = [
                    ["resolve", "done", jQuery.Callbacks("once memory"), "resolved"],
                    ["reject", "fail", jQuery.Callbacks("once memory"), "rejected"],
                    ["notify", "progress", jQuery.Callbacks("memory")]
                ],
                state = "pending",
                promise = {
                    state: function() {
                        return state;
                    },
                    always: function() {
                        deferred.done(arguments).fail(arguments);
                        return this;
                    },
                    then: function() {
                        var fns = arguments;
                        return jQuery.Deferred(function(newDefer) {
                            jQuery.each(tuples, function(i, tuple) {
                                var action = tuple[0],
                                    fn = fns[i];
                                deferred[tuple[1]](jQuery.isFunction(fn) ? function() {
                                    var returned = fn.apply(this, arguments);
                                    if (returned && jQuery.isFunction(returned.promise)) {
                                        returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify);
                                    } else {
                                        newDefer[action + "With"](this === deferred ? newDefer : this, [returned]);
                                    }
                                } : newDefer[action]);
                            });
                            fns = null;
                        }).promise();
                    },
                    promise: function(obj) {
                        return obj != null ? jQuery.extend(obj, promise) : promise;
                    }
                }, deferred = {};
            promise.pipe = promise.then;
            jQuery.each(tuples, function(i, tuple) {
                var list = tuple[2],
                    stateString = tuple[3];
                promise[tuple[1]] = list.add;
                if (stateString) {
                    list.add(function() {
                        state = stateString;
                    }, tuples[i ^ 1][2].disable, tuples[2][2].lock);
                }
                deferred[tuple[0]] = list.fire;
                deferred[tuple[0] + "With"] = list.fireWith;
            });
            promise.promise(deferred);
            if (func) {
                func.call(deferred, deferred);
            }
            return deferred;
        },
        when: function(subordinate) {
            var i = 0,
                resolveValues = core_slice.call(arguments),
                length = resolveValues.length,
                remaining = length !== 1 || (subordinate && jQuery.isFunction(subordinate.promise)) ? length : 0,
                deferred = remaining === 1 ? subordinate : jQuery.Deferred(),
                updateFunc = function(i, contexts, values) {
                    return function(value) {
                        contexts[i] = this;
                        values[i] = arguments.length > 1 ? core_slice.call(arguments) : value;
                        if (values === progressValues) {
                            deferred.notifyWith(contexts, values);
                        } else if (!(--remaining)) {
                            deferred.resolveWith(contexts, values);
                        }
                    };
                }, progressValues, progressContexts, resolveContexts;
            if (length > 1) {
                progressValues = new Array(length);
                progressContexts = new Array(length);
                resolveContexts = new Array(length);
                for (; i < length; i++) {
                    if (resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)) {
                        resolveValues[i].promise().done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject).progress(updateFunc(i, progressContexts, progressValues));
                    } else {
                        --remaining;
                    }
                }
            }
            if (!remaining) {
                deferred.resolveWith(resolveContexts, resolveValues);
            }
            return deferred.promise();
        }
    });
    jQuery.support = (function() {
        var support, all, a, select, opt, input, fragment, eventName, i, isSupported, clickFn, div = document.createElement("div");
        div.setAttribute("className", "t");
        div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
        all = div.getElementsByTagName("*");
        a = div.getElementsByTagName("a")[0];
        a.style.cssText = "top:1px;float:left;opacity:.5";
        if (!all || !all.length) {
            return {};
        }
        select = document.createElement("select");
        opt = select.appendChild(document.createElement("option"));
        input = div.getElementsByTagName("input")[0];
        support = {
            leadingWhitespace: (div.firstChild.nodeType === 3),
            tbody: !div.getElementsByTagName("tbody").length,
            htmlSerialize: !! div.getElementsByTagName("link").length,
            style: /top/.test(a.getAttribute("style")),
            hrefNormalized: (a.getAttribute("href") === "/a"),
            opacity: /^0.5/.test(a.style.opacity),
            cssFloat: !! a.style.cssFloat,
            checkOn: (input.value === "on"),
            optSelected: opt.selected,
            getSetAttribute: div.className !== "t",
            enctype: !! document.createElement("form").enctype,
            html5Clone: document.createElement("nav").cloneNode(true).outerHTML !== "<:nav></:nav>",
            boxModel: (document.compatMode === "CSS1Compat"),
            submitBubbles: true,
            changeBubbles: true,
            focusinBubbles: false,
            deleteExpando: true,
            noCloneEvent: true,
            inlineBlockNeedsLayout: false,
            shrinkWrapBlocks: false,
            reliableMarginRight: true,
            boxSizingReliable: true,
            pixelPosition: false
        };
        input.checked = true;
        support.noCloneChecked = input.cloneNode(true).checked;
        select.disabled = true;
        support.optDisabled = !opt.disabled;
        try {
            delete div.test;
        } catch (e) {
            support.deleteExpando = false;
        }
        if (!div.addEventListener && div.attachEvent && div.fireEvent) {
            div.attachEvent("onclick", clickFn = function() {
                support.noCloneEvent = false;
            });
            div.cloneNode(true).fireEvent("onclick");
            div.detachEvent("onclick", clickFn);
        }
        input = document.createElement("input");
        input.value = "t";
        input.setAttribute("type", "radio");
        support.radioValue = input.value === "t";
        input.setAttribute("checked", "checked");
        input.setAttribute("name", "t");
        div.appendChild(input);
        fragment = document.createDocumentFragment();
        fragment.appendChild(div.lastChild);
        support.checkClone = fragment.cloneNode(true).cloneNode(true).lastChild.checked;
        support.appendChecked = input.checked;
        fragment.removeChild(input);
        fragment.appendChild(div);
        if (div.attachEvent) {
            for (i in {
                submit: true,
                change: true,
                focusin: true
            }) {
                eventName = "on" + i;
                isSupported = (eventName in div);
                if (!isSupported) {
                    div.setAttribute(eventName, "return;");
                    isSupported = (typeof div[eventName] === "function");
                }
                support[i + "Bubbles"] = isSupported;
            }
        }
        jQuery(function() {
            var container, div, tds, marginDiv, divReset = "padding:0;margin:0;border:0;display:block;overflow:hidden;",
                body = document.getElementsByTagName("body")[0];
            if (!body) {
                return;
            }
            container = document.createElement("div");
            container.style.cssText = "visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px";
            body.insertBefore(container, body.firstChild);
            div = document.createElement("div");
            container.appendChild(div);
            div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
            tds = div.getElementsByTagName("td");
            tds[0].style.cssText = "padding:0;margin:0;border:0;display:none";
            isSupported = (tds[0].offsetHeight === 0);
            tds[0].style.display = "";
            tds[1].style.display = "none";
            support.reliableHiddenOffsets = isSupported && (tds[0].offsetHeight === 0);
            div.innerHTML = "";
            div.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;";
            support.boxSizing = (div.offsetWidth === 4);
            support.doesNotIncludeMarginInBodyOffset = (body.offsetTop !== 1);
            if (window.getComputedStyle) {
                support.pixelPosition = (window.getComputedStyle(div, null) || {}).top !== "1%";
                support.boxSizingReliable = (window.getComputedStyle(div, null) || {
                    width: "4px"
                }).width === "4px";
                marginDiv = document.createElement("div");
                marginDiv.style.cssText = div.style.cssText = divReset;
                marginDiv.style.marginRight = marginDiv.style.width = "0";
                div.style.width = "1px";
                div.appendChild(marginDiv);
                support.reliableMarginRight = !parseFloat((window.getComputedStyle(marginDiv, null) || {}).marginRight);
            }
            if (typeof div.style.zoom !== "undefined") {
                div.innerHTML = "";
                div.style.cssText = divReset + "width:1px;padding:1px;display:inline;zoom:1";
                support.inlineBlockNeedsLayout = (div.offsetWidth === 3);
                div.style.display = "block";
                div.style.overflow = "visible";
                div.innerHTML = "<div></div>";
                div.firstChild.style.width = "5px";
                support.shrinkWrapBlocks = (div.offsetWidth !== 3);
                container.style.zoom = 1;
            }
            body.removeChild(container);
            container = div = tds = marginDiv = null;
        });
        fragment.removeChild(div);
        all = a = select = opt = input = fragment = div = null;
        return support;
    })();
    var rbrace = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,
        rmultiDash = /([A-Z])/g;
    jQuery.extend({
        cache: {},
        deletedIds: [],
        uuid: 0,
        expando: "jQuery" + (jQuery.fn.jquery + Math.random()).replace(/\D/g, ""),
        noData: {
            "embed": true,
            "object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
            "applet": true
        },
        hasData: function(elem) {
            elem = elem.nodeType ? jQuery.cache[elem[jQuery.expando]] : elem[jQuery.expando];
            return !!elem && !isEmptyDataObject(elem);
        },
        data: function(elem, name, data, pvt) {
            if (!jQuery.acceptData(elem)) {
                return;
            }
            var thisCache, ret, internalKey = jQuery.expando,
                getByName = typeof name === "string",
                isNode = elem.nodeType,
                cache = isNode ? jQuery.cache : elem,
                id = isNode ? elem[internalKey] : elem[internalKey] && internalKey;
            if ((!id || !cache[id] || (!pvt && !cache[id].data)) && getByName && data === undefined) {
                return;
            }
            if (!id) {
                if (isNode) {
                    elem[internalKey] = id = jQuery.deletedIds.pop() || jQuery.guid++;
                } else {
                    id = internalKey;
                }
            }
            if (!cache[id]) {
                cache[id] = {};
                if (!isNode) {
                    cache[id].toJSON = jQuery.noop;
                }
            }
            if (typeof name === "object" || typeof name === "function") {
                if (pvt) {
                    cache[id] = jQuery.extend(cache[id], name);
                } else {
                    cache[id].data = jQuery.extend(cache[id].data, name);
                }
            }
            thisCache = cache[id];
            if (!pvt) {
                if (!thisCache.data) {
                    thisCache.data = {};
                }
                thisCache = thisCache.data;
            }
            if (data !== undefined) {
                thisCache[jQuery.camelCase(name)] = data;
            }
            if (getByName) {
                ret = thisCache[name];
                if (ret == null) {
                    ret = thisCache[jQuery.camelCase(name)];
                }
            } else {
                ret = thisCache;
            }
            return ret;
        },
        removeData: function(elem, name, pvt) {
            if (!jQuery.acceptData(elem)) {
                return;
            }
            var thisCache, i, l, isNode = elem.nodeType,
                cache = isNode ? jQuery.cache : elem,
                id = isNode ? elem[jQuery.expando] : jQuery.expando;
            if (!cache[id]) {
                return;
            }
            if (name) {
                thisCache = pvt ? cache[id] : cache[id].data;
                if (thisCache) {
                    if (!jQuery.isArray(name)) {
                        if (name in thisCache) {
                            name = [name];
                        } else {
                            name = jQuery.camelCase(name);
                            if (name in thisCache) {
                                name = [name];
                            } else {
                                name = name.split(" ");
                            }
                        }
                    }
                    for (i = 0, l = name.length; i < l; i++) {
                        delete thisCache[name[i]];
                    }
                    if (!(pvt ? isEmptyDataObject : jQuery.isEmptyObject)(thisCache)) {
                        return;
                    }
                }
            }
            if (!pvt) {
                delete cache[id].data;
                if (!isEmptyDataObject(cache[id])) {
                    return;
                }
            }
            if (isNode) {
                jQuery.cleanData([elem], true);
            } else if (jQuery.support.deleteExpando || cache != cache.window) {
                delete cache[id];
            } else {
                cache[id] = null;
            }
        },
        _data: function(elem, name, data) {
            return jQuery.data(elem, name, data, true);
        },
        acceptData: function(elem) {
            var noData = elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()];
            return !noData || noData !== true && elem.getAttribute("classid") === noData;
        }
    });
    jQuery.fn.extend({
        data: function(key, value) {
            var parts, part, attr, name, l, elem = this[0],
                i = 0,
                data = null;
            if (key === undefined) {
                if (this.length) {
                    data = jQuery.data(elem);
                    if (elem.nodeType === 1 && !jQuery._data(elem, "parsedAttrs")) {
                        attr = elem.attributes;
                        for (l = attr.length; i < l; i++) {
                            name = attr[i].name;
                            if (!name.indexOf("data-")) {
                                name = jQuery.camelCase(name.substring(5));
                                dataAttr(elem, name, data[name]);
                            }
                        }
                        jQuery._data(elem, "parsedAttrs", true);
                    }
                }
                return data;
            }
            if (typeof key === "object") {
                return this.each(function() {
                    jQuery.data(this, key);
                });
            }
            parts = key.split(".", 2);
            parts[1] = parts[1] ? "." + parts[1] : "";
            part = parts[1] + "!";
            return jQuery.access(this, function(value) {
                if (value === undefined) {
                    data = this.triggerHandler("getData" + part, [parts[0]]);
                    if (data === undefined && elem) {
                        data = jQuery.data(elem, key);
                        data = dataAttr(elem, key, data);
                    }
                    return data === undefined && parts[1] ? this.data(parts[0]) : data;
                }
                parts[1] = value;
                this.each(function() {
                    var self = jQuery(this);
                    self.triggerHandler("setData" + part, parts);
                    jQuery.data(this, key, value);
                    self.triggerHandler("changeData" + part, parts);
                });
            }, null, value, arguments.length > 1, null, false);
        },
        removeData: function(key) {
            return this.each(function() {
                jQuery.removeData(this, key);
            });
        }
    });

    function dataAttr(elem, key, data) {
        if (data === undefined && elem.nodeType === 1) {
            var name = "data-" + key.replace(rmultiDash, "-$1").toLowerCase();
            data = elem.getAttribute(name);
            if (typeof data === "string") {
                try {
                    data = data === "true" ? true : data === "false" ? false : data === "null" ? null : +data + "" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data;
                } catch (e) {}
                jQuery.data(elem, key, data);
            } else {
                data = undefined;
            }
        }
        return data;
    }

    function isEmptyDataObject(obj) {
        var name;
        for (name in obj) {
            if (name === "data" && jQuery.isEmptyObject(obj[name])) {
                continue;
            }
            if (name !== "toJSON") {
                return false;
            }
        }
        return true;
    }
    jQuery.extend({
        queue: function(elem, type, data) {
            var queue;
            if (elem) {
                type = (type || "fx") + "queue";
                queue = jQuery._data(elem, type);
                if (data) {
                    if (!queue || jQuery.isArray(data)) {
                        queue = jQuery._data(elem, type, jQuery.makeArray(data));
                    } else {
                        queue.push(data);
                    }
                }
                return queue || [];
            }
        },
        dequeue: function(elem, type) {
            type = type || "fx";
            var queue = jQuery.queue(elem, type),
                startLength = queue.length,
                fn = queue.shift(),
                hooks = jQuery._queueHooks(elem, type),
                next = function() {
                    jQuery.dequeue(elem, type);
                };
            if (fn === "inprogress") {
                fn = queue.shift();
                startLength--;
            }
            if (fn) {
                if (type === "fx") {
                    queue.unshift("inprogress");
                }
                delete hooks.stop;
                fn.call(elem, next, hooks);
            }
            if (!startLength && hooks) {
                hooks.empty.fire();
            }
        },
        _queueHooks: function(elem, type) {
            var key = type + "queueHooks";
            return jQuery._data(elem, key) || jQuery._data(elem, key, {
                empty: jQuery.Callbacks("once memory").add(function() {
                    jQuery.removeData(elem, type + "queue", true);
                    jQuery.removeData(elem, key, true);
                })
            });
        }
    });
    jQuery.fn.extend({
        queue: function(type, data) {
            var setter = 2;
            if (typeof type !== "string") {
                data = type;
                type = "fx";
                setter--;
            }
            if (arguments.length < setter) {
                return jQuery.queue(this[0], type);
            }
            return data === undefined ? this : this.each(function() {
                var queue = jQuery.queue(this, type, data);
                jQuery._queueHooks(this, type);
                if (type === "fx" && queue[0] !== "inprogress") {
                    jQuery.dequeue(this, type);
                }
            });
        },
        dequeue: function(type) {
            return this.each(function() {
                jQuery.dequeue(this, type);
            });
        },
        delay: function(time, type) {
            time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
            type = type || "fx";
            return this.queue(type, function(next, hooks) {
                var timeout = setTimeout(next, time);
                hooks.stop = function() {
                    clearTimeout(timeout);
                };
            });
        },
        clearQueue: function(type) {
            return this.queue(type || "fx", []);
        },
        promise: function(type, obj) {
            var tmp, count = 1,
                defer = jQuery.Deferred(),
                elements = this,
                i = this.length,
                resolve = function() {
                    if (!(--count)) {
                        defer.resolveWith(elements, [elements]);
                    }
                };
            if (typeof type !== "string") {
                obj = type;
                type = undefined;
            }
            type = type || "fx";
            while (i--) {
                tmp = jQuery._data(elements[i], type + "queueHooks");
                if (tmp && tmp.empty) {
                    count++;
                    tmp.empty.add(resolve);
                }
            }
            resolve();
            return defer.promise(obj);
        }
    });
    var nodeHook, boolHook, fixSpecified, rclass = /[\t\r\n]/g,
        rreturn = /\r/g,
        rtype = /^(?:button|input)$/i,
        rfocusable = /^(?:button|input|object|select|textarea)$/i,
        rclickable = /^a(?:rea|)$/i,
        rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
        getSetAttribute = jQuery.support.getSetAttribute;
    jQuery.fn.extend({
        attr: function(name, value) {
            return jQuery.access(this, jQuery.attr, name, value, arguments.length > 1);
        },
        removeAttr: function(name) {
            return this.each(function() {
                jQuery.removeAttr(this, name);
            });
        },
        prop: function(name, value) {
            return jQuery.access(this, jQuery.prop, name, value, arguments.length > 1);
        },
        removeProp: function(name) {
            name = jQuery.propFix[name] || name;
            return this.each(function() {
                try {
                    this[name] = undefined;
                    delete this[name];
                } catch (e) {}
            });
        },
        addClass: function(value) {
            var classNames, i, l, elem, setClass, c, cl;
            if (jQuery.isFunction(value)) {
                return this.each(function(j) {
                    jQuery(this).addClass(value.call(this, j, this.className));
                });
            }
            if (value && typeof value === "string") {
                classNames = value.split(core_rspace);
                for (i = 0, l = this.length; i < l; i++) {
                    elem = this[i];
                    if (elem.nodeType === 1) {
                        if (!elem.className && classNames.length === 1) {
                            elem.className = value;
                        } else {
                            setClass = " " + elem.className + " ";
                            for (c = 0, cl = classNames.length; c < cl; c++) {
                                if (setClass.indexOf(" " + classNames[c] + " ") < 0) {
                                    setClass += classNames[c] + " ";
                                }
                            }
                            elem.className = jQuery.trim(setClass);
                        }
                    }
                }
            }
            return this;
        },
        removeClass: function(value) {
            var removes, className, elem, c, cl, i, l;
            if (jQuery.isFunction(value)) {
                return this.each(function(j) {
                    jQuery(this).removeClass(value.call(this, j, this.className));
                });
            }
            if ((value && typeof value === "string") || value === undefined) {
                removes = (value || "").split(core_rspace);
                for (i = 0, l = this.length; i < l; i++) {
                    elem = this[i];
                    if (elem.nodeType === 1 && elem.className) {
                        className = (" " + elem.className + " ").replace(rclass, " ");
                        for (c = 0, cl = removes.length; c < cl; c++) {
                            while (className.indexOf(" " + removes[c] + " ") >= 0) {
                                className = className.replace(" " + removes[c] + " ", " ");
                            }
                        }
                        elem.className = value ? jQuery.trim(className) : "";
                    }
                }
            }
            return this;
        },
        toggleClass: function(value, stateVal) {
            var type = typeof value,
                isBool = typeof stateVal === "boolean";
            if (jQuery.isFunction(value)) {
                return this.each(function(i) {
                    jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);
                });
            }
            return this.each(function() {
                if (type === "string") {
                    var className, i = 0,
                        self = jQuery(this),
                        state = stateVal,
                        classNames = value.split(core_rspace);
                    while ((className = classNames[i++])) {
                        state = isBool ? state : !self.hasClass(className);
                        self[state ? "addClass" : "removeClass"](className);
                    }
                } else if (type === "undefined" || type === "boolean") {
                    if (this.className) {
                        jQuery._data(this, "__className__", this.className);
                    }
                    this.className = this.className || value === false ? "" : jQuery._data(this, "__className__") || "";
                }
            });
        },
        hasClass: function(selector) {
            var className = " " + selector + " ",
                i = 0,
                l = this.length;
            for (; i < l; i++) {
                if (this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf(className) >= 0) {
                    return true;
                }
            }
            return false;
        },
        val: function(value) {
            var hooks, ret, isFunction, elem = this[0];
            if (!arguments.length) {
                if (elem) {
                    hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];
                    if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) {
                        return ret;
                    }
                    ret = elem.value;
                    return typeof ret === "string" ? ret.replace(rreturn, "") : ret == null ? "" : ret;
                }
                return;
            }
            isFunction = jQuery.isFunction(value);
            return this.each(function(i) {
                var val, self = jQuery(this);
                if (this.nodeType !== 1) {
                    return;
                }
                if (isFunction) {
                    val = value.call(this, i, self.val());
                } else {
                    val = value;
                }
                if (val == null) {
                    val = "";
                } else if (typeof val === "number") {
                    val += "";
                } else if (jQuery.isArray(val)) {
                    val = jQuery.map(val, function(value) {
                        return value == null ? "" : value + "";
                    });
                }
                hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];
                if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) {
                    this.value = val;
                }
            });
        }
    });
    jQuery.extend({
        valHooks: {
            option: {
                get: function(elem) {
                    var val = elem.attributes.value;
                    return !val || val.specified ? elem.value : elem.text;
                }
            },
            select: {
                get: function(elem) {
                    var value, i, max, option, index = elem.selectedIndex,
                        values = [],
                        options = elem.options,
                        one = elem.type === "select-one";
                    if (index < 0) {
                        return null;
                    }
                    i = one ? index : 0;
                    max = one ? index + 1 : options.length;
                    for (; i < max; i++) {
                        option = options[i];
                        if (option.selected && (jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, "optgroup"))) {
                            value = jQuery(option).val();
                            if (one) {
                                return value;
                            }
                            values.push(value);
                        }
                    }
                    if (one && !values.length && options.length) {
                        return jQuery(options[index]).val();
                    }
                    return values;
                },
                set: function(elem, value) {
                    var values = jQuery.makeArray(value);
                    jQuery(elem).find("option").each(function() {
                        this.selected = jQuery.inArray(jQuery(this).val(), values) >= 0;
                    });
                    if (!values.length) {
                        elem.selectedIndex = -1;
                    }
                    return values;
                }
            }
        },
        attrFn: {},
        attr: function(elem, name, value, pass) {
            var ret, hooks, notxml, nType = elem.nodeType;
            if (!elem || nType === 3 || nType === 8 || nType === 2) {
                return;
            }
            if (pass && jQuery.isFunction(jQuery.fn[name])) {
                return jQuery(elem)[name](value);
            }
            if (typeof elem.getAttribute === "undefined") {
                return jQuery.prop(elem, name, value);
            }
            notxml = nType !== 1 || !jQuery.isXMLDoc(elem);
            if (notxml) {
                name = name.toLowerCase();
                hooks = jQuery.attrHooks[name] || (rboolean.test(name) ? boolHook : nodeHook);
            }
            if (value !== undefined) {
                if (value === null) {
                    jQuery.removeAttr(elem, name);
                    return;
                } else if (hooks && "set" in hooks && notxml && (ret = hooks.set(elem, value, name)) !== undefined) {
                    return ret;
                } else {
                    elem.setAttribute(name, value + "");
                    return value;
                }
            } else if (hooks && "get" in hooks && notxml && (ret = hooks.get(elem, name)) !== null) {
                return ret;
            } else {
                ret = elem.getAttribute(name);
                return ret === null ? undefined : ret;
            }
        },
        removeAttr: function(elem, value) {
            var propName, attrNames, name, isBool, i = 0;
            if (value && elem.nodeType === 1) {
                attrNames = value.split(core_rspace);
                for (; i < attrNames.length; i++) {
                    name = attrNames[i];
                    if (name) {
                        propName = jQuery.propFix[name] || name;
                        isBool = rboolean.test(name);
                        if (!isBool) {
                            jQuery.attr(elem, name, "");
                        }
                        elem.removeAttribute(getSetAttribute ? name : propName);
                        if (isBool && propName in elem) {
                            elem[propName] = false;
                        }
                    }
                }
            }
        },
        attrHooks: {
            type: {
                set: function(elem, value) {
                    if (rtype.test(elem.nodeName) && elem.parentNode) {
                        jQuery.error("type property can't be changed");
                    } else if (!jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input")) {
                        var val = elem.value;
                        elem.setAttribute("type", value);
                        if (val) {
                            elem.value = val;
                        }
                        return value;
                    }
                }
            },
            value: {
                get: function(elem, name) {
                    if (nodeHook && jQuery.nodeName(elem, "button")) {
                        return nodeHook.get(elem, name);
                    }
                    return name in elem ? elem.value : null;
                },
                set: function(elem, value, name) {
                    if (nodeHook && jQuery.nodeName(elem, "button")) {
                        return nodeHook.set(elem, value, name);
                    }
                    elem.value = value;
                }
            }
        },
        propFix: {
            tabindex: "tabIndex",
            readonly: "readOnly",
            "for": "htmlFor",
            "class": "className",
            maxlength: "maxLength",
            cellspacing: "cellSpacing",
            cellpadding: "cellPadding",
            rowspan: "rowSpan",
            colspan: "colSpan",
            usemap: "useMap",
            frameborder: "frameBorder",
            contenteditable: "contentEditable"
        },
        prop: function(elem, name, value) {
            var ret, hooks, notxml, nType = elem.nodeType;
            if (!elem || nType === 3 || nType === 8 || nType === 2) {
                return;
            }
            notxml = nType !== 1 || !jQuery.isXMLDoc(elem);
            if (notxml) {
                name = jQuery.propFix[name] || name;
                hooks = jQuery.propHooks[name];
            }
            if (value !== undefined) {
                if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
                    return ret;
                } else {
                    return (elem[name] = value);
                }
            } else {
                if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
                    return ret;
                } else {
                    return elem[name];
                }
            }
        },
        propHooks: {
            tabIndex: {
                get: function(elem) {
                    var attributeNode = elem.getAttributeNode("tabindex");
                    return attributeNode && attributeNode.specified ? parseInt(attributeNode.value, 10) : rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href ? 0 : undefined;
                }
            }
        }
    });
    boolHook = {
        get: function(elem, name) {
            var attrNode, property = jQuery.prop(elem, name);
            return property === true || typeof property !== "boolean" && (attrNode = elem.getAttributeNode(name)) && attrNode.nodeValue !== false ? name.toLowerCase() : undefined;
        },
        set: function(elem, value, name) {
            var propName;
            if (value === false) {
                jQuery.removeAttr(elem, name);
            } else {
                propName = jQuery.propFix[name] || name;
                if (propName in elem) {
                    elem[propName] = true;
                }
                elem.setAttribute(name, name.toLowerCase());
            }
            return name;
        }
    };
    if (!getSetAttribute) {
        fixSpecified = {
            name: true,
            id: true,
            coords: true
        };
        nodeHook = jQuery.valHooks.button = {
            get: function(elem, name) {
                var ret;
                ret = elem.getAttributeNode(name);
                return ret && (fixSpecified[name] ? ret.value !== "" : ret.specified) ? ret.value : undefined;
            },
            set: function(elem, value, name) {
                var ret = elem.getAttributeNode(name);
                if (!ret) {
                    ret = document.createAttribute(name);
                    elem.setAttributeNode(ret);
                }
                return (ret.value = value + "");
            }
        };
        jQuery.each(["width", "height"], function(i, name) {
            jQuery.attrHooks[name] = jQuery.extend(jQuery.attrHooks[name], {
                set: function(elem, value) {
                    if (value === "") {
                        elem.setAttribute(name, "auto");
                        return value;
                    }
                }
            });
        });
        jQuery.attrHooks.contenteditable = {
            get: nodeHook.get,
            set: function(elem, value, name) {
                if (value === "") {
                    value = "false";
                }
                nodeHook.set(elem, value, name);
            }
        };
    }
    if (!jQuery.support.hrefNormalized) {
        jQuery.each(["href", "src", "width", "height"], function(i, name) {
            jQuery.attrHooks[name] = jQuery.extend(jQuery.attrHooks[name], {
                get: function(elem) {
                    var ret = elem.getAttribute(name, 2);
                    return ret === null ? undefined : ret;
                }
            });
        });
    }
    if (!jQuery.support.style) {
        jQuery.attrHooks.style = {
            get: function(elem) {
                return elem.style.cssText.toLowerCase() || undefined;
            },
            set: function(elem, value) {
                return (elem.style.cssText = value + "");
            }
        };
    }
    if (!jQuery.support.optSelected) {
        jQuery.propHooks.selected = jQuery.extend(jQuery.propHooks.selected, {
            get: function(elem) {
                var parent = elem.parentNode;
                if (parent) {
                    parent.selectedIndex;
                    if (parent.parentNode) {
                        parent.parentNode.selectedIndex;
                    }
                }
                return null;
            }
        });
    }
    if (!jQuery.support.enctype) {
        jQuery.propFix.enctype = "encoding";
    }
    if (!jQuery.support.checkOn) {
        jQuery.each(["radio", "checkbox"], function() {
            jQuery.valHooks[this] = {
                get: function(elem) {
                    return elem.getAttribute("value") === null ? "on" : elem.value;
                }
            };
        });
    }
    jQuery.each(["radio", "checkbox"], function() {
        jQuery.valHooks[this] = jQuery.extend(jQuery.valHooks[this], {
            set: function(elem, value) {
                if (jQuery.isArray(value)) {
                    return (elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0);
                }
            }
        });
    });
    var rformElems = /^(?:textarea|input|select)$/i,
        rtypenamespace = /^([^\.]*|)(?:\.(.+)|)$/,
        rhoverHack = /(?:^|\s)hover(\.\S+|)\b/,
        rkeyEvent = /^key/,
        rmouseEvent = /^(?:mouse|contextmenu)|click/,
        rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
        hoverHack = function(events) {
            return jQuery.event.special.hover ? events : events.replace(rhoverHack, "mouseenter$1 mouseleave$1");
        };
    jQuery.event = {
        add: function(elem, types, handler, data, selector) {
            var elemData, eventHandle, events, t, tns, type, namespaces, handleObj, handleObjIn, handlers, special;
            if (elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery._data(elem))) {
                return;
            }
            if (handler.handler) {
                handleObjIn = handler;
                handler = handleObjIn.handler;
                selector = handleObjIn.selector;
            }
            if (!handler.guid) {
                handler.guid = jQuery.guid++;
            }
            events = elemData.events;
            if (!events) {
                elemData.events = events = {};
            }
            eventHandle = elemData.handle;
            if (!eventHandle) {
                elemData.handle = eventHandle = function(e) {
                    return typeof jQuery !== "undefined" && (!e || jQuery.event.triggered !== e.type) ? jQuery.event.dispatch.apply(eventHandle.elem, arguments) : undefined;
                };
                eventHandle.elem = elem;
            }
            types = jQuery.trim(hoverHack(types)).split(" ");
            for (t = 0; t < types.length; t++) {
                tns = rtypenamespace.exec(types[t]) || [];
                type = tns[1];
                namespaces = (tns[2] || "").split(".").sort();
                special = jQuery.event.special[type] || {};
                type = (selector ? special.delegateType : special.bindType) || type;
                special = jQuery.event.special[type] || {};
                handleObj = jQuery.extend({
                    type: type,
                    origType: tns[1],
                    data: data,
                    handler: handler,
                    guid: handler.guid,
                    selector: selector,
                    needsContext: selector && jQuery.expr.match.needsContext.test(selector),
                    namespace: namespaces.join(".")
                }, handleObjIn);
                handlers = events[type];
                if (!handlers) {
                    handlers = events[type] = [];
                    handlers.delegateCount = 0;
                    if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
                        if (elem.addEventListener) {
                            elem.addEventListener(type, eventHandle, false);
                        } else if (elem.attachEvent) {
                            elem.attachEvent("on" + type, eventHandle);
                        }
                    }
                }
                if (special.add) {
                    special.add.call(elem, handleObj);
                    if (!handleObj.handler.guid) {
                        handleObj.handler.guid = handler.guid;
                    }
                }
                if (selector) {
                    handlers.splice(handlers.delegateCount++, 0, handleObj);
                } else {
                    handlers.push(handleObj);
                }
                jQuery.event.global[type] = true;
            }
            elem = null;
        },
        global: {},
        remove: function(elem, types, handler, selector, mappedTypes) {
            var t, tns, type, origType, namespaces, origCount, j, events, special, eventType, handleObj, elemData = jQuery.hasData(elem) && jQuery._data(elem);
            if (!elemData || !(events = elemData.events)) {
                return;
            }
            types = jQuery.trim(hoverHack(types || "")).split(" ");
            for (t = 0; t < types.length; t++) {
                tns = rtypenamespace.exec(types[t]) || [];
                type = origType = tns[1];
                namespaces = tns[2];
                if (!type) {
                    for (type in events) {
                        jQuery.event.remove(elem, type + types[t], handler, selector, true);
                    }
                    continue;
                }
                special = jQuery.event.special[type] || {};
                type = (selector ? special.delegateType : special.bindType) || type;
                eventType = events[type] || [];
                origCount = eventType.length;
                namespaces = namespaces ? new RegExp("(^|\\.)" + namespaces.split(".").sort().join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
                for (j = 0; j < eventType.length; j++) {
                    handleObj = eventType[j];
                    if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!namespaces || namespaces.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
                        eventType.splice(j--, 1);
                        if (handleObj.selector) {
                            eventType.delegateCount--;
                        }
                        if (special.remove) {
                            special.remove.call(elem, handleObj);
                        }
                    }
                }
                if (eventType.length === 0 && origCount !== eventType.length) {
                    if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {
                        jQuery.removeEvent(elem, type, elemData.handle);
                    }
                    delete events[type];
                }
            }
            if (jQuery.isEmptyObject(events)) {
                delete elemData.handle;
                jQuery.removeData(elem, "events", true);
            }
        },
        customEvent: {
            "getData": true,
            "setData": true,
            "changeData": true
        },
        trigger: function(event, data, elem, onlyHandlers) {
            if (elem && (elem.nodeType === 3 || elem.nodeType === 8)) {
                return;
            }
            var cache, exclusive, i, cur, old, ontype, special, handle, eventPath, bubbleType, type = event.type || event,
                namespaces = [];
            if (rfocusMorph.test(type + jQuery.event.triggered)) {
                return;
            }
            if (type.indexOf("!") >= 0) {
                type = type.slice(0, -1);
                exclusive = true;
            }
            if (type.indexOf(".") >= 0) {
                namespaces = type.split(".");
                type = namespaces.shift();
                namespaces.sort();
            }
            if ((!elem || jQuery.event.customEvent[type]) && !jQuery.event.global[type]) {
                return;
            }
            event = typeof event === "object" ? event[jQuery.expando] ? event : new jQuery.Event(type, event) : new jQuery.Event(type);
            event.type = type;
            event.isTrigger = true;
            event.exclusive = exclusive;
            event.namespace = namespaces.join(".");
            event.namespace_re = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
            ontype = type.indexOf(":") < 0 ? "on" + type : "";
            if (!elem) {
                cache = jQuery.cache;
                for (i in cache) {
                    if (cache[i].events && cache[i].events[type]) {
                        jQuery.event.trigger(event, data, cache[i].handle.elem, true);
                    }
                }
                return;
            }
            event.result = undefined;
            if (!event.target) {
                event.target = elem;
            }
            data = data != null ? jQuery.makeArray(data) : [];
            data.unshift(event);
            special = jQuery.event.special[type] || {};
            if (special.trigger && special.trigger.apply(elem, data) === false) {
                return;
            }
            eventPath = [
                [elem, special.bindType || type]
            ];
            if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
                bubbleType = special.delegateType || type;
                cur = rfocusMorph.test(bubbleType + type) ? elem : elem.parentNode;
                for (old = elem; cur; cur = cur.parentNode) {
                    eventPath.push([cur, bubbleType]);
                    old = cur;
                }
                if (old === (elem.ownerDocument || document)) {
                    eventPath.push([old.defaultView || old.parentWindow || window, bubbleType]);
                }
            }
            for (i = 0; i < eventPath.length && !event.isPropagationStopped(); i++) {
                cur = eventPath[i][0];
                event.type = eventPath[i][1];
                handle = (jQuery._data(cur, "events") || {})[event.type] && jQuery._data(cur, "handle");
                if (handle) {
                    handle.apply(cur, data);
                }
                handle = ontype && cur[ontype];
                if (handle && jQuery.acceptData(cur) && handle.apply && handle.apply(cur, data) === false) {
                    event.preventDefault();
                }
            }
            event.type = type;
            if (!onlyHandlers && !event.isDefaultPrevented()) {
                if ((!special._default || special._default.apply(elem.ownerDocument, data) === false) && !(type === "click" && jQuery.nodeName(elem, "a")) && jQuery.acceptData(elem)) {
                    if (ontype && elem[type] && ((type !== "focus" && type !== "blur") || event.target.offsetWidth !== 0) && !jQuery.isWindow(elem)) {
                        old = elem[ontype];
                        if (old) {
                            elem[ontype] = null;
                        }
                        jQuery.event.triggered = type;
                        elem[type]();
                        jQuery.event.triggered = undefined;
                        if (old) {
                            elem[ontype] = old;
                        }
                    }
                }
            }
            return event.result;
        },
        dispatch: function(event) {
            event = jQuery.event.fix(event || window.event);
            var i, j, cur, ret, selMatch, matched, matches, handleObj, sel, related, handlers = ((jQuery._data(this, "events") || {})[event.type] || []),
                delegateCount = handlers.delegateCount,
                args = core_slice.call(arguments),
                run_all = !event.exclusive && !event.namespace,
                special = jQuery.event.special[event.type] || {}, handlerQueue = [];
            args[0] = event;
            event.delegateTarget = this;
            if (special.preDispatch && special.preDispatch.call(this, event) === false) {
                return;
            }
            if (delegateCount && !(event.button && event.type === "click")) {
                for (cur = event.target; cur != this; cur = cur.parentNode || this) {
                    if (cur.disabled !== true || event.type !== "click") {
                        selMatch = {};
                        matches = [];
                        for (i = 0; i < delegateCount; i++) {
                            handleObj = handlers[i];
                            sel = handleObj.selector;
                            if (selMatch[sel] === undefined) {
                                selMatch[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) >= 0 : jQuery.find(sel, this, null, [cur]).length;
                            }
                            if (selMatch[sel]) {
                                matches.push(handleObj);
                            }
                        }
                        if (matches.length) {
                            handlerQueue.push({
                                elem: cur,
                                matches: matches
                            });
                        }
                    }
                }
            }
            if (handlers.length > delegateCount) {
                handlerQueue.push({
                    elem: this,
                    matches: handlers.slice(delegateCount)
                });
            }
            for (i = 0; i < handlerQueue.length && !event.isPropagationStopped(); i++) {
                matched = handlerQueue[i];
                event.currentTarget = matched.elem;
                for (j = 0; j < matched.matches.length && !event.isImmediatePropagationStopped(); j++) {
                    handleObj = matched.matches[j];
                    if (run_all || (!event.namespace && !handleObj.namespace) || event.namespace_re && event.namespace_re.test(handleObj.namespace)) {
                        event.data = handleObj.data;
                        event.handleObj = handleObj;
                        ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
                        if (ret !== undefined) {
                            event.result = ret;
                            if (ret === false) {
                                event.preventDefault();
                                event.stopPropagation();
                            }
                        }
                    }
                }
            }
            if (special.postDispatch) {
                special.postDispatch.call(this, event);
            }
            return event.result;
        },
        props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(event, original) {
                if (event.which == null) {
                    event.which = original.charCode != null ? original.charCode : original.keyCode;
                }
                return event;
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(event, original) {
                var eventDoc, doc, body, button = original.button,
                    fromElement = original.fromElement;
                if (event.pageX == null && original.clientX != null) {
                    eventDoc = event.target.ownerDocument || document;
                    doc = eventDoc.documentElement;
                    body = eventDoc.body;
                    event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
                    event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
                }
                if (!event.relatedTarget && fromElement) {
                    event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
                }
                if (!event.which && button !== undefined) {
                    event.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));
                }
                return event;
            }
        },
        fix: function(event) {
            if (event[jQuery.expando]) {
                return event;
            }
            var i, prop, originalEvent = event,
                fixHook = jQuery.event.fixHooks[event.type] || {}, copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;
            event = jQuery.Event(originalEvent);
            for (i = copy.length; i;) {
                prop = copy[--i];
                event[prop] = originalEvent[prop];
            }
            if (!event.target) {
                event.target = originalEvent.srcElement || document;
            }
            if (event.target.nodeType === 3) {
                event.target = event.target.parentNode;
            }
            event.metaKey = !! event.metaKey;
            return fixHook.filter ? fixHook.filter(event, originalEvent) : event;
        },
        special: {
            load: {
                noBubble: true
            },
            focus: {
                delegateType: "focusin"
            },
            blur: {
                delegateType: "focusout"
            },
            beforeunload: {
                setup: function(data, namespaces, eventHandle) {
                    if (jQuery.isWindow(this)) {
                        this.onbeforeunload = eventHandle;
                    }
                },
                teardown: function(namespaces, eventHandle) {
                    if (this.onbeforeunload === eventHandle) {
                        this.onbeforeunload = null;
                    }
                }
            }
        },
        simulate: function(type, elem, event, bubble) {
            var e = jQuery.extend(new jQuery.Event(), event, {
                type: type,
                isSimulated: true,
                originalEvent: {}
            });
            if (bubble) {
                jQuery.event.trigger(e, null, elem);
            } else {
                jQuery.event.dispatch.call(elem, e);
            }
            if (e.isDefaultPrevented()) {
                event.preventDefault();
            }
        }
    };
    jQuery.event.handle = jQuery.event.dispatch;
    jQuery.removeEvent = document.removeEventListener ? function(elem, type, handle) {
        if (elem.removeEventListener) {
            elem.removeEventListener(type, handle, false);
        }
    } : function(elem, type, handle) {
        var name = "on" + type;
        if (elem.detachEvent) {
            if (typeof elem[name] === "undefined") {
                elem[name] = null;
            }
            elem.detachEvent(name, handle);
        }
    };
    jQuery.Event = function(src, props) {
        if (!(this instanceof jQuery.Event)) {
            return new jQuery.Event(src, props);
        }
        if (src && src.type) {
            this.originalEvent = src;
            this.type = src.type;
            this.isDefaultPrevented = (src.defaultPrevented || src.returnValue === false || src.getPreventDefault && src.getPreventDefault()) ? returnTrue : returnFalse;
        } else {
            this.type = src;
        }
        if (props) {
            jQuery.extend(this, props);
        }
        this.timeStamp = src && src.timeStamp || jQuery.now();
        this[jQuery.expando] = true;
    };

    function returnFalse() {
        return false;
    }

    function returnTrue() {
        return true;
    }
    jQuery.Event.prototype = {
        preventDefault: function() {
            this.isDefaultPrevented = returnTrue;
            var e = this.originalEvent;
            if (!e) {
                return;
            }
            if (e.preventDefault) {
                e.preventDefault();
            } else {
                e.returnValue = false;
            }
        },
        stopPropagation: function() {
            this.isPropagationStopped = returnTrue;
            var e = this.originalEvent;
            if (!e) {
                return;
            }
            if (e.stopPropagation) {
                e.stopPropagation();
            }
            e.cancelBubble = true;
        },
        stopImmediatePropagation: function() {
            this.isImmediatePropagationStopped = returnTrue;
            this.stopPropagation();
        },
        isDefaultPrevented: returnFalse,
        isPropagationStopped: returnFalse,
        isImmediatePropagationStopped: returnFalse
    };
    jQuery.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }, function(orig, fix) {
        jQuery.event.special[orig] = {
            delegateType: fix,
            bindType: fix,
            handle: function(event) {
                var ret, target = this,
                    related = event.relatedTarget,
                    handleObj = event.handleObj,
                    selector = handleObj.selector;
                if (!related || (related !== target && !jQuery.contains(target, related))) {
                    event.type = handleObj.origType;
                    ret = handleObj.handler.apply(this, arguments);
                    event.type = fix;
                }
                return ret;
            }
        };
    });
    if (!jQuery.support.submitBubbles) {
        jQuery.event.special.submit = {
            setup: function() {
                if (jQuery.nodeName(this, "form")) {
                    return false;
                }
                jQuery.event.add(this, "click._submit keypress._submit", function(e) {
                    var elem = e.target,
                        form = jQuery.nodeName(elem, "input") || jQuery.nodeName(elem, "button") ? elem.form : undefined;
                    if (form && !jQuery._data(form, "_submit_attached")) {
                        jQuery.event.add(form, "submit._submit", function(event) {
                            event._submit_bubble = true;
                        });
                        jQuery._data(form, "_submit_attached", true);
                    }
                });
            },
            postDispatch: function(event) {
                if (event._submit_bubble) {
                    delete event._submit_bubble;
                    if (this.parentNode && !event.isTrigger) {
                        jQuery.event.simulate("submit", this.parentNode, event, true);
                    }
                }
            },
            teardown: function() {
                if (jQuery.nodeName(this, "form")) {
                    return false;
                }
                jQuery.event.remove(this, "._submit");
            }
        };
    }
    if (!jQuery.support.changeBubbles) {
        jQuery.event.special.change = {
            setup: function() {
                if (rformElems.test(this.nodeName)) {
                    if (this.type === "checkbox" || this.type === "radio") {
                        jQuery.event.add(this, "propertychange._change", function(event) {
                            if (event.originalEvent.propertyName === "checked") {
                                this._just_changed = true;
                            }
                        });
                        jQuery.event.add(this, "click._change", function(event) {
                            if (this._just_changed && !event.isTrigger) {
                                this._just_changed = false;
                            }
                            jQuery.event.simulate("change", this, event, true);
                        });
                    }
                    return false;
                }
                jQuery.event.add(this, "beforeactivate._change", function(e) {
                    var elem = e.target;
                    if (rformElems.test(elem.nodeName) && !jQuery._data(elem, "_change_attached")) {
                        jQuery.event.add(elem, "change._change", function(event) {
                            if (this.parentNode && !event.isSimulated && !event.isTrigger) {
                                jQuery.event.simulate("change", this.parentNode, event, true);
                            }
                        });
                        jQuery._data(elem, "_change_attached", true);
                    }
                });
            },
            handle: function(event) {
                var elem = event.target;
                if (this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox")) {
                    return event.handleObj.handler.apply(this, arguments);
                }
            },
            teardown: function() {
                jQuery.event.remove(this, "._change");
                return !rformElems.test(this.nodeName);
            }
        };
    }
    if (!jQuery.support.focusinBubbles) {
        jQuery.each({
            focus: "focusin",
            blur: "focusout"
        }, function(orig, fix) {
            var attaches = 0,
                handler = function(event) {
                    jQuery.event.simulate(fix, event.target, jQuery.event.fix(event), true);
                };
            jQuery.event.special[fix] = {
                setup: function() {
                    if (attaches++ === 0) {
                        document.addEventListener(orig, handler, true);
                    }
                },
                teardown: function() {
                    if (--attaches === 0) {
                        document.removeEventListener(orig, handler, true);
                    }
                }
            };
        });
    }
    jQuery.fn.extend({
        on: function(types, selector, data, fn, one) {
            var origFn, type;
            if (typeof types === "object") {
                if (typeof selector !== "string") {
                    data = data || selector;
                    selector = undefined;
                }
                for (type in types) {
                    this.on(type, selector, data, types[type], one);
                }
                return this;
            }
            if (data == null && fn == null) {
                fn = selector;
                data = selector = undefined;
            } else if (fn == null) {
                if (typeof selector === "string") {
                    fn = data;
                    data = undefined;
                } else {
                    fn = data;
                    data = selector;
                    selector = undefined;
                }
            }
            if (fn === false) {
                fn = returnFalse;
            } else if (!fn) {
                return this;
            }
            if (one === 1) {
                origFn = fn;
                fn = function(event) {
                    jQuery().off(event);
                    return origFn.apply(this, arguments);
                };
                fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
            }
            return this.each(function() {
                jQuery.event.add(this, types, fn, data, selector);
            });
        },
        one: function(types, selector, data, fn) {
            return this.on(types, selector, data, fn, 1);
        },
        off: function(types, selector, fn) {
            var handleObj, type;
            if (types && types.preventDefault && types.handleObj) {
                handleObj = types.handleObj;
                jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
                return this;
            }
            if (typeof types === "object") {
                for (type in types) {
                    this.off(type, selector, types[type]);
                }
                return this;
            }
            if (selector === false || typeof selector === "function") {
                fn = selector;
                selector = undefined;
            }
            if (fn === false) {
                fn = returnFalse;
            }
            return this.each(function() {
                jQuery.event.remove(this, types, fn, selector);
            });
        },
        bind: function(types, data, fn) {
            return this.on(types, null, data, fn);
        },
        unbind: function(types, fn) {
            return this.off(types, null, fn);
        },
        live: function(types, data, fn) {
            jQuery(this.context).on(types, this.selector, data, fn);
            return this;
        },
        die: function(types, fn) {
            jQuery(this.context).off(types, this.selector || "**", fn);
            return this;
        },
        delegate: function(selector, types, data, fn) {
            return this.on(types, selector, data, fn);
        },
        undelegate: function(selector, types, fn) {
            return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);
        },
        trigger: function(type, data) {
            return this.each(function() {
                jQuery.event.trigger(type, data, this);
            });
        },
        triggerHandler: function(type, data) {
            if (this[0]) {
                return jQuery.event.trigger(type, data, this[0], true);
            }
        },
        toggle: function(fn) {
            var args = arguments,
                guid = fn.guid || jQuery.guid++,
                i = 0,
                toggler = function(event) {
                    var lastToggle = (jQuery._data(this, "lastToggle" + fn.guid) || 0) % i;
                    jQuery._data(this, "lastToggle" + fn.guid, lastToggle + 1);
                    event.preventDefault();
                    return args[lastToggle].apply(this, arguments) || false;
                };
            toggler.guid = guid;
            while (i < args.length) {
                args[i++].guid = guid;
            }
            return this.click(toggler);
        },
        hover: function(fnOver, fnOut) {
            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
        }
    });
    jQuery.each(("blur focus focusin focusout load resize scroll unload click dblclick " + "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " + "change select submit keydown keypress keyup error contextmenu").split(" "), function(i, name) {
        jQuery.fn[name] = function(data, fn) {
            if (fn == null) {
                fn = data;
                data = null;
            }
            return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
        };
        if (rkeyEvent.test(name)) {
            jQuery.event.fixHooks[name] = jQuery.event.keyHooks;
        }
        if (rmouseEvent.test(name)) {
            jQuery.event.fixHooks[name] = jQuery.event.mouseHooks;
        }
    });
    (function(window, undefined) {
        var cachedruns, assertGetIdNotName, Expr, getText, isXML, contains, compile, sortOrder, hasDuplicate, outermostContext, baseHasDuplicate = true,
            strundefined = "undefined",
            expando = ("sizcache" + Math.random()).replace(".", ""),
            Token = String,
            document = window.document,
            docElem = document.documentElement,
            dirruns = 0,
            done = 0,
            pop = [].pop,
            push = [].push,
            slice = [].slice,
            indexOf = [].indexOf || function(elem) {
                var i = 0,
                    len = this.length;
                for (; i < len; i++) {
                    if (this[i] === elem) {
                        return i;
                    }
                }
                return -1;
            }, markFunction = function(fn, value) {
                fn[expando] = value == null || value;
                return fn;
            }, createCache = function() {
                var cache = {}, keys = [];
                return markFunction(function(key, value) {
                    if (keys.push(key) > Expr.cacheLength) {
                        delete cache[keys.shift()];
                    }
                    return (cache[key] = value);
                }, cache);
            }, classCache = createCache(),
            tokenCache = createCache(),
            compilerCache = createCache(),
            whitespace = "[\\x20\\t\\r\\n\\f]",
            characterEncoding = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",
            identifier = characterEncoding.replace("w", "w#"),
            operators = "([*^$|!~]?=)",
            attributes = "\\[" + whitespace + "*(" + characterEncoding + ")" + whitespace + "*(?:" + operators + whitespace + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + ")|)|)" + whitespace + "*\\]",
            pseudos = ":(" + characterEncoding + ")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:" + attributes + ")|[^:]|\\\\.)*|.*))\\)|)",
            pos = ":(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)",
            rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),
            rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
            rcombinators = new RegExp("^" + whitespace + "*([\\x20\\t\\r\\n\\f>+~])" + whitespace + "*"),
            rpseudo = new RegExp(pseudos),
            rquickExpr = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,
            rnot = /^:not/,
            rsibling = /[\x20\t\r\n\f]*[+~]/,
            rendsWithNot = /:not\($/,
            rheader = /h\d/i,
            rinputs = /input|select|textarea|button/i,
            rbackslash = /\\(?!\\)/g,
            matchExpr = {
                "ID": new RegExp("^#(" + characterEncoding + ")"),
                "CLASS": new RegExp("^\\.(" + characterEncoding + ")"),
                "NAME": new RegExp("^\\[name=['\"]?(" + characterEncoding + ")['\"]?\\]"),
                "TAG": new RegExp("^(" + characterEncoding.replace("w", "w*") + ")"),
                "ATTR": new RegExp("^" + attributes),
                "PSEUDO": new RegExp("^" + pseudos),
                "POS": new RegExp(pos, "i"),
                "CHILD": new RegExp("^:(only|nth|first|last)-child(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
                "needsContext": new RegExp("^" + whitespace + "*[>+~]|" + pos, "i")
            }, assert = function(fn) {
                var div = document.createElement("div");
                try {
                    return fn(div);
                } catch (e) {
                    return false;
                } finally {
                    div = null;
                }
            }, assertTagNameNoComments = assert(function(div) {
                div.appendChild(document.createComment(""));
                return !div.getElementsByTagName("*").length;
            }),
            assertHrefNotNormalized = assert(function(div) {
                div.innerHTML = "<a href='#'></a>";
                return div.firstChild && typeof div.firstChild.getAttribute !== strundefined && div.firstChild.getAttribute("href") === "#";
            }),
            assertAttributes = assert(function(div) {
                div.innerHTML = "<select></select>";
                var type = typeof div.lastChild.getAttribute("multiple");
                return type !== "boolean" && type !== "string";
            }),
            assertUsableClassName = assert(function(div) {
                div.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>";
                if (!div.getElementsByClassName || !div.getElementsByClassName("e").length) {
                    return false;
                }
                div.lastChild.className = "e";
                return div.getElementsByClassName("e").length === 2;
            }),
            assertUsableName = assert(function(div) {
                div.id = expando + 0;
                div.innerHTML = "<a name='" + expando + "'></a><div name='" + expando + "'></div>";
                docElem.insertBefore(div, docElem.firstChild);
                var pass = document.getElementsByName && document.getElementsByName(expando).length === 2 +
                    document.getElementsByName(expando + 0).length;
                assertGetIdNotName = !document.getElementById(expando);
                docElem.removeChild(div);
                return pass;
            });
        try {
            slice.call(docElem.childNodes, 0)[0].nodeType;
        } catch (e) {
            slice = function(i) {
                var elem, results = [];
                for (;
                    (elem = this[i]); i++) {
                    results.push(elem);
                }
                return results;
            };
        }

        function Sizzle(selector, context, results, seed) {
            results = results || [];
            context = context || document;
            var match, elem, xml, m, nodeType = context.nodeType;
            if (!selector || typeof selector !== "string") {
                return results;
            }
            if (nodeType !== 1 && nodeType !== 9) {
                return [];
            }
            xml = isXML(context);
            if (!xml && !seed) {
                if ((match = rquickExpr.exec(selector))) {
                    if ((m = match[1])) {
                        if (nodeType === 9) {
                            elem = context.getElementById(m);
                            if (elem && elem.parentNode) {
                                if (elem.id === m) {
                                    results.push(elem);
                                    return results;
                                }
                            } else {
                                return results;
                            }
                        } else {
                            if (context.ownerDocument && (elem = context.ownerDocument.getElementById(m)) && contains(context, elem) && elem.id === m) {
                                results.push(elem);
                                return results;
                            }
                        }
                    } else if (match[2]) {
                        push.apply(results, slice.call(context.getElementsByTagName(selector), 0));
                        return results;
                    } else if ((m = match[3]) && assertUsableClassName && context.getElementsByClassName) {
                        push.apply(results, slice.call(context.getElementsByClassName(m), 0));
                        return results;
                    }
                }
            }
            return select(selector.replace(rtrim, "$1"), context, results, seed, xml);
        }
        Sizzle.matches = function(expr, elements) {
            return Sizzle(expr, null, null, elements);
        };
        Sizzle.matchesSelector = function(elem, expr) {
            return Sizzle(expr, null, null, [elem]).length > 0;
        };

        function createInputPseudo(type) {
            return function(elem) {
                var name = elem.nodeName.toLowerCase();
                return name === "input" && elem.type === type;
            };
        }

        function createButtonPseudo(type) {
            return function(elem) {
                var name = elem.nodeName.toLowerCase();
                return (name === "input" || name === "button") && elem.type === type;
            };
        }

        function createPositionalPseudo(fn) {
            return markFunction(function(argument) {
                argument = +argument;
                return markFunction(function(seed, matches) {
                    var j, matchIndexes = fn([], seed.length, argument),
                        i = matchIndexes.length;
                    while (i--) {
                        if (seed[(j = matchIndexes[i])]) {
                            seed[j] = !(matches[j] = seed[j]);
                        }
                    }
                });
            });
        }
        getText = Sizzle.getText = function(elem) {
            var node, ret = "",
                i = 0,
                nodeType = elem.nodeType;
            if (nodeType) {
                if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
                    if (typeof elem.textContent === "string") {
                        return elem.textContent;
                    } else {
                        for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                            ret += getText(elem);
                        }
                    }
                } else if (nodeType === 3 || nodeType === 4) {
                    return elem.nodeValue;
                }
            } else {
                for (;
                    (node = elem[i]); i++) {
                    ret += getText(node);
                }
            }
            return ret;
        };
        isXML = Sizzle.isXML = function(elem) {
            var documentElement = elem && (elem.ownerDocument || elem).documentElement;
            return documentElement ? documentElement.nodeName !== "HTML" : false;
        };
        contains = Sizzle.contains = docElem.contains ? function(a, b) {
            var adown = a.nodeType === 9 ? a.documentElement : a,
                bup = b && b.parentNode;
            return a === bup || !! (bup && bup.nodeType === 1 && adown.contains && adown.contains(bup));
        } : docElem.compareDocumentPosition ? function(a, b) {
            return b && !! (a.compareDocumentPosition(b) & 16);
        } : function(a, b) {
            while ((b = b.parentNode)) {
                if (b === a) {
                    return true;
                }
            }
            return false;
        };
        Sizzle.attr = function(elem, name) {
            var val, xml = isXML(elem);
            if (!xml) {
                name = name.toLowerCase();
            }
            if ((val = Expr.attrHandle[name])) {
                return val(elem);
            }
            if (xml || assertAttributes) {
                return elem.getAttribute(name);
            }
            val = elem.getAttributeNode(name);
            return val ? typeof elem[name] === "boolean" ? elem[name] ? name : null : val.specified ? val.value : null : null;
        };
        Expr = Sizzle.selectors = {
            cacheLength: 50,
            createPseudo: markFunction,
            match: matchExpr,
            attrHandle: assertHrefNotNormalized ? {} : {
                "href": function(elem) {
                    return elem.getAttribute("href", 2);
                },
                "type": function(elem) {
                    return elem.getAttribute("type");
                }
            },
            find: {
                "ID": assertGetIdNotName ? function(id, context, xml) {
                    if (typeof context.getElementById !== strundefined && !xml) {
                        var m = context.getElementById(id);
                        return m && m.parentNode ? [m] : [];
                    }
                } : function(id, context, xml) {
                    if (typeof context.getElementById !== strundefined && !xml) {
                        var m = context.getElementById(id);
                        return m ? m.id === id || typeof m.getAttributeNode !== strundefined && m.getAttributeNode("id").value === id ? [m] : undefined : [];
                    }
                },
                "TAG": assertTagNameNoComments ? function(tag, context) {
                    if (typeof context.getElementsByTagName !== strundefined) {
                        return context.getElementsByTagName(tag);
                    }
                } : function(tag, context) {
                    var results = context.getElementsByTagName(tag);
                    if (tag === "*") {
                        var elem, tmp = [],
                            i = 0;
                        for (;
                            (elem = results[i]); i++) {
                            if (elem.nodeType === 1) {
                                tmp.push(elem);
                            }
                        }
                        return tmp;
                    }
                    return results;
                },
                "NAME": assertUsableName && function(tag, context) {
                    if (typeof context.getElementsByName !== strundefined) {
                        return context.getElementsByName(name);
                    }
                },
                "CLASS": assertUsableClassName && function(className, context, xml) {
                    if (typeof context.getElementsByClassName !== strundefined && !xml) {
                        return context.getElementsByClassName(className);
                    }
                }
            },
            relative: {
                ">": {
                    dir: "parentNode",
                    first: true
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: true
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                "ATTR": function(match) {
                    match[1] = match[1].replace(rbackslash, "");
                    match[3] = (match[4] || match[5] || "").replace(rbackslash, "");
                    if (match[2] === "~=") {
                        match[3] = " " + match[3] + " ";
                    }
                    return match.slice(0, 4);
                },
                "CHILD": function(match) {
                    match[1] = match[1].toLowerCase();
                    if (match[1] === "nth") {
                        if (!match[2]) {
                            Sizzle.error(match[0]);
                        }
                        match[3] = +(match[3] ? match[4] + (match[5] || 1) : 2 * (match[2] === "even" || match[2] === "odd"));
                        match[4] = +((match[6] + match[7]) || match[2] === "odd");
                    } else if (match[2]) {
                        Sizzle.error(match[0]);
                    }
                    return match;
                },
                "PSEUDO": function(match) {
                    var unquoted, excess;
                    if (matchExpr["CHILD"].test(match[0])) {
                        return null;
                    }
                    if (match[3]) {
                        match[2] = match[3];
                    } else if ((unquoted = match[4])) {
                        if (rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
                            unquoted = unquoted.slice(0, excess);
                            match[0] = match[0].slice(0, excess);
                        }
                        match[2] = unquoted;
                    }
                    return match.slice(0, 3);
                }
            },
            filter: {
                "ID": assertGetIdNotName ? function(id) {
                    id = id.replace(rbackslash, "");
                    return function(elem) {
                        return elem.getAttribute("id") === id;
                    };
                } : function(id) {
                    id = id.replace(rbackslash, "");
                    return function(elem) {
                        var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
                        return node && node.value === id;
                    };
                },
                "TAG": function(nodeName) {
                    if (nodeName === "*") {
                        return function() {
                            return true;
                        };
                    }
                    nodeName = nodeName.replace(rbackslash, "").toLowerCase();
                    return function(elem) {
                        return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
                    };
                },
                "CLASS": function(className) {
                    var pattern = classCache[expando][className];
                    if (!pattern) {
                        pattern = classCache(className, new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)"));
                    }
                    return function(elem) {
                        return pattern.test(elem.className || (typeof elem.getAttribute !== strundefined && elem.getAttribute("class")) || "");
                    };
                },
                "ATTR": function(name, operator, check) {
                    return function(elem, context) {
                        var result = Sizzle.attr(elem, name);
                        if (result == null) {
                            return operator === "!=";
                        }
                        if (!operator) {
                            return true;
                        }
                        result += "";
                        return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.substr(result.length - check.length) === check : operator === "~=" ? (" " + result + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.substr(0, check.length + 1) === check + "-" : false;
                    };
                },
                "CHILD": function(type, argument, first, last) {
                    if (type === "nth") {
                        return function(elem) {
                            var node, diff, parent = elem.parentNode;
                            if (first === 1 && last === 0) {
                                return true;
                            }
                            if (parent) {
                                diff = 0;
                                for (node = parent.firstChild; node; node = node.nextSibling) {
                                    if (node.nodeType === 1) {
                                        diff++;
                                        if (elem === node) {
                                            break;
                                        }
                                    }
                                }
                            }
                            diff -= last;
                            return diff === first || (diff % first === 0 && diff / first >= 0);
                        };
                    }
                    return function(elem) {
                        var node = elem;
                        switch (type) {
                            case "only":
                            case "first":
                                while ((node = node.previousSibling)) {
                                    if (node.nodeType === 1) {
                                        return false;
                                    }
                                }
                                if (type === "first") {
                                    return true;
                                }
                                node = elem;
                            case "last":
                                while ((node = node.nextSibling)) {
                                    if (node.nodeType === 1) {
                                        return false;
                                    }
                                }
                                return true;
                        }
                    };
                },
                "PSEUDO": function(pseudo, argument) {
                    var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);
                    if (fn[expando]) {
                        return fn(argument);
                    }
                    if (fn.length > 1) {
                        args = [pseudo, pseudo, "", argument];
                        return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches) {
                            var idx, matched = fn(seed, argument),
                                i = matched.length;
                            while (i--) {
                                idx = indexOf.call(seed, matched[i]);
                                seed[idx] = !(matches[idx] = matched[i]);
                            }
                        }) : function(elem) {
                            return fn(elem, 0, args);
                        };
                    }
                    return fn;
                }
            },
            pseudos: {
                "not": markFunction(function(selector) {
                    var input = [],
                        results = [],
                        matcher = compile(selector.replace(rtrim, "$1"));
                    return matcher[expando] ? markFunction(function(seed, matches, context, xml) {
                        var elem, unmatched = matcher(seed, null, xml, []),
                            i = seed.length;
                        while (i--) {
                            if ((elem = unmatched[i])) {
                                seed[i] = !(matches[i] = elem);
                            }
                        }
                    }) : function(elem, context, xml) {
                        input[0] = elem;
                        matcher(input, null, xml, results);
                        return !results.pop();
                    };
                }),
                "has": markFunction(function(selector) {
                    return function(elem) {
                        return Sizzle(selector, elem).length > 0;
                    };
                }),
                "contains": markFunction(function(text) {
                    return function(elem) {
                        return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;
                    };
                }),
                "enabled": function(elem) {
                    return elem.disabled === false;
                },
                "disabled": function(elem) {
                    return elem.disabled === true;
                },
                "checked": function(elem) {
                    var nodeName = elem.nodeName.toLowerCase();
                    return (nodeName === "input" && !! elem.checked) || (nodeName === "option" && !! elem.selected);
                },
                "selected": function(elem) {
                    if (elem.parentNode) {
                        elem.parentNode.selectedIndex;
                    }
                    return elem.selected === true;
                },
                "parent": function(elem) {
                    return !Expr.pseudos["empty"](elem);
                },
                "empty": function(elem) {
                    var nodeType;
                    elem = elem.firstChild;
                    while (elem) {
                        if (elem.nodeName > "@" || (nodeType = elem.nodeType) === 3 || nodeType === 4) {
                            return false;
                        }
                        elem = elem.nextSibling;
                    }
                    return true;
                },
                "header": function(elem) {
                    return rheader.test(elem.nodeName);
                },
                "text": function(elem) {
                    var type, attr;
                    return elem.nodeName.toLowerCase() === "input" && (type = elem.type) === "text" && ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === type);
                },
                "radio": createInputPseudo("radio"),
                "checkbox": createInputPseudo("checkbox"),
                "file": createInputPseudo("file"),
                "password": createInputPseudo("password"),
                "image": createInputPseudo("image"),
                "submit": createButtonPseudo("submit"),
                "reset": createButtonPseudo("reset"),
                "button": function(elem) {
                    var name = elem.nodeName.toLowerCase();
                    return name === "input" && elem.type === "button" || name === "button";
                },
                "input": function(elem) {
                    return rinputs.test(elem.nodeName);
                },
                "focus": function(elem) {
                    var doc = elem.ownerDocument;
                    return elem === doc.activeElement && (!doc.hasFocus || doc.hasFocus()) && !! (elem.type || elem.href);
                },
                "active": function(elem) {
                    return elem === elem.ownerDocument.activeElement;
                },
                "first": createPositionalPseudo(function(matchIndexes, length, argument) {
                    return [0];
                }),
                "last": createPositionalPseudo(function(matchIndexes, length, argument) {
                    return [length - 1];
                }),
                "eq": createPositionalPseudo(function(matchIndexes, length, argument) {
                    return [argument < 0 ? argument + length : argument];
                }),
                "even": createPositionalPseudo(function(matchIndexes, length, argument) {
                    for (var i = 0; i < length; i += 2) {
                        matchIndexes.push(i);
                    }
                    return matchIndexes;
                }),
                "odd": createPositionalPseudo(function(matchIndexes, length, argument) {
                    for (var i = 1; i < length; i += 2) {
                        matchIndexes.push(i);
                    }
                    return matchIndexes;
                }),
                "lt": createPositionalPseudo(function(matchIndexes, length, argument) {
                    for (var i = argument < 0 ? argument + length : argument; --i >= 0;) {
                        matchIndexes.push(i);
                    }
                    return matchIndexes;
                }),
                "gt": createPositionalPseudo(function(matchIndexes, length, argument) {
                    for (var i = argument < 0 ? argument + length : argument; ++i < length;) {
                        matchIndexes.push(i);
                    }
                    return matchIndexes;
                })
            }
        };

        function siblingCheck(a, b, ret) {
            if (a === b) {
                return ret;
            }
            var cur = a.nextSibling;
            while (cur) {
                if (cur === b) {
                    return -1;
                }
                cur = cur.nextSibling;
            }
            return 1;
        }
        sortOrder = docElem.compareDocumentPosition ? function(a, b) {
            if (a === b) {
                hasDuplicate = true;
                return 0;
            }
            return (!a.compareDocumentPosition || !b.compareDocumentPosition ? a.compareDocumentPosition : a.compareDocumentPosition(b) & 4) ? -1 : 1;
        } : function(a, b) {
            if (a === b) {
                hasDuplicate = true;
                return 0;
            } else if (a.sourceIndex && b.sourceIndex) {
                return a.sourceIndex - b.sourceIndex;
            }
            var al, bl, ap = [],
                bp = [],
                aup = a.parentNode,
                bup = b.parentNode,
                cur = aup;
            if (aup === bup) {
                return siblingCheck(a, b);
            } else if (!aup) {
                return -1;
            } else if (!bup) {
                return 1;
            }
            while (cur) {
                ap.unshift(cur);
                cur = cur.parentNode;
            }
            cur = bup;
            while (cur) {
                bp.unshift(cur);
                cur = cur.parentNode;
            }
            al = ap.length;
            bl = bp.length;
            for (var i = 0; i < al && i < bl; i++) {
                if (ap[i] !== bp[i]) {
                    return siblingCheck(ap[i], bp[i]);
                }
            }
            return i === al ? siblingCheck(a, bp[i], -1) : siblingCheck(ap[i], b, 1);
        };
        [0, 0].sort(sortOrder);
        baseHasDuplicate = !hasDuplicate;
        Sizzle.uniqueSort = function(results) {
            var elem, i = 1;
            hasDuplicate = baseHasDuplicate;
            results.sort(sortOrder);
            if (hasDuplicate) {
                for (;
                    (elem = results[i]); i++) {
                    if (elem === results[i - 1]) {
                        results.splice(i--, 1);
                    }
                }
            }
            return results;
        };
        Sizzle.error = function(msg) {
            throw new Error("Syntax error, unrecognized expression: " + msg);
        };

        function tokenize(selector, parseOnly) {
            var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[expando][selector];
            if (cached) {
                return parseOnly ? 0 : cached.slice(0);
            }
            soFar = selector;
            groups = [];
            preFilters = Expr.preFilter;
            while (soFar) {
                if (!matched || (match = rcomma.exec(soFar))) {
                    if (match) {
                        soFar = soFar.slice(match[0].length);
                    }
                    groups.push(tokens = []);
                }
                matched = false;
                if ((match = rcombinators.exec(soFar))) {
                    tokens.push(matched = new Token(match.shift()));
                    soFar = soFar.slice(matched.length);
                    matched.type = match[0].replace(rtrim, " ");
                }
                for (type in Expr.filter) {
                    if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match, document, true)))) {
                        tokens.push(matched = new Token(match.shift()));
                        soFar = soFar.slice(matched.length);
                        matched.type = type;
                        matched.matches = match;
                    }
                }
                if (!matched) {
                    break;
                }
            }
            return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);
        }

        function addCombinator(matcher, combinator, base) {
            var dir = combinator.dir,
                checkNonElements = base && combinator.dir === "parentNode",
                doneName = done++;
            return combinator.first ? function(elem, context, xml) {
                while ((elem = elem[dir])) {
                    if (checkNonElements || elem.nodeType === 1) {
                        return matcher(elem, context, xml);
                    }
                }
            } : function(elem, context, xml) {
                if (!xml) {
                    var cache, dirkey = dirruns + " " + doneName + " ",
                        cachedkey = dirkey + cachedruns;
                    while ((elem = elem[dir])) {
                        if (checkNonElements || elem.nodeType === 1) {
                            if ((cache = elem[expando]) === cachedkey) {
                                return elem.sizset;
                            } else if (typeof cache === "string" && cache.indexOf(dirkey) === 0) {
                                if (elem.sizset) {
                                    return elem;
                                }
                            } else {
                                elem[expando] = cachedkey;
                                if (matcher(elem, context, xml)) {
                                    elem.sizset = true;
                                    return elem;
                                }
                                elem.sizset = false;
                            }
                        }
                    }
                } else {
                    while ((elem = elem[dir])) {
                        if (checkNonElements || elem.nodeType === 1) {
                            if (matcher(elem, context, xml)) {
                                return elem;
                            }
                        }
                    }
                }
            };
        }

        function elementMatcher(matchers) {
            return matchers.length > 1 ? function(elem, context, xml) {
                var i = matchers.length;
                while (i--) {
                    if (!matchers[i](elem, context, xml)) {
                        return false;
                    }
                }
                return true;
            } : matchers[0];
        }

        function condense(unmatched, map, filter, context, xml) {
            var elem, newUnmatched = [],
                i = 0,
                len = unmatched.length,
                mapped = map != null;
            for (; i < len; i++) {
                if ((elem = unmatched[i])) {
                    if (!filter || filter(elem, context, xml)) {
                        newUnmatched.push(elem);
                        if (mapped) {
                            map.push(i);
                        }
                    }
                }
            }
            return newUnmatched;
        }

        function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
            if (postFilter && !postFilter[expando]) {
                postFilter = setMatcher(postFilter);
            }
            if (postFinder && !postFinder[expando]) {
                postFinder = setMatcher(postFinder, postSelector);
            }
            return markFunction(function(seed, results, context, xml) {
                if (seed && postFinder) {
                    return;
                }
                var i, elem, postFilterIn, preMap = [],
                    postMap = [],
                    preexisting = results.length,
                    elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, [], seed),
                    matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,
                    matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
                if (matcher) {
                    matcher(matcherIn, matcherOut, context, xml);
                }
                if (postFilter) {
                    postFilterIn = condense(matcherOut, postMap);
                    postFilter(postFilterIn, [], context, xml);
                    i = postFilterIn.length;
                    while (i--) {
                        if ((elem = postFilterIn[i])) {
                            matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
                        }
                    }
                }
                if (seed) {
                    i = preFilter && matcherOut.length;
                    while (i--) {
                        if ((elem = matcherOut[i])) {
                            seed[preMap[i]] = !(results[preMap[i]] = elem);
                        }
                    }
                } else {
                    matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
                    if (postFinder) {
                        postFinder(null, results, matcherOut, xml);
                    } else {
                        push.apply(results, matcherOut);
                    }
                }
            });
        }

        function matcherFromTokens(tokens) {
            var checkContext, matcher, j, len = tokens.length,
                leadingRelative = Expr.relative[tokens[0].type],
                implicitRelative = leadingRelative || Expr.relative[" "],
                i = leadingRelative ? 1 : 0,
                matchContext = addCombinator(function(elem) {
                    return elem === checkContext;
                }, implicitRelative, true),
                matchAnyContext = addCombinator(function(elem) {
                    return indexOf.call(checkContext, elem) > -1;
                }, implicitRelative, true),
                matchers = [
                    function(elem, context, xml) {
                        return (!leadingRelative && (xml || context !== outermostContext)) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
                    }
                ];
            for (; i < len; i++) {
                if ((matcher = Expr.relative[tokens[i].type])) {
                    matchers = [addCombinator(elementMatcher(matchers), matcher)];
                } else {
                    matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);
                    if (matcher[expando]) {
                        j = ++i;
                        for (; j < len; j++) {
                            if (Expr.relative[tokens[j].type]) {
                                break;
                            }
                        }
                        return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && tokens.slice(0, i - 1).join("").replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens((tokens = tokens.slice(j))), j < len && tokens.join(""));
                    }
                    matchers.push(matcher);
                }
            }
            return elementMatcher(matchers);
        }

        function matcherFromGroupMatchers(elementMatchers, setMatchers) {
            var bySet = setMatchers.length > 0,
                byElement = elementMatchers.length > 0,
                superMatcher = function(seed, context, xml, results, expandContext) {
                    var elem, j, matcher, setMatched = [],
                        matchedCount = 0,
                        i = "0",
                        unmatched = seed && [],
                        outermost = expandContext != null,
                        contextBackup = outermostContext,
                        elems = seed || byElement && Expr.find["TAG"]("*", expandContext && context.parentNode || context),
                        dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.E);
                    if (outermost) {
                        outermostContext = context !== document && context;
                        cachedruns = superMatcher.el;
                    }
                    for (;
                        (elem = elems[i]) != null; i++) {
                        if (byElement && elem) {
                            for (j = 0;
                                 (matcher = elementMatchers[j]); j++) {
                                if (matcher(elem, context, xml)) {
                                    results.push(elem);
                                    break;
                                }
                            }
                            if (outermost) {
                                dirruns = dirrunsUnique;
                                cachedruns = ++superMatcher.el;
                            }
                        }
                        if (bySet) {
                            if ((elem = !matcher && elem)) {
                                matchedCount--;
                            }
                            if (seed) {
                                unmatched.push(elem);
                            }
                        }
                    }
                    matchedCount += i;
                    if (bySet && i !== matchedCount) {
                        for (j = 0;
                             (matcher = setMatchers[j]); j++) {
                            matcher(unmatched, setMatched, context, xml);
                        }
                        if (seed) {
                            if (matchedCount > 0) {
                                while (i--) {
                                    if (!(unmatched[i] || setMatched[i])) {
                                        setMatched[i] = pop.call(results);
                                    }
                                }
                            }
                            setMatched = condense(setMatched);
                        }
                        push.apply(results, setMatched);
                        if (outermost && !seed && setMatched.length > 0 && (matchedCount + setMatchers.length) > 1) {
                            Sizzle.uniqueSort(results);
                        }
                    }
                    if (outermost) {
                        dirruns = dirrunsUnique;
                        outermostContext = contextBackup;
                    }
                    return unmatched;
                };
            superMatcher.el = 0;
            return bySet ? markFunction(superMatcher) : superMatcher;
        }
        compile = Sizzle.compile = function(selector, group) {
            var i, setMatchers = [],
                elementMatchers = [],
                cached = compilerCache[expando][selector];
            if (!cached) {
                if (!group) {
                    group = tokenize(selector);
                }
                i = group.length;
                while (i--) {
                    cached = matcherFromTokens(group[i]);
                    if (cached[expando]) {
                        setMatchers.push(cached);
                    } else {
                        elementMatchers.push(cached);
                    }
                }
                cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
            }
            return cached;
        };

        function multipleContexts(selector, contexts, results, seed) {
            var i = 0,
                len = contexts.length;
            for (; i < len; i++) {
                Sizzle(selector, contexts[i], results, seed);
            }
            return results;
        }

        function select(selector, context, results, seed, xml) {
            var i, tokens, token, type, find, match = tokenize(selector),
                j = match.length;
            if (!seed) {
                if (match.length === 1) {
                    tokens = match[0] = match[0].slice(0);
                    if (tokens.length > 2 && (token = tokens[0]).type === "ID" && context.nodeType === 9 && !xml && Expr.relative[tokens[1].type]) {
                        context = Expr.find["ID"](token.matches[0].replace(rbackslash, ""), context, xml)[0];
                        if (!context) {
                            return results;
                        }
                        selector = selector.slice(tokens.shift().length);
                    }
                    for (i = matchExpr["POS"].test(selector) ? -1 : tokens.length - 1; i >= 0; i--) {
                        token = tokens[i];
                        if (Expr.relative[(type = token.type)]) {
                            break;
                        }
                        if ((find = Expr.find[type])) {
                            if ((seed = find(token.matches[0].replace(rbackslash, ""), rsibling.test(tokens[0].type) && context.parentNode || context, xml))) {
                                tokens.splice(i, 1);
                                selector = seed.length && tokens.join("");
                                if (!selector) {
                                    push.apply(results, slice.call(seed, 0));
                                    return results;
                                }
                                break;
                            }
                        }
                    }
                }
            }
            compile(selector, match)(seed, context, xml, results, rsibling.test(selector));
            return results;
        }
        if (document.querySelectorAll) {
            (function() {
                var disconnectedMatch, oldSelect = select,
                    rescape = /'|\\/g,
                    rattributeQuotes = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,
                    rbuggyQSA = [":focus"],
                    rbuggyMatches = [":active", ":focus"],
                    matches = docElem.matchesSelector || docElem.mozMatchesSelector || docElem.webkitMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector;
                assert(function(div) {
                    div.innerHTML = "<select><option selected=''></option></select>";
                    if (!div.querySelectorAll("[selected]").length) {
                        rbuggyQSA.push("\\[" + whitespace + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)");
                    }
                    if (!div.querySelectorAll(":checked").length) {
                        rbuggyQSA.push(":checked");
                    }
                });
                assert(function(div) {
                    div.innerHTML = "<p test=''></p>";
                    if (div.querySelectorAll("[test^='']").length) {
                        rbuggyQSA.push("[*^$]=" + whitespace + "*(?:\"\"|'')");
                    }
                    div.innerHTML = "<input type='hidden'/>";
                    if (!div.querySelectorAll(":enabled").length) {
                        rbuggyQSA.push(":enabled", ":disabled");
                    }
                });
                rbuggyQSA = new RegExp(rbuggyQSA.join("|"));
                select = function(selector, context, results, seed, xml) {
                    if (!seed && !xml && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
                        var groups, i, old = true,
                            nid = expando,
                            newContext = context,
                            newSelector = context.nodeType === 9 && selector;
                        if (context.nodeType === 1 && context.nodeName.toLowerCase() !== "object") {
                            groups = tokenize(selector);
                            if ((old = context.getAttribute("id"))) {
                                nid = old.replace(rescape, "\\$&");
                            } else {
                                context.setAttribute("id", nid);
                            }
                            nid = "[id='" + nid + "'] ";
                            i = groups.length;
                            while (i--) {
                                groups[i] = nid + groups[i].join("");
                            }
                            newContext = rsibling.test(selector) && context.parentNode || context;
                            newSelector = groups.join(",");
                        }
                        if (newSelector) {
                            try {
                                push.apply(results, slice.call(newContext.querySelectorAll(newSelector), 0));
                                return results;
                            } catch (qsaError) {} finally {
                                if (!old) {
                                    context.removeAttribute("id");
                                }
                            }
                        }
                    }
                    return oldSelect(selector, context, results, seed, xml);
                };
                if (matches) {
                    assert(function(div) {
                        disconnectedMatch = matches.call(div, "div");
                        try {
                            matches.call(div, "[test!='']:sizzle");
                            rbuggyMatches.push("!=", pseudos);
                        } catch (e) {}
                    });
                    rbuggyMatches = new RegExp(rbuggyMatches.join("|"));
                    Sizzle.matchesSelector = function(elem, expr) {
                        expr = expr.replace(rattributeQuotes, "='$1']");
                        if (!isXML(elem) && !rbuggyMatches.test(expr) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
                            try {
                                var ret = matches.call(elem, expr);
                                if (ret || disconnectedMatch || elem.document && elem.document.nodeType !== 11) {
                                    return ret;
                                }
                            } catch (e) {}
                        }
                        return Sizzle(expr, null, null, [elem]).length > 0;
                    };
                }
            })();
        }
        Expr.pseudos["nth"] = Expr.pseudos["eq"];

        function setFilters() {}
        Expr.filters = setFilters.prototype = Expr.pseudos;
        Expr.setFilters = new setFilters();
        Sizzle.attr = jQuery.attr;
        jQuery.find = Sizzle;
        jQuery.expr = Sizzle.selectors;
        jQuery.expr[":"] = jQuery.expr.pseudos;
        jQuery.unique = Sizzle.uniqueSort;
        jQuery.text = Sizzle.getText;
        jQuery.isXMLDoc = Sizzle.isXML;
        jQuery.contains = Sizzle.contains;
    })(window);
    var runtil = /Until$/,
        rparentsprev = /^(?:parents|prev(?:Until|All))/,
        isSimple = /^.[^:#\[\.,]*$/,
        rneedsContext = jQuery.expr.match.needsContext,
        guaranteedUnique = {
            children: true,
            contents: true,
            next: true,
            prev: true
        };
    jQuery.fn.extend({
        find: function(selector) {
            var i, l, length, n, r, ret, self = this;
            if (typeof selector !== "string") {
                return jQuery(selector).filter(function() {
                    for (i = 0, l = self.length; i < l; i++) {
                        if (jQuery.contains(self[i], this)) {
                            return true;
                        }
                    }
                });
            }
            ret = this.pushStack("", "find", selector);
            for (i = 0, l = this.length; i < l; i++) {
                length = ret.length;
                jQuery.find(selector, this[i], ret);
                if (i > 0) {
                    for (n = length; n < ret.length; n++) {
                        for (r = 0; r < length; r++) {
                            if (ret[r] === ret[n]) {
                                ret.splice(n--, 1);
                                break;
                            }
                        }
                    }
                }
            }
            return ret;
        },
        has: function(target) {
            var i, targets = jQuery(target, this),
                len = targets.length;
            return this.filter(function() {
                for (i = 0; i < len; i++) {
                    if (jQuery.contains(this, targets[i])) {
                        return true;
                    }
                }
            });
        },
        not: function(selector) {
            return this.pushStack(winnow(this, selector, false), "not", selector);
        },
        filter: function(selector) {
            return this.pushStack(winnow(this, selector, true), "filter", selector);
        },
        is: function(selector) {
            return !!selector && (typeof selector === "string" ? rneedsContext.test(selector) ? jQuery(selector, this.context).index(this[0]) >= 0 : jQuery.filter(selector, this).length > 0 : this.filter(selector).length > 0);
        },
        closest: function(selectors, context) {
            var cur, i = 0,
                l = this.length,
                ret = [],
                pos = rneedsContext.test(selectors) || typeof selectors !== "string" ? jQuery(selectors, context || this.context) : 0;
            for (; i < l; i++) {
                cur = this[i];
                while (cur && cur.ownerDocument && cur !== context && cur.nodeType !== 11) {
                    if (pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors)) {
                        ret.push(cur);
                        break;
                    }
                    cur = cur.parentNode;
                }
            }
            ret = ret.length > 1 ? jQuery.unique(ret) : ret;
            return this.pushStack(ret, "closest", selectors);
        },
        index: function(elem) {
            if (!elem) {
                return (this[0] && this[0].parentNode) ? this.prevAll().length : -1;
            }
            if (typeof elem === "string") {
                return jQuery.inArray(this[0], jQuery(elem));
            }
            return jQuery.inArray(elem.jquery ? elem[0] : elem, this);
        },
        add: function(selector, context) {
            var set = typeof selector === "string" ? jQuery(selector, context) : jQuery.makeArray(selector && selector.nodeType ? [selector] : selector),
                all = jQuery.merge(this.get(), set);
            return this.pushStack(isDisconnected(set[0]) || isDisconnected(all[0]) ? all : jQuery.unique(all));
        },
        addBack: function(selector) {
            return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
        }
    });
    jQuery.fn.andSelf = jQuery.fn.addBack;

    function isDisconnected(node) {
        return !node || !node.parentNode || node.parentNode.nodeType === 11;
    }

    function sibling(cur, dir) {
        do {
            cur = cur[dir];
        } while (cur && cur.nodeType !== 1);
        return cur;
    }
    jQuery.each({
        parent: function(elem) {
            var parent = elem.parentNode;
            return parent && parent.nodeType !== 11 ? parent : null;
        },
        parents: function(elem) {
            return jQuery.dir(elem, "parentNode");
        },
        parentsUntil: function(elem, i, until) {
            return jQuery.dir(elem, "parentNode", until);
        },
        next: function(elem) {
            return sibling(elem, "nextSibling");
        },
        prev: function(elem) {
            return sibling(elem, "previousSibling");
        },
        nextAll: function(elem) {
            return jQuery.dir(elem, "nextSibling");
        },
        prevAll: function(elem) {
            return jQuery.dir(elem, "previousSibling");
        },
        nextUntil: function(elem, i, until) {
            return jQuery.dir(elem, "nextSibling", until);
        },
        prevUntil: function(elem, i, until) {
            return jQuery.dir(elem, "previousSibling", until);
        },
        siblings: function(elem) {
            return jQuery.sibling((elem.parentNode || {}).firstChild, elem);
        },
        children: function(elem) {
            return jQuery.sibling(elem.firstChild);
        },
        contents: function(elem) {
            return jQuery.nodeName(elem, "iframe") ? elem.contentDocument || elem.contentWindow.document : jQuery.merge([], elem.childNodes);
        }
    }, function(name, fn) {
        jQuery.fn[name] = function(until, selector) {
            var ret = jQuery.map(this, fn, until);
            if (!runtil.test(name)) {
                selector = until;
            }
            if (selector && typeof selector === "string") {
                ret = jQuery.filter(selector, ret);
            }
            ret = this.length > 1 && !guaranteedUnique[name] ? jQuery.unique(ret) : ret;
            if (this.length > 1 && rparentsprev.test(name)) {
                ret = ret.reverse();
            }
            return this.pushStack(ret, name, core_slice.call(arguments).join(","));
        };
    });
    jQuery.extend({
        filter: function(expr, elems, not) {
            if (not) {
                expr = ":not(" + expr + ")";
            }
            return elems.length === 1 ? jQuery.find.matchesSelector(elems[0], expr) ? [elems[0]] : [] : jQuery.find.matches(expr, elems);
        },
        dir: function(elem, dir, until) {
            var matched = [],
                cur = elem[dir];
            while (cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery(cur).is(until))) {
                if (cur.nodeType === 1) {
                    matched.push(cur);
                }
                cur = cur[dir];
            }
            return matched;
        },
        sibling: function(n, elem) {
            var r = [];
            for (; n; n = n.nextSibling) {
                if (n.nodeType === 1 && n !== elem) {
                    r.push(n);
                }
            }
            return r;
        }
    });

    function winnow(elements, qualifier, keep) {
        qualifier = qualifier || 0;
        if (jQuery.isFunction(qualifier)) {
            return jQuery.grep(elements, function(elem, i) {
                var retVal = !! qualifier.call(elem, i, elem);
                return retVal === keep;
            });
        } else if (qualifier.nodeType) {
            return jQuery.grep(elements, function(elem, i) {
                return (elem === qualifier) === keep;
            });
        } else if (typeof qualifier === "string") {
            var filtered = jQuery.grep(elements, function(elem) {
                return elem.nodeType === 1;
            });
            if (isSimple.test(qualifier)) {
                return jQuery.filter(qualifier, filtered, !keep);
            } else {
                qualifier = jQuery.filter(qualifier, filtered);
            }
        }
        return jQuery.grep(elements, function(elem, i) {
            return (jQuery.inArray(elem, qualifier) >= 0) === keep;
        });
    }

    function createSafeFragment(document) {
        var list = nodeNames.split("|"),
            safeFrag = document.createDocumentFragment();
        if (safeFrag.createElement) {
            while (list.length) {
                safeFrag.createElement(list.pop());
            }
        }
        return safeFrag;
    }
    var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|" + "header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
        rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
        rleadingWhitespace = /^\s+/,
        rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
        rtagName = /<([\w:]+)/,
        rtbody = /<tbody/i,
        rhtml = /<|&#?\w+;/,
        rnoInnerhtml = /<(?:script|style|link)/i,
        rnocache = /<(?:script|object|embed|option|style)/i,
        rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"),
        rcheckableType = /^(?:checkbox|radio)$/,
        rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
        rscriptType = /\/(java|ecma)script/i,
        rcleanScript = /^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,
        wrapMap = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            area: [1, "<map>", "</map>"],
            _default: [0, "", ""]
        }, safeFragment = createSafeFragment(document),
        fragmentDiv = safeFragment.appendChild(document.createElement("div"));
    wrapMap.optgroup = wrapMap.option;
    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
    wrapMap.th = wrapMap.td;
    if (!jQuery.support.htmlSerialize) {
        wrapMap._default = [1, "X<div>", "</div>"];
    }
    jQuery.fn.extend({
        text: function(value) {
            return jQuery.access(this, function(value) {
                return value === undefined ? jQuery.text(this) : this.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(value));
            }, null, value, arguments.length);
        },
        wrapAll: function(html) {
            if (jQuery.isFunction(html)) {
                return this.each(function(i) {
                    jQuery(this).wrapAll(html.call(this, i));
                });
            }
            if (this[0]) {
                var wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);
                if (this[0].parentNode) {
                    wrap.insertBefore(this[0]);
                }
                wrap.map(function() {
                    var elem = this;
                    while (elem.firstChild && elem.firstChild.nodeType === 1) {
                        elem = elem.firstChild;
                    }
                    return elem;
                }).append(this);
            }
            return this;
        },
        wrapInner: function(html) {
            if (jQuery.isFunction(html)) {
                return this.each(function(i) {
                    jQuery(this).wrapInner(html.call(this, i));
                });
            }
            return this.each(function() {
                var self = jQuery(this),
                    contents = self.contents();
                if (contents.length) {
                    contents.wrapAll(html);
                } else {
                    self.append(html);
                }
            });
        },
        wrap: function(html) {
            var isFunction = jQuery.isFunction(html);
            return this.each(function(i) {
                jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);
            });
        },
        unwrap: function() {
            return this.parent().each(function() {
                if (!jQuery.nodeName(this, "body")) {
                    jQuery(this).replaceWith(this.childNodes);
                }
            }).end();
        },
        append: function() {
            return this.domManip(arguments, true, function(elem) {
                if (this.nodeType === 1 || this.nodeType === 11) {
                    this.appendChild(elem);
                }
            });
        },
        prepend: function() {
            return this.domManip(arguments, true, function(elem) {
                if (this.nodeType === 1 || this.nodeType === 11) {
                    this.insertBefore(elem, this.firstChild);
                }
            });
        },
        before: function() {
            if (!isDisconnected(this[0])) {
                return this.domManip(arguments, false, function(elem) {
                    this.parentNode.insertBefore(elem, this);
                });
            }
            if (arguments.length) {
                var set = jQuery.clean(arguments);
                return this.pushStack(jQuery.merge(set, this), "before", this.selector);
            }
        },
        after: function() {
            if (!isDisconnected(this[0])) {
                return this.domManip(arguments, false, function(elem) {
                    this.parentNode.insertBefore(elem, this.nextSibling);
                });
            }
            if (arguments.length) {
                var set = jQuery.clean(arguments);
                return this.pushStack(jQuery.merge(this, set), "after", this.selector);
            }
        },
        remove: function(selector, keepData) {
            var elem, i = 0;
            for (;
                (elem = this[i]) != null; i++) {
                if (!selector || jQuery.filter(selector, [elem]).length) {
                    if (!keepData && elem.nodeType === 1) {
                        jQuery.cleanData(elem.getElementsByTagName("*"));
                        jQuery.cleanData([elem]);
                    }
                    if (elem.parentNode) {
                        elem.parentNode.removeChild(elem);
                    }
                }
            }
            return this;
        },
        empty: function() {
            var elem, i = 0;
            for (;
                (elem = this[i]) != null; i++) {
                if (elem.nodeType === 1) {
                    jQuery.cleanData(elem.getElementsByTagName("*"));
                }
                while (elem.firstChild) {
                    elem.removeChild(elem.firstChild);
                }
            }
            return this;
        },
        clone: function(dataAndEvents, deepDataAndEvents) {
            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
            return this.map(function() {
                return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
            });
        },
        html: function(value) {
            return jQuery.access(this, function(value) {
                var elem = this[0] || {}, i = 0,
                    l = this.length;
                if (value === undefined) {
                    return elem.nodeType === 1 ? elem.innerHTML.replace(rinlinejQuery, "") : undefined;
                }
                if (typeof value === "string" && !rnoInnerhtml.test(value) && (jQuery.support.htmlSerialize || !rnoshimcache.test(value)) && (jQuery.support.leadingWhitespace || !rleadingWhitespace.test(value)) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {
                    value = value.replace(rxhtmlTag, "<$1></$2>");
                    try {
                        for (; i < l; i++) {
                            elem = this[i] || {};
                            if (elem.nodeType === 1) {
                                jQuery.cleanData(elem.getElementsByTagName("*"));
                                elem.innerHTML = value;
                            }
                        }
                        elem = 0;
                    } catch (e) {}
                }
                if (elem) {
                    this.empty().append(value);
                }
            }, null, value, arguments.length);
        },
        replaceWith: function(value) {
            if (!isDisconnected(this[0])) {
                if (jQuery.isFunction(value)) {
                    return this.each(function(i) {
                        var self = jQuery(this),
                            old = self.html();
                        self.replaceWith(value.call(this, i, old));
                    });
                }
                if (typeof value !== "string") {
                    value = jQuery(value).detach();
                }
                return this.each(function() {
                    var next = this.nextSibling,
                        parent = this.parentNode;
                    jQuery(this).remove();
                    if (next) {
                        jQuery(next).before(value);
                    } else {
                        jQuery(parent).append(value);
                    }
                });
            }
            return this.length ? this.pushStack(jQuery(jQuery.isFunction(value) ? value() : value), "replaceWith", value) : this;
        },
        detach: function(selector) {
            return this.remove(selector, true);
        },
        domManip: function(args, table, callback) {
            args = [].concat.apply([], args);
            var results, first, fragment, iNoClone, i = 0,
                value = args[0],
                scripts = [],
                l = this.length;
            if (!jQuery.support.checkClone && l > 1 && typeof value === "string" && rchecked.test(value)) {
                return this.each(function() {
                    jQuery(this).domManip(args, table, callback);
                });
            }
            if (jQuery.isFunction(value)) {
                return this.each(function(i) {
                    var self = jQuery(this);
                    args[0] = value.call(this, i, table ? self.html() : undefined);
                    self.domManip(args, table, callback);
                });
            }
            if (this[0]) {
                results = jQuery.buildFragment(args, this, scripts);
                fragment = results.fragment;
                first = fragment.firstChild;
                if (fragment.childNodes.length === 1) {
                    fragment = first;
                }
                if (first) {
                    table = table && jQuery.nodeName(first, "tr");
                    for (iNoClone = results.cacheable || l - 1; i < l; i++) {
                        callback.call(table && jQuery.nodeName(this[i], "table") ? findOrAppend(this[i], "tbody") : this[i], i === iNoClone ? fragment : jQuery.clone(fragment, true, true));
                    }
                }
                fragment = first = null;
                if (scripts.length) {
                    jQuery.each(scripts, function(i, elem) {
                        if (elem.src) {
                            if (jQuery.ajax) {
                                jQuery.ajax({
                                    url: elem.src,
                                    type: "GET",
                                    dataType: "script",
                                    async: false,
                                    global: false,
                                    "throws": true
                                });
                            } else {
                                jQuery.error("no ajax");
                            }
                        } else {
                            jQuery.globalEval((elem.text || elem.textContent || elem.innerHTML || "").replace(rcleanScript, ""));
                        }
                        if (elem.parentNode) {
                            elem.parentNode.removeChild(elem);
                        }
                    });
                }
            }
            return this;
        }
    });

    function findOrAppend(elem, tag) {
        return elem.getElementsByTagName(tag)[0] || elem.appendChild(elem.ownerDocument.createElement(tag));
    }

    function cloneCopyEvent(src, dest) {
        if (dest.nodeType !== 1 || !jQuery.hasData(src)) {
            return;
        }
        var type, i, l, oldData = jQuery._data(src),
            curData = jQuery._data(dest, oldData),
            events = oldData.events;
        if (events) {
            delete curData.handle;
            curData.events = {};
            for (type in events) {
                for (i = 0, l = events[type].length; i < l; i++) {
                    jQuery.event.add(dest, type, events[type][i]);
                }
            }
        }
        if (curData.data) {
            curData.data = jQuery.extend({}, curData.data);
        }
    }

    function cloneFixAttributes(src, dest) {
        var nodeName;
        if (dest.nodeType !== 1) {
            return;
        }
        if (dest.clearAttributes) {
            dest.clearAttributes();
        }
        if (dest.mergeAttributes) {
            dest.mergeAttributes(src);
        }
        nodeName = dest.nodeName.toLowerCase();
        if (nodeName === "object") {
            if (dest.parentNode) {
                dest.outerHTML = src.outerHTML;
            }
            if (jQuery.support.html5Clone && (src.innerHTML && !jQuery.trim(dest.innerHTML))) {
                dest.innerHTML = src.innerHTML;
            }
        } else if (nodeName === "input" && rcheckableType.test(src.type)) {
            dest.defaultChecked = dest.checked = src.checked;
            if (dest.value !== src.value) {
                dest.value = src.value;
            }
        } else if (nodeName === "option") {
            dest.selected = src.defaultSelected;
        } else if (nodeName === "input" || nodeName === "textarea") {
            dest.defaultValue = src.defaultValue;
        } else if (nodeName === "script" && dest.text !== src.text) {
            dest.text = src.text;
        }
        dest.removeAttribute(jQuery.expando);
    }
    jQuery.buildFragment = function(args, context, scripts) {
        var fragment, cacheable, cachehit, first = args[0];
        context = context || document;
        context = !context.nodeType && context[0] || context;
        context = context.ownerDocument || context;
        if (args.length === 1 && typeof first === "string" && first.length < 512 && context === document && first.charAt(0) === "<" && !rnocache.test(first) && (jQuery.support.checkClone || !rchecked.test(first)) && (jQuery.support.html5Clone || !rnoshimcache.test(first))) {
            cacheable = true;
            fragment = jQuery.fragments[first];
            cachehit = fragment !== undefined;
        }
        if (!fragment) {
            fragment = context.createDocumentFragment();
            jQuery.clean(args, context, fragment, scripts);
            if (cacheable) {
                jQuery.fragments[first] = cachehit && fragment;
            }
        }
        return {
            fragment: fragment,
            cacheable: cacheable
        };
    };
    jQuery.fragments = {};
    jQuery.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(name, original) {
        jQuery.fn[name] = function(selector) {
            var elems, i = 0,
                ret = [],
                insert = jQuery(selector),
                l = insert.length,
                parent = this.length === 1 && this[0].parentNode;
            if ((parent == null || parent && parent.nodeType === 11 && parent.childNodes.length === 1) && l === 1) {
                insert[original](this[0]);
                return this;
            } else {
                for (; i < l; i++) {
                    elems = (i > 0 ? this.clone(true) : this).get();
                    jQuery(insert[i])[original](elems);
                    ret = ret.concat(elems);
                }
                return this.pushStack(ret, name, insert.selector);
            }
        };
    });

    function getAll(elem) {
        if (typeof elem.getElementsByTagName !== "undefined") {
            return elem.getElementsByTagName("*");
        } else if (typeof elem.querySelectorAll !== "undefined") {
            return elem.querySelectorAll("*");
        } else {
            return [];
        }
    }

    function fixDefaultChecked(elem) {
        if (rcheckableType.test(elem.type)) {
            elem.defaultChecked = elem.checked;
        }
    }
    jQuery.extend({
        clone: function(elem, dataAndEvents, deepDataAndEvents) {
            var srcElements, destElements, i, clone;
            if (jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test("<" + elem.nodeName + ">")) {
                clone = elem.cloneNode(true);
            } else {
                fragmentDiv.innerHTML = elem.outerHTML;
                fragmentDiv.removeChild(clone = fragmentDiv.firstChild);
            }
            if ((!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
                cloneFixAttributes(elem, clone);
                srcElements = getAll(elem);
                destElements = getAll(clone);
                for (i = 0; srcElements[i]; ++i) {
                    if (destElements[i]) {
                        cloneFixAttributes(srcElements[i], destElements[i]);
                    }
                }
            }
            if (dataAndEvents) {
                cloneCopyEvent(elem, clone);
                if (deepDataAndEvents) {
                    srcElements = getAll(elem);
                    destElements = getAll(clone);
                    for (i = 0; srcElements[i]; ++i) {
                        cloneCopyEvent(srcElements[i], destElements[i]);
                    }
                }
            }
            srcElements = destElements = null;
            return clone;
        },
        clean: function(elems, context, fragment, scripts) {
            var i, j, elem, tag, wrap, depth, div, hasBody, tbody, len, handleScript, jsTags, safe = context === document && safeFragment,
                ret = [];
            if (!context || typeof context.createDocumentFragment === "undefined") {
                context = document;
            }
            for (i = 0;
                 (elem = elems[i]) != null; i++) {
                if (typeof elem === "number") {
                    elem += "";
                }
                if (!elem) {
                    continue;
                }
                if (typeof elem === "string") {
                    if (!rhtml.test(elem)) {
                        elem = context.createTextNode(elem);
                    } else {
                        safe = safe || createSafeFragment(context);
                        div = context.createElement("div");
                        safe.appendChild(div);
                        elem = elem.replace(rxhtmlTag, "<$1></$2>");
                        tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
                        wrap = wrapMap[tag] || wrapMap._default;
                        depth = wrap[0];
                        div.innerHTML = wrap[1] + elem + wrap[2];
                        while (depth--) {
                            div = div.lastChild;
                        }
                        if (!jQuery.support.tbody) {
                            hasBody = rtbody.test(elem);
                            tbody = tag === "table" && !hasBody ? div.firstChild && div.firstChild.childNodes : wrap[1] === "<table>" && !hasBody ? div.childNodes : [];
                            for (j = tbody.length - 1; j >= 0; --j) {
                                if (jQuery.nodeName(tbody[j], "tbody") && !tbody[j].childNodes.length) {
                                    tbody[j].parentNode.removeChild(tbody[j]);
                                }
                            }
                        }
                        if (!jQuery.support.leadingWhitespace && rleadingWhitespace.test(elem)) {
                            div.insertBefore(context.createTextNode(rleadingWhitespace.exec(elem)[0]), div.firstChild);
                        }
                        elem = div.childNodes;
                        div.parentNode.removeChild(div);
                    }
                }
                if (elem.nodeType) {
                    ret.push(elem);
                } else {
                    jQuery.merge(ret, elem);
                }
            }
            if (div) {
                elem = div = safe = null;
            }
            if (!jQuery.support.appendChecked) {
                for (i = 0;
                     (elem = ret[i]) != null; i++) {
                    if (jQuery.nodeName(elem, "input")) {
                        fixDefaultChecked(elem);
                    } else if (typeof elem.getElementsByTagName !== "undefined") {
                        jQuery.grep(elem.getElementsByTagName("input"), fixDefaultChecked);
                    }
                }
            }
            if (fragment) {
                handleScript = function(elem) {
                    if (!elem.type || rscriptType.test(elem.type)) {
                        return scripts ? scripts.push(elem.parentNode ? elem.parentNode.removeChild(elem) : elem) : fragment.appendChild(elem);
                    }
                };
                for (i = 0;
                     (elem = ret[i]) != null; i++) {
                    if (!(jQuery.nodeName(elem, "script") && handleScript(elem))) {
                        fragment.appendChild(elem);
                        if (typeof elem.getElementsByTagName !== "undefined") {
                            jsTags = jQuery.grep(jQuery.merge([], elem.getElementsByTagName("script")), handleScript);
                            ret.splice.apply(ret, [i + 1, 0].concat(jsTags));
                            i += jsTags.length;
                        }
                    }
                }
            }
            return ret;
        },
        cleanData: function(elems, acceptData) {
            var data, id, elem, type, i = 0,
                internalKey = jQuery.expando,
                cache = jQuery.cache,
                deleteExpando = jQuery.support.deleteExpando,
                special = jQuery.event.special;
            for (;
                (elem = elems[i]) != null; i++) {
                if (acceptData || jQuery.acceptData(elem)) {
                    id = elem[internalKey];
                    data = id && cache[id];
                    if (data) {
                        if (data.events) {
                            for (type in data.events) {
                                if (special[type]) {
                                    jQuery.event.remove(elem, type);
                                } else {
                                    jQuery.removeEvent(elem, type, data.handle);
                                }
                            }
                        }
                        if (cache[id]) {
                            delete cache[id];
                            if (deleteExpando) {
                                delete elem[internalKey];
                            } else if (elem.removeAttribute) {
                                elem.removeAttribute(internalKey);
                            } else {
                                elem[internalKey] = null;
                            }
                            jQuery.deletedIds.push(id);
                        }
                    }
                }
            }
        }
    });
    (function() {
        var matched, browser;
        jQuery.uaMatch = function(ua) {
            ua = ua.toLowerCase();
            var match = /(chrome)[ \/]([\w.]+)/.exec(ua) || /(webkit)[ \/]([\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) || /(msie) ([\w.]+)/.exec(ua) || ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) || [];
            return {
                browser: match[1] || "",
                version: match[2] || "0"
            };
        };
        matched = jQuery.uaMatch(navigator.userAgent);
        browser = {};
        if (matched.browser) {
            browser[matched.browser] = true;
            browser.version = matched.version;
        }
        if (browser.chrome) {
            browser.webkit = true;
        } else if (browser.webkit) {
            browser.safari = true;
        }
        jQuery.browser = browser;
        jQuery.sub = function() {
            function jQuerySub(selector, context) {
                return new jQuerySub.fn.init(selector, context);
            }
            jQuery.extend(true, jQuerySub, this);
            jQuerySub.superclass = this;
            jQuerySub.fn = jQuerySub.prototype = this();
            jQuerySub.fn.constructor = jQuerySub;
            jQuerySub.sub = this.sub;
            jQuerySub.fn.init = function init(selector, context) {
                if (context && context instanceof jQuery && !(context instanceof jQuerySub)) {
                    context = jQuerySub(context);
                }
                return jQuery.fn.init.call(this, selector, context, rootjQuerySub);
            };
            jQuerySub.fn.init.prototype = jQuerySub.fn;
            var rootjQuerySub = jQuerySub(document);
            return jQuerySub;
        };
    })();
    var curCSS, iframe, iframeDoc, ralpha = /alpha\([^)]*\)/i,
        ropacity = /opacity=([^)]*)/,
        rposition = /^(top|right|bottom|left)$/,
        rdisplayswap = /^(none|table(?!-c[ea]).+)/,
        rmargin = /^margin/,
        rnumsplit = new RegExp("^(" + core_pnum + ")(.*)$", "i"),
        rnumnonpx = new RegExp("^(" + core_pnum + ")(?!px)[a-z%]+$", "i"),
        rrelNum = new RegExp("^([-+])=(" + core_pnum + ")", "i"),
        elemdisplay = {}, cssShow = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        }, cssNormalTransform = {
            letterSpacing: 0,
            fontWeight: 400
        }, cssExpand = ["Top", "Right", "Bottom", "Left"],
        cssPrefixes = ["Webkit", "O", "Moz", "ms"],
        eventsToggle = jQuery.fn.toggle;

    function vendorPropName(style, name) {
        if (name in style) {
            return name;
        }
        var capName = name.charAt(0).toUpperCase() + name.slice(1),
            origName = name,
            i = cssPrefixes.length;
        while (i--) {
            name = cssPrefixes[i] + capName;
            if (name in style) {
                return name;
            }
        }
        return origName;
    }

    function isHidden(elem, el) {
        elem = el || elem;
        return jQuery.css(elem, "display") === "none" || !jQuery.contains(elem.ownerDocument, elem);
    }

    function showHide(elements, show) {
        var elem, display, values = [],
            index = 0,
            length = elements.length;
        for (; index < length; index++) {
            elem = elements[index];
            if (!elem.style) {
                continue;
            }
            values[index] = jQuery._data(elem, "olddisplay");
            if (show) {
                if (!values[index] && elem.style.display === "none") {
                    elem.style.display = "";
                }
                if (elem.style.display === "" && isHidden(elem)) {
                    values[index] = jQuery._data(elem, "olddisplay", css_defaultDisplay(elem.nodeName));
                }
            } else {
                display = curCSS(elem, "display");
                if (!values[index] && display !== "none") {
                    jQuery._data(elem, "olddisplay", display);
                }
            }
        }
        for (index = 0; index < length; index++) {
            elem = elements[index];
            if (!elem.style) {
                continue;
            }
            if (!show || elem.style.display === "none" || elem.style.display === "") {
                elem.style.display = show ? values[index] || "" : "none";
            }
        }
        return elements;
    }
    jQuery.fn.extend({
        css: function(name, value) {
            return jQuery.access(this, function(elem, name, value) {
                return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
            }, name, value, arguments.length > 1);
        },
        show: function() {
            return showHide(this, true);
        },
        hide: function() {
            return showHide(this);
        },
        toggle: function(state, fn2) {
            var bool = typeof state === "boolean";
            if (jQuery.isFunction(state) && jQuery.isFunction(fn2)) {
                return eventsToggle.apply(this, arguments);
            }
            return this.each(function() {
                if (bool ? state : isHidden(this)) {
                    jQuery(this).show();
                } else {
                    jQuery(this).hide();
                }
            });
        }
    });
    jQuery.extend({
        cssHooks: {
            opacity: {
                get: function(elem, computed) {
                    if (computed) {
                        var ret = curCSS(elem, "opacity");
                        return ret === "" ? "1" : ret;
                    }
                }
            }
        },
        cssNumber: {
            "fillOpacity": true,
            "fontWeight": true,
            "lineHeight": true,
            "opacity": true,
            "orphans": true,
            "widows": true,
            "zIndex": true,
            "zoom": true
        },
        cssProps: {
            "float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function(elem, name, value, extra) {
            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
                return;
            }
            var ret, type, hooks, origName = jQuery.camelCase(name),
                style = elem.style;
            name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(style, origName));
            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
            if (value !== undefined) {
                type = typeof value;
                if (type === "string" && (ret = rrelNum.exec(value))) {
                    value = (ret[1] + 1) * ret[2] + parseFloat(jQuery.css(elem, name));
                    type = "number";
                }
                if (value == null || type === "number" && isNaN(value)) {
                    return;
                }
                if (type === "number" && !jQuery.cssNumber[origName]) {
                    value += "px";
                }
                if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {
                    try {
                        style[name] = value;
                    } catch (e) {}
                }
            } else {
                if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {
                    return ret;
                }
                return style[name];
            }
        },
        css: function(elem, name, numeric, extra) {
            var val, num, hooks, origName = jQuery.camelCase(name);
            name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(elem.style, origName));
            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
            if (hooks && "get" in hooks) {
                val = hooks.get(elem, true, extra);
            }
            if (val === undefined) {
                val = curCSS(elem, name);
            }
            if (val === "normal" && name in cssNormalTransform) {
                val = cssNormalTransform[name];
            }
            if (numeric || extra !== undefined) {
                num = parseFloat(val);
                return numeric || jQuery.isNumeric(num) ? num || 0 : val;
            }
            return val;
        },
        swap: function(elem, options, callback) {
            var ret, name, old = {};
            for (name in options) {
                old[name] = elem.style[name];
                elem.style[name] = options[name];
            }
            ret = callback.call(elem);
            for (name in options) {
                elem.style[name] = old[name];
            }
            return ret;
        }
    });
    if (window.getComputedStyle) {
        curCSS = function(elem, name) {
            var ret, width, minWidth, maxWidth, computed = window.getComputedStyle(elem, null),
                style = elem.style;
            if (computed) {
                ret = computed[name];
                if (ret === "" && !jQuery.contains(elem.ownerDocument, elem)) {
                    ret = jQuery.style(elem, name);
                }
                if (rnumnonpx.test(ret) && rmargin.test(name)) {
                    width = style.width;
                    minWidth = style.minWidth;
                    maxWidth = style.maxWidth;
                    style.minWidth = style.maxWidth = style.width = ret;
                    ret = computed.width;
                    style.width = width;
                    style.minWidth = minWidth;
                    style.maxWidth = maxWidth;
                }
            }
            return ret;
        };
    } else if (document.documentElement.currentStyle) {
        curCSS = function(elem, name) {
            var left, rsLeft, ret = elem.currentStyle && elem.currentStyle[name],
                style = elem.style;
            if (ret == null && style && style[name]) {
                ret = style[name];
            }
            if (rnumnonpx.test(ret) && !rposition.test(name)) {
                left = style.left;
                rsLeft = elem.runtimeStyle && elem.runtimeStyle.left;
                if (rsLeft) {
                    elem.runtimeStyle.left = elem.currentStyle.left;
                }
                style.left = name === "fontSize" ? "1em" : ret;
                ret = style.pixelLeft + "px";
                style.left = left;
                if (rsLeft) {
                    elem.runtimeStyle.left = rsLeft;
                }
            }
            return ret === "" ? "auto" : ret;
        };
    }

    function setPositiveNumber(elem, value, subtract) {
        var matches = rnumsplit.exec(value);
        return matches ? Math.max(0, matches[1] - (subtract || 0)) + (matches[2] || "px") : value;
    }

    function augmentWidthOrHeight(elem, name, extra, isBorderBox) {
        var i = extra === (isBorderBox ? "border" : "content") ? 4 : name === "width" ? 1 : 0,
            val = 0;
        for (; i < 4; i += 2) {
            if (extra === "margin") {
                val += jQuery.css(elem, extra + cssExpand[i], true);
            }
            if (isBorderBox) {
                if (extra === "content") {
                    val -= parseFloat(curCSS(elem, "padding" + cssExpand[i])) || 0;
                }
                if (extra !== "margin") {
                    val -= parseFloat(curCSS(elem, "border" + cssExpand[i] + "Width")) || 0;
                }
            } else {
                val += parseFloat(curCSS(elem, "padding" + cssExpand[i])) || 0;
                if (extra !== "padding") {
                    val += parseFloat(curCSS(elem, "border" + cssExpand[i] + "Width")) || 0;
                }
            }
        }
        return val;
    }

    function getWidthOrHeight(elem, name, extra) {
        var val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
            valueIsBorderBox = true,
            isBorderBox = jQuery.support.boxSizing && jQuery.css(elem, "boxSizing") === "border-box";
        if (val <= 0 || val == null) {
            val = curCSS(elem, name);
            if (val < 0 || val == null) {
                val = elem.style[name];
            }
            if (rnumnonpx.test(val)) {
                return val;
            }
            valueIsBorderBox = isBorderBox && (jQuery.support.boxSizingReliable || val === elem.style[name]);
            val = parseFloat(val) || 0;
        }
        return (val +
            augmentWidthOrHeight(elem, name, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox)) + "px";
    }

    function css_defaultDisplay(nodeName) {
        if (elemdisplay[nodeName]) {
            return elemdisplay[nodeName];
        }
        var elem = jQuery("<" + nodeName + ">").appendTo(document.body),
            display = elem.css("display");
        elem.remove();
        if (display === "none" || display === "") {
            iframe = document.body.appendChild(iframe || jQuery.extend(document.createElement("iframe"), {
                frameBorder: 0,
                width: 0,
                height: 0
            }));
            if (!iframeDoc || !iframe.createElement) {
                iframeDoc = (iframe.contentWindow || iframe.contentDocument).document;
                iframeDoc.write("<!doctype html><html><body>");
                iframeDoc.close();
            }
            elem = iframeDoc.body.appendChild(iframeDoc.createElement(nodeName));
            display = curCSS(elem, "display");
            document.body.removeChild(iframe);
        }
        elemdisplay[nodeName] = display;
        return display;
    }
    jQuery.each(["height", "width"], function(i, name) {
        jQuery.cssHooks[name] = {
            get: function(elem, computed, extra) {
                if (computed) {
                    if (elem.offsetWidth === 0 && rdisplayswap.test(curCSS(elem, "display"))) {
                        return jQuery.swap(elem, cssShow, function() {
                            return getWidthOrHeight(elem, name, extra);
                        });
                    } else {
                        return getWidthOrHeight(elem, name, extra);
                    }
                }
            },
            set: function(elem, value, extra) {
                return setPositiveNumber(elem, value, extra ? augmentWidthOrHeight(elem, name, extra, jQuery.support.boxSizing && jQuery.css(elem, "boxSizing") === "border-box") : 0);
            }
        };
    });
    if (!jQuery.support.opacity) {
        jQuery.cssHooks.opacity = {
            get: function(elem, computed) {
                return ropacity.test((computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "") ? (0.01 * parseFloat(RegExp.$1)) + "" : computed ? "1" : "";
            },
            set: function(elem, value) {
                var style = elem.style,
                    currentStyle = elem.currentStyle,
                    opacity = jQuery.isNumeric(value) ? "alpha(opacity=" + value * 100 + ")" : "",
                    filter = currentStyle && currentStyle.filter || style.filter || "";
                style.zoom = 1;
                if (value >= 1 && jQuery.trim(filter.replace(ralpha, "")) === "" && style.removeAttribute) {
                    style.removeAttribute("filter");
                    if (currentStyle && !currentStyle.filter) {
                        return;
                    }
                }
                style.filter = ralpha.test(filter) ? filter.replace(ralpha, opacity) : filter + " " + opacity;
            }
        };
    }
    jQuery(function() {
        if (!jQuery.support.reliableMarginRight) {
            jQuery.cssHooks.marginRight = {
                get: function(elem, computed) {
                    return jQuery.swap(elem, {
                        "display": "inline-block"
                    }, function() {
                        if (computed) {
                            return curCSS(elem, "marginRight");
                        }
                    });
                }
            };
        }
        if (!jQuery.support.pixelPosition && jQuery.fn.position) {
            jQuery.each(["top", "left"], function(i, prop) {
                jQuery.cssHooks[prop] = {
                    get: function(elem, computed) {
                        if (computed) {
                            var ret = curCSS(elem, prop);
                            return rnumnonpx.test(ret) ? jQuery(elem).position()[prop] + "px" : ret;
                        }
                    }
                };
            });
        }
    });
    if (jQuery.expr && jQuery.expr.filters) {
        jQuery.expr.filters.hidden = function(elem) {
            return (elem.offsetWidth === 0 && elem.offsetHeight === 0) || (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || curCSS(elem, "display")) === "none");
        };
        jQuery.expr.filters.visible = function(elem) {
            return !jQuery.expr.filters.hidden(elem);
        };
    }
    jQuery.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(prefix, suffix) {
        jQuery.cssHooks[prefix + suffix] = {
            expand: function(value) {
                var i, parts = typeof value === "string" ? value.split(" ") : [value],
                    expanded = {};
                for (i = 0; i < 4; i++) {
                    expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
                }
                return expanded;
            }
        };
        if (!rmargin.test(prefix)) {
            jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
        }
    });
    var r20 = /%20/g,
        rbracket = /\[\]$/,
        rCRLF = /\r?\n/g,
        rinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
        rselectTextarea = /^(?:select|textarea)/i;
    jQuery.fn.extend({
        serialize: function() {
            return jQuery.param(this.serializeArray());
        },
        serializeArray: function() {
            return this.map(function() {
                return this.elements ? jQuery.makeArray(this.elements) : this;
            }).filter(function() {
                    return this.name && !this.disabled && (this.checked || rselectTextarea.test(this.nodeName) || rinput.test(this.type));
                }).map(function(i, elem) {
                    var val = jQuery(this).val();
                    return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function(val, i) {
                        return {
                            name: elem.name,
                            value: val.replace(rCRLF, "\r\n")
                        };
                    }) : {
                        name: elem.name,
                        value: val.replace(rCRLF, "\r\n")
                    };
                }).get();
        }
    });
    jQuery.param = function(a, traditional) {
        var prefix, s = [],
            add = function(key, value) {
                value = jQuery.isFunction(value) ? value() : (value == null ? "" : value);
                s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value);
            };
        if (traditional === undefined) {
            traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
        }
        if (jQuery.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {
            jQuery.each(a, function() {
                add(this.name, this.value);
            });
        } else {
            for (prefix in a) {
                buildParams(prefix, a[prefix], traditional, add);
            }
        }
        return s.join("&").replace(r20, "+");
    };

    function buildParams(prefix, obj, traditional, add) {
        var name;
        if (jQuery.isArray(obj)) {
            jQuery.each(obj, function(i, v) {
                if (traditional || rbracket.test(prefix)) {
                    add(prefix, v);
                } else {
                    buildParams(prefix + "[" + (typeof v === "object" ? i : "") + "]", v, traditional, add);
                }
            });
        } else if (!traditional && jQuery.type(obj) === "object") {
            for (name in obj) {
                buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
            }
        } else {
            add(prefix, obj);
        }
    }
    var
        ajaxLocParts, ajaxLocation, rhash = /#.*$/,
        rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,
        rlocalProtocol = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,
        rnoContent = /^(?:GET|HEAD)$/,
        rprotocol = /^\/\//,
        rquery = /\?/,
        rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
        rts = /([?&])_=[^&]*/,
        rurl = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,
        _load = jQuery.fn.load,
        prefilters = {}, transports = {}, allTypes = ["*/"] + ["*"];
    try {
        ajaxLocation = location.href;
    } catch (e) {
        ajaxLocation = document.createElement("a");
        ajaxLocation.href = "";
        ajaxLocation = ajaxLocation.href;
    }
    ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [];

    function addToPrefiltersOrTransports(structure) {
        return function(dataTypeExpression, func) {
            if (typeof dataTypeExpression !== "string") {
                func = dataTypeExpression;
                dataTypeExpression = "*";
            }
            var dataType, list, placeBefore, dataTypes = dataTypeExpression.toLowerCase().split(core_rspace),
                i = 0,
                length = dataTypes.length;
            if (jQuery.isFunction(func)) {
                for (; i < length; i++) {
                    dataType = dataTypes[i];
                    placeBefore = /^\+/.test(dataType);
                    if (placeBefore) {
                        dataType = dataType.substr(1) || "*";
                    }
                    list = structure[dataType] = structure[dataType] || [];
                    list[placeBefore ? "unshift" : "push"](func);
                }
            }
        };
    }

    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR, dataType, inspected) {
        dataType = dataType || options.dataTypes[0];
        inspected = inspected || {};
        inspected[dataType] = true;
        var selection, list = structure[dataType],
            i = 0,
            length = list ? list.length : 0,
            executeOnly = (structure === prefilters);
        for (; i < length && (executeOnly || !selection); i++) {
            selection = list[i](options, originalOptions, jqXHR);
            if (typeof selection === "string") {
                if (!executeOnly || inspected[selection]) {
                    selection = undefined;
                } else {
                    options.dataTypes.unshift(selection);
                    selection = inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR, selection, inspected);
                }
            }
        }
        if ((executeOnly || !selection) && !inspected["*"]) {
            selection = inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR, "*", inspected);
        }
        return selection;
    }

    function ajaxExtend(target, src) {
        var key, deep, flatOptions = jQuery.ajaxSettings.flatOptions || {};
        for (key in src) {
            if (src[key] !== undefined) {
                (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];
            }
        }
        if (deep) {
            jQuery.extend(true, target, deep);
        }
    }
    jQuery.fn.load = function(url, params, callback) {
        if (typeof url !== "string" && _load) {
            return _load.apply(this, arguments);
        }
        if (!this.length) {
            return this;
        }
        var selector, type, response, self = this,
            off = url.indexOf(" ");
        if (off >= 0) {
            selector = url.slice(off, url.length);
            url = url.slice(0, off);
        }
        if (jQuery.isFunction(params)) {
            callback = params;
            params = undefined;
        } else if (params && typeof params === "object") {
            type = "POST";
        }
        jQuery.ajax({
            url: url,
            type: type,
            dataType: "html",
            data: params,
            complete: function(jqXHR, status) {
                if (callback) {
                    self.each(callback, response || [jqXHR.responseText, status, jqXHR]);
                }
            }
        }).done(function(responseText) {
                response = arguments;
                self.html(selector ? jQuery("<div>").append(responseText.replace(rscript, "")).find(selector) : responseText);
            });
        return this;
    };
    jQuery.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function(i, o) {
        jQuery.fn[o] = function(f) {
            return this.on(o, f);
        };
    });
    jQuery.each(["get", "post"], function(i, method) {
        jQuery[method] = function(url, data, callback, type) {
            if (jQuery.isFunction(data)) {
                type = type || callback;
                callback = data;
                data = undefined;
            }
            return jQuery.ajax({
                type: method,
                url: url,
                data: data,
                success: callback,
                dataType: type
            });
        };
    });
    jQuery.extend({
        getScript: function(url, callback) {
            return jQuery.get(url, undefined, callback, "script");
        },
        getJSON: function(url, data, callback) {
            return jQuery.get(url, data, callback, "json");
        },
        ajaxSetup: function(target, settings) {
            if (settings) {
                ajaxExtend(target, jQuery.ajaxSettings);
            } else {
                settings = target;
                target = jQuery.ajaxSettings;
            }
            ajaxExtend(target, settings);
            return target;
        },
        ajaxSettings: {
            url: ajaxLocation,
            isLocal: rlocalProtocol.test(ajaxLocParts[1]),
            global: true,
            type: "GET",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            processData: true,
            async: true,
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                text: "text/plain",
                json: "application/json, text/javascript",
                "*": allTypes
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText"
            },
            converters: {
                "* text": window.String,
                "text html": true,
                "text json": jQuery.parseJSON,
                "text xml": jQuery.parseXML
            },
            flatOptions: {
                context: true,
                url: true
            }
        },
        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
        ajaxTransport: addToPrefiltersOrTransports(transports),
        ajax: function(url, options) {
            if (typeof url === "object") {
                options = url;
                url = undefined;
            }
            options = options || {};
            var
                ifModifiedKey, responseHeadersString, responseHeaders, transport, timeoutTimer, parts, fireGlobals, i, s = jQuery.ajaxSetup({}, options),
                callbackContext = s.context || s,
                globalEventContext = callbackContext !== s && (callbackContext.nodeType || callbackContext instanceof jQuery) ? jQuery(callbackContext) : jQuery.event,
                deferred = jQuery.Deferred(),
                completeDeferred = jQuery.Callbacks("once memory"),
                statusCode = s.statusCode || {}, requestHeaders = {}, requestHeadersNames = {}, state = 0,
                strAbort = "canceled",
                jqXHR = {
                    readyState: 0,
                    setRequestHeader: function(name, value) {
                        if (!state) {
                            var lname = name.toLowerCase();
                            name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;
                            requestHeaders[name] = value;
                        }
                        return this;
                    },
                    getAllResponseHeaders: function() {
                        return state === 2 ? responseHeadersString : null;
                    },
                    getResponseHeader: function(key) {
                        var match;
                        if (state === 2) {
                            if (!responseHeaders) {
                                responseHeaders = {};
                                while ((match = rheaders.exec(responseHeadersString))) {
                                    responseHeaders[match[1].toLowerCase()] = match[2];
                                }
                            }
                            match = responseHeaders[key.toLowerCase()];
                        }
                        return match === undefined ? null : match;
                    },
                    overrideMimeType: function(type) {
                        if (!state) {
                            s.mimeType = type;
                        }
                        return this;
                    },
                    abort: function(statusText) {
                        statusText = statusText || strAbort;
                        if (transport) {
                            transport.abort(statusText);
                        }
                        done(0, statusText);
                        return this;
                    }
                };

            function done(status, nativeStatusText, responses, headers) {
                var isSuccess, success, error, response, modified, statusText = nativeStatusText;
                if (state === 2) {
                    return;
                }
                state = 2;
                if (timeoutTimer) {
                    clearTimeout(timeoutTimer);
                }
                transport = undefined;
                responseHeadersString = headers || "";
                jqXHR.readyState = status > 0 ? 4 : 0;
                if (responses) {
                    response = ajaxHandleResponses(s, jqXHR, responses);
                }
                if (status >= 200 && status < 300 || status === 304) {
                    if (s.ifModified) {
                        modified = jqXHR.getResponseHeader("Last-Modified");
                        if (modified) {
                            jQuery.lastModified[ifModifiedKey] = modified;
                        }
                        modified = jqXHR.getResponseHeader("Etag");
                        if (modified) {
                            jQuery.etag[ifModifiedKey] = modified;
                        }
                    }
                    if (status === 304) {
                        statusText = "notmodified";
                        isSuccess = true;
                    } else {
                        isSuccess = ajaxConvert(s, response);
                        statusText = isSuccess.state;
                        success = isSuccess.data;
                        error = isSuccess.error;
                        isSuccess = !error;
                    }
                } else {
                    error = statusText;
                    if (!statusText || status) {
                        statusText = "error";
                        if (status < 0) {
                            status = 0;
                        }
                    }
                }
                jqXHR.status = status;
                jqXHR.statusText = (nativeStatusText || statusText) + "";
                if (isSuccess) {
                    deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
                } else {
                    deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
                }
                jqXHR.statusCode(statusCode);
                statusCode = undefined;
                if (fireGlobals) {
                    globalEventContext.trigger("ajax" + (isSuccess ? "Success" : "Error"), [jqXHR, s, isSuccess ? success : error]);
                }
                completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);
                if (fireGlobals) {
                    globalEventContext.trigger("ajaxComplete", [jqXHR, s]);
                    if (!(--jQuery.active)) {
                        jQuery.event.trigger("ajaxStop");
                    }
                }
            }
            deferred.promise(jqXHR);
            jqXHR.success = jqXHR.done;
            jqXHR.error = jqXHR.fail;
            jqXHR.complete = completeDeferred.add;
            jqXHR.statusCode = function(map) {
                if (map) {
                    var tmp;
                    if (state < 2) {
                        for (tmp in map) {
                            statusCode[tmp] = [statusCode[tmp], map[tmp]];
                        }
                    } else {
                        tmp = map[jqXHR.status];
                        jqXHR.always(tmp);
                    }
                }
                return this;
            };
            s.url = ((url || s.url) + "").replace(rhash, "").replace(rprotocol, ajaxLocParts[1] + "//");
            s.dataTypes = jQuery.trim(s.dataType || "*").toLowerCase().split(core_rspace);
            if (s.crossDomain == null) {
                parts = rurl.exec(s.url.toLowerCase()) || false;
                s.crossDomain = parts && (parts.join(":") + (parts[3] ? "" : parts[1] === "http:" ? 80 : 443)) !== (ajaxLocParts.join(":") + (ajaxLocParts[3] ? "" : ajaxLocParts[1] === "http:" ? 80 : 443));
            }
            if (s.data && s.processData && typeof s.data !== "string") {
                s.data = jQuery.param(s.data, s.traditional);
            }
            inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
            if (state === 2) {
                return jqXHR;
            }
            fireGlobals = s.global;
            s.type = s.type.toUpperCase();
            s.hasContent = !rnoContent.test(s.type);
            if (fireGlobals && jQuery.active++ === 0) {
                jQuery.event.trigger("ajaxStart");
            }
            if (!s.hasContent) {
                if (s.data) {
                    s.url += (rquery.test(s.url) ? "&" : "?") + s.data;
                    delete s.data;
                }
                ifModifiedKey = s.url;
                if (s.cache === false) {
                    var ts = jQuery.now(),
                        ret = s.url.replace(rts, "$1_=" + ts);
                    s.url = ret + ((ret === s.url) ? (rquery.test(s.url) ? "&" : "?") + "_=" + ts : "");
                }
            }
            if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
                jqXHR.setRequestHeader("Content-Type", s.contentType);
            }
            if (s.ifModified) {
                ifModifiedKey = ifModifiedKey || s.url;
                if (jQuery.lastModified[ifModifiedKey]) {
                    jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[ifModifiedKey]);
                }
                if (jQuery.etag[ifModifiedKey]) {
                    jqXHR.setRequestHeader("If-None-Match", jQuery.etag[ifModifiedKey]);
                }
            }
            jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]);
            for (i in s.headers) {
                jqXHR.setRequestHeader(i, s.headers[i]);
            }
            if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {
                return jqXHR.abort();
            }
            strAbort = "abort";
            for (i in {
                success: 1,
                error: 1,
                complete: 1
            }) {
                jqXHR[i](s[i]);
            }
            transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
            if (!transport) {
                done(-1, "No Transport");
            } else {
                jqXHR.readyState = 1;
                if (fireGlobals) {
                    globalEventContext.trigger("ajaxSend", [jqXHR, s]);
                }
                if (s.async && s.timeout > 0) {
                    timeoutTimer = setTimeout(function() {
                        jqXHR.abort("timeout");
                    }, s.timeout);
                }
                try {
                    state = 1;
                    transport.send(requestHeaders, done);
                } catch (e) {
                    if (state < 2) {
                        done(-1, e);
                    } else {
                        throw e;
                    }
                }
            }
            return jqXHR;
        },
        active: 0,
        lastModified: {},
        etag: {}
    });

    function ajaxHandleResponses(s, jqXHR, responses) {
        var ct, type, finalDataType, firstDataType, contents = s.contents,
            dataTypes = s.dataTypes,
            responseFields = s.responseFields;
        for (type in responseFields) {
            if (type in responses) {
                jqXHR[responseFields[type]] = responses[type];
            }
        }
        while (dataTypes[0] === "*") {
            dataTypes.shift();
            if (ct === undefined) {
                ct = s.mimeType || jqXHR.getResponseHeader("content-type");
            }
        }
        if (ct) {
            for (type in contents) {
                if (contents[type] && contents[type].test(ct)) {
                    dataTypes.unshift(type);
                    break;
                }
            }
        }
        if (dataTypes[0] in responses) {
            finalDataType = dataTypes[0];
        } else {
            for (type in responses) {
                if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
                    finalDataType = type;
                    break;
                }
                if (!firstDataType) {
                    firstDataType = type;
                }
            }
            finalDataType = finalDataType || firstDataType;
        }
        if (finalDataType) {
            if (finalDataType !== dataTypes[0]) {
                dataTypes.unshift(finalDataType);
            }
            return responses[finalDataType];
        }
    }

    function ajaxConvert(s, response) {
        var conv, conv2, current, tmp, dataTypes = s.dataTypes.slice(),
            prev = dataTypes[0],
            converters = {}, i = 0;
        if (s.dataFilter) {
            response = s.dataFilter(response, s.dataType);
        }
        if (dataTypes[1]) {
            for (conv in s.converters) {
                converters[conv.toLowerCase()] = s.converters[conv];
            }
        }
        for (;
            (current = dataTypes[++i]);) {
            if (current !== "*") {
                if (prev !== "*" && prev !== current) {
                    conv = converters[prev + " " + current] || converters["* " + current];
                    if (!conv) {
                        for (conv2 in converters) {
                            tmp = conv2.split(" ");
                            if (tmp[1] === current) {
                                conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];
                                if (conv) {
                                    if (conv === true) {
                                        conv = converters[conv2];
                                    } else if (converters[conv2] !== true) {
                                        current = tmp[0];
                                        dataTypes.splice(i--, 0, current);
                                    }
                                    break;
                                }
                            }
                        }
                    }
                    if (conv !== true) {
                        if (conv && s["throws"]) {
                            response = conv(response);
                        } else {
                            try {
                                response = conv(response);
                            } catch (e) {
                                return {
                                    state: "parsererror",
                                    error: conv ? e : "No conversion from " + prev + " to " + current
                                };
                            }
                        }
                    }
                }
                prev = current;
            }
        }
        return {
            state: "success",
            data: response
        };
    }
    var oldCallbacks = [],
        rquestion = /\?/,
        rjsonp = /(=)\?(?=&|$)|\?\?/,
        nonce = jQuery.now();
    jQuery.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var callback = oldCallbacks.pop() || (jQuery.expando + "_" + (nonce++));
            this[callback] = true;
            return callback;
        }
    });
    jQuery.ajaxPrefilter("json jsonp", function(s, originalSettings, jqXHR) {
        var callbackName, overwritten, responseContainer, data = s.data,
            url = s.url,
            hasCallback = s.jsonp !== false,
            replaceInUrl = hasCallback && rjsonp.test(url),
            replaceInData = hasCallback && !replaceInUrl && typeof data === "string" && !(s.contentType || "").indexOf("application/x-www-form-urlencoded") && rjsonp.test(data);
        if (s.dataTypes[0] === "jsonp" || replaceInUrl || replaceInData) {
            callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;
            overwritten = window[callbackName];
            if (replaceInUrl) {
                s.url = url.replace(rjsonp, "$1" + callbackName);
            } else if (replaceInData) {
                s.data = data.replace(rjsonp, "$1" + callbackName);
            } else if (hasCallback) {
                s.url += (rquestion.test(url) ? "&" : "?") + s.jsonp + "=" + callbackName;
            }
            s.converters["script json"] = function() {
                if (!responseContainer) {
                    jQuery.error(callbackName + " was not called");
                }
                return responseContainer[0];
            };
            s.dataTypes[0] = "json";
            window[callbackName] = function() {
                responseContainer = arguments;
            };
            jqXHR.always(function() {
                window[callbackName] = overwritten;
                if (s[callbackName]) {
                    s.jsonpCallback = originalSettings.jsonpCallback;
                    oldCallbacks.push(callbackName);
                }
                if (responseContainer && jQuery.isFunction(overwritten)) {
                    overwritten(responseContainer[0]);
                }
                responseContainer = overwritten = undefined;
            });
            return "script";
        }
    });
    jQuery.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /javascript|ecmascript/
        },
        converters: {
            "text script": function(text) {
                jQuery.globalEval(text);
                return text;
            }
        }
    });
    jQuery.ajaxPrefilter("script", function(s) {
        if (s.cache === undefined) {
            s.cache = false;
        }
        if (s.crossDomain) {
            s.type = "GET";
            s.global = false;
        }
    });
    jQuery.ajaxTransport("script", function(s) {
        if (s.crossDomain) {
            var script, head = document.head || document.getElementsByTagName("head")[0] || document.documentElement;
            return {
                send: function(_, callback) {
                    script = document.createElement("script");
                    script.async = "async";
                    if (s.scriptCharset) {
                        script.charset = s.scriptCharset;
                    }
                    script.src = s.url;
                    script.onload = script.onreadystatechange = function(_, isAbort) {
                        if (isAbort || !script.readyState || /loaded|complete/.test(script.readyState)) {
                            script.onload = script.onreadystatechange = null;
                            if (head && script.parentNode) {
                                head.removeChild(script);
                            }
                            script = undefined;
                            if (!isAbort) {
                                callback(200, "success");
                            }
                        }
                    };
                    head.insertBefore(script, head.firstChild);
                },
                abort: function() {
                    if (script) {
                        script.onload(0, 1);
                    }
                }
            };
        }
    });
    var xhrCallbacks, xhrOnUnloadAbort = window.ActiveXObject ? function() {
            for (var key in xhrCallbacks) {
                xhrCallbacks[key](0, 1);
            }
        } : false,
        xhrId = 0;

    function createStandardXHR() {
        try {
            return new window.XMLHttpRequest();
        } catch (e) {}
    }

    function createActiveXHR() {
        try {
            return new window.ActiveXObject("Microsoft.XMLHTTP");
        } catch (e) {}
    }
    jQuery.ajaxSettings.xhr = window.ActiveXObject ? function() {
        return !this.isLocal && createStandardXHR() || createActiveXHR();
    } : createStandardXHR;
    (function(xhr) {
        jQuery.extend(jQuery.support, {
            ajax: !! xhr,
            cors: !! xhr && ("withCredentials" in xhr)
        });
    })(jQuery.ajaxSettings.xhr());
    if (jQuery.support.ajax) {
        jQuery.ajaxTransport(function(s) {
            if (!s.crossDomain || jQuery.support.cors) {
                var callback;
                return {
                    send: function(headers, complete) {
                        var handle, i, xhr = s.xhr();
                        if (s.username) {
                            xhr.open(s.type, s.url, s.async, s.username, s.password);
                        } else {
                            xhr.open(s.type, s.url, s.async);
                        }
                        if (s.xhrFields) {
                            for (i in s.xhrFields) {
                                xhr[i] = s.xhrFields[i];
                            }
                        }
                        if (s.mimeType && xhr.overrideMimeType) {
                            xhr.overrideMimeType(s.mimeType);
                        }
                        if (!s.crossDomain && !headers["X-Requested-With"]) {
                            headers["X-Requested-With"] = "XMLHttpRequest";
                        }
                        try {
                            for (i in headers) {
                                xhr.setRequestHeader(i, headers[i]);
                            }
                        } catch (_) {}
                        xhr.send((s.hasContent && s.data) || null);
                        callback = function(_, isAbort) {
                            var status, statusText, responseHeaders, responses, xml;
                            try {
                                if (callback && (isAbort || xhr.readyState === 4)) {
                                    callback = undefined;
                                    if (handle) {
                                        xhr.onreadystatechange = jQuery.noop;
                                        if (xhrOnUnloadAbort) {
                                            delete xhrCallbacks[handle];
                                        }
                                    }
                                    if (isAbort) {
                                        if (xhr.readyState !== 4) {
                                            xhr.abort();
                                        }
                                    } else {
                                        status = xhr.status;
                                        responseHeaders = xhr.getAllResponseHeaders();
                                        responses = {};
                                        xml = xhr.responseXML;
                                        if (xml && xml.documentElement) {
                                            responses.xml = xml;
                                        }
                                        try {
                                            responses.text = xhr.responseText;
                                        } catch (_) {}
                                        try {
                                            statusText = xhr.statusText;
                                        } catch (e) {
                                            statusText = "";
                                        }
                                        if (!status && s.isLocal && !s.crossDomain) {
                                            status = responses.text ? 200 : 404;
                                        } else if (status === 1223) {
                                            status = 204;
                                        }
                                    }
                                }
                            } catch (firefoxAccessException) {
                                if (!isAbort) {
                                    complete(-1, firefoxAccessException);
                                }
                            }
                            if (responses) {
                                complete(status, statusText, responses, responseHeaders);
                            }
                        };
                        if (!s.async) {
                            callback();
                        } else if (xhr.readyState === 4) {
                            setTimeout(callback, 0);
                        } else {
                            handle = ++xhrId;
                            if (xhrOnUnloadAbort) {
                                if (!xhrCallbacks) {
                                    xhrCallbacks = {};
                                    jQuery(window).unload(xhrOnUnloadAbort);
                                }
                                xhrCallbacks[handle] = callback;
                            }
                            xhr.onreadystatechange = callback;
                        }
                    },
                    abort: function() {
                        if (callback) {
                            callback(0, 1);
                        }
                    }
                };
            }
        });
    }
    var fxNow, timerId, rfxtypes = /^(?:toggle|show|hide)$/,
        rfxnum = new RegExp("^(?:([-+])=|)(" + core_pnum + ")([a-z%]*)$", "i"),
        rrun = /queueHooks$/,
        animationPrefilters = [defaultPrefilter],
        tweeners = {
            "*": [
                function(prop, value) {
                    var end, unit, tween = this.createTween(prop, value),
                        parts = rfxnum.exec(value),
                        target = tween.cur(),
                        start = +target || 0,
                        scale = 1,
                        maxIterations = 20;
                    if (parts) {
                        end = +parts[2];
                        unit = parts[3] || (jQuery.cssNumber[prop] ? "" : "px");
                        if (unit !== "px" && start) {
                            start = jQuery.css(tween.elem, prop, true) || end || 1;
                            do {
                                scale = scale || ".5";
                                start = start / scale;
                                jQuery.style(tween.elem, prop, start + unit);
                            } while (scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations);
                        }
                        tween.unit = unit;
                        tween.start = start;
                        tween.end = parts[1] ? start + (parts[1] + 1) * end : end;
                    }
                    return tween;
                }
            ]
        };

    function createFxNow() {
        setTimeout(function() {
            fxNow = undefined;
        }, 0);
        return (fxNow = jQuery.now());
    }

    function createTweens(animation, props) {
        jQuery.each(props, function(prop, value) {
            var collection = (tweeners[prop] || []).concat(tweeners["*"]),
                index = 0,
                length = collection.length;
            for (; index < length; index++) {
                if (collection[index].call(animation, prop, value)) {
                    return;
                }
            }
        });
    }

    function Animation(elem, properties, options) {
        var result, index = 0,
            tweenerIndex = 0,
            length = animationPrefilters.length,
            deferred = jQuery.Deferred().always(function() {
                delete tick.elem;
            }),
            tick = function() {
                var currentTime = fxNow || createFxNow(),
                    remaining = Math.max(0, animation.startTime + animation.duration - currentTime),
                    percent = 1 - (remaining / animation.duration || 0),
                    index = 0,
                    length = animation.tweens.length;
                for (; index < length; index++) {
                    animation.tweens[index].run(percent);
                }
                deferred.notifyWith(elem, [animation, percent, remaining]);
                if (percent < 1 && length) {
                    return remaining;
                } else {
                    deferred.resolveWith(elem, [animation]);
                    return false;
                }
            }, animation = deferred.promise({
                elem: elem,
                props: jQuery.extend({}, properties),
                opts: jQuery.extend(true, {
                    specialEasing: {}
                }, options),
                originalProperties: properties,
                originalOptions: options,
                startTime: fxNow || createFxNow(),
                duration: options.duration,
                tweens: [],
                createTween: function(prop, end, easing) {
                    var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
                    animation.tweens.push(tween);
                    return tween;
                },
                stop: function(gotoEnd) {
                    var index = 0,
                        length = gotoEnd ? animation.tweens.length : 0;
                    for (; index < length; index++) {
                        animation.tweens[index].run(1);
                    }
                    if (gotoEnd) {
                        deferred.resolveWith(elem, [animation, gotoEnd]);
                    } else {
                        deferred.rejectWith(elem, [animation, gotoEnd]);
                    }
                    return this;
                }
            }),
            props = animation.props;
        propFilter(props, animation.opts.specialEasing);
        for (; index < length; index++) {
            result = animationPrefilters[index].call(animation, elem, props, animation.opts);
            if (result) {
                return result;
            }
        }
        createTweens(animation, props);
        if (jQuery.isFunction(animation.opts.start)) {
            animation.opts.start.call(elem, animation);
        }
        jQuery.fx.timer(jQuery.extend(tick, {
            anim: animation,
            queue: animation.opts.queue,
            elem: elem
        }));
        return animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
    }

    function propFilter(props, specialEasing) {
        var index, name, easing, value, hooks;
        for (index in props) {
            name = jQuery.camelCase(index);
            easing = specialEasing[name];
            value = props[index];
            if (jQuery.isArray(value)) {
                easing = value[1];
                value = props[index] = value[0];
            }
            if (index !== name) {
                props[name] = value;
                delete props[index];
            }
            hooks = jQuery.cssHooks[name];
            if (hooks && "expand" in hooks) {
                value = hooks.expand(value);
                delete props[name];
                for (index in value) {
                    if (!(index in props)) {
                        props[index] = value[index];
                        specialEasing[index] = easing;
                    }
                }
            } else {
                specialEasing[name] = easing;
            }
        }
    }
    jQuery.Animation = jQuery.extend(Animation, {
        tweener: function(props, callback) {
            if (jQuery.isFunction(props)) {
                callback = props;
                props = ["*"];
            } else {
                props = props.split(" ");
            }
            var prop, index = 0,
                length = props.length;
            for (; index < length; index++) {
                prop = props[index];
                tweeners[prop] = tweeners[prop] || [];
                tweeners[prop].unshift(callback);
            }
        },
        prefilter: function(callback, prepend) {
            if (prepend) {
                animationPrefilters.unshift(callback);
            } else {
                animationPrefilters.push(callback);
            }
        }
    });

    function defaultPrefilter(elem, props, opts) {
        var index, prop, value, length, dataShow, tween, hooks, oldfire, anim = this,
            style = elem.style,
            orig = {}, handled = [],
            hidden = elem.nodeType && isHidden(elem);
        if (!opts.queue) {
            hooks = jQuery._queueHooks(elem, "fx");
            if (hooks.unqueued == null) {
                hooks.unqueued = 0;
                oldfire = hooks.empty.fire;
                hooks.empty.fire = function() {
                    if (!hooks.unqueued) {
                        oldfire();
                    }
                };
            }
            hooks.unqueued++;
            anim.always(function() {
                anim.always(function() {
                    hooks.unqueued--;
                    if (!jQuery.queue(elem, "fx").length) {
                        hooks.empty.fire();
                    }
                });
            });
        }
        if (elem.nodeType === 1 && ("height" in props || "width" in props)) {
            opts.overflow = [style.overflow, style.overflowX, style.overflowY];
            if (jQuery.css(elem, "display") === "inline" && jQuery.css(elem, "float") === "none") {
                if (!jQuery.support.inlineBlockNeedsLayout || css_defaultDisplay(elem.nodeName) === "inline") {
                    style.display = "inline-block";
                } else {
                    style.zoom = 1;
                }
            }
        }
        if (opts.overflow) {
            style.overflow = "hidden";
            if (!jQuery.support.shrinkWrapBlocks) {
                anim.done(function() {
                    style.overflow = opts.overflow[0];
                    style.overflowX = opts.overflow[1];
                    style.overflowY = opts.overflow[2];
                });
            }
        }
        for (index in props) {
            value = props[index];
            if (rfxtypes.exec(value)) {
                delete props[index];
                if (value === (hidden ? "hide" : "show")) {
                    continue;
                }
                handled.push(index);
            }
        }
        length = handled.length;
        if (length) {
            dataShow = jQuery._data(elem, "fxshow") || jQuery._data(elem, "fxshow", {});
            if (hidden) {
                jQuery(elem).show();
            } else {
                anim.done(function() {
                    jQuery(elem).hide();
                });
            }
            anim.done(function() {
                var prop;
                jQuery.removeData(elem, "fxshow", true);
                for (prop in orig) {
                    jQuery.style(elem, prop, orig[prop]);
                }
            });
            for (index = 0; index < length; index++) {
                prop = handled[index];
                tween = anim.createTween(prop, hidden ? dataShow[prop] : 0);
                orig[prop] = dataShow[prop] || jQuery.style(elem, prop);
                if (!(prop in dataShow)) {
                    dataShow[prop] = tween.start;
                    if (hidden) {
                        tween.end = tween.start;
                        tween.start = prop === "width" || prop === "height" ? 1 : 0;
                    }
                }
            }
        }
    }

    function Tween(elem, options, prop, end, easing) {
        return new Tween.prototype.init(elem, options, prop, end, easing);
    }
    jQuery.Tween = Tween;
    Tween.prototype = {
        constructor: Tween,
        init: function(elem, options, prop, end, easing, unit) {
            this.elem = elem;
            this.prop = prop;
            this.easing = easing || "swing";
            this.options = options;
            this.start = this.now = this.cur();
            this.end = end;
            this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
        },
        cur: function() {
            var hooks = Tween.propHooks[this.prop];
            return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
        },
        run: function(percent) {
            var eased, hooks = Tween.propHooks[this.prop];
            if (this.options.duration) {
                this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
            } else {
                this.pos = eased = percent;
            }
            this.now = (this.end - this.start) * eased + this.start;
            if (this.options.step) {
                this.options.step.call(this.elem, this.now, this);
            }
            if (hooks && hooks.set) {
                hooks.set(this);
            } else {
                Tween.propHooks._default.set(this);
            }
            return this;
        }
    };
    Tween.prototype.init.prototype = Tween.prototype;
    Tween.propHooks = {
        _default: {
            get: function(tween) {
                var result;
                if (tween.elem[tween.prop] != null && (!tween.elem.style || tween.elem.style[tween.prop] == null)) {
                    return tween.elem[tween.prop];
                }
                result = jQuery.css(tween.elem, tween.prop, false, "");
                return !result || result === "auto" ? 0 : result;
            },
            set: function(tween) {
                if (jQuery.fx.step[tween.prop]) {
                    jQuery.fx.step[tween.prop](tween);
                } else if (tween.elem.style && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {
                    jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
                } else {
                    tween.elem[tween.prop] = tween.now;
                }
            }
        }
    };
    Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
        set: function(tween) {
            if (tween.elem.nodeType && tween.elem.parentNode) {
                tween.elem[tween.prop] = tween.now;
            }
        }
    };
    jQuery.each(["toggle", "show", "hide"], function(i, name) {
        var cssFn = jQuery.fn[name];
        jQuery.fn[name] = function(speed, easing, callback) {
            return speed == null || typeof speed === "boolean" || (!i && jQuery.isFunction(speed) && jQuery.isFunction(easing)) ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
        };
    });
    jQuery.fn.extend({
        fadeTo: function(speed, to, easing, callback) {
            return this.filter(isHidden).css("opacity", 0).show().end().animate({
                opacity: to
            }, speed, easing, callback);
        },
        animate: function(prop, speed, easing, callback) {
            var empty = jQuery.isEmptyObject(prop),
                optall = jQuery.speed(speed, easing, callback),
                doAnimation = function() {
                    var anim = Animation(this, jQuery.extend({}, prop), optall);
                    if (empty) {
                        anim.stop(true);
                    }
                };
            return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
        },
        stop: function(type, clearQueue, gotoEnd) {
            var stopQueue = function(hooks) {
                var stop = hooks.stop;
                delete hooks.stop;
                stop(gotoEnd);
            };
            if (typeof type !== "string") {
                gotoEnd = clearQueue;
                clearQueue = type;
                type = undefined;
            }
            if (clearQueue && type !== false) {
                this.queue(type || "fx", []);
            }
            return this.each(function() {
                var dequeue = true,
                    index = type != null && type + "queueHooks",
                    timers = jQuery.timers,
                    data = jQuery._data(this);
                if (index) {
                    if (data[index] && data[index].stop) {
                        stopQueue(data[index]);
                    }
                } else {
                    for (index in data) {
                        if (data[index] && data[index].stop && rrun.test(index)) {
                            stopQueue(data[index]);
                        }
                    }
                }
                for (index = timers.length; index--;) {
                    if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
                        timers[index].anim.stop(gotoEnd);
                        dequeue = false;
                        timers.splice(index, 1);
                    }
                }
                if (dequeue || !gotoEnd) {
                    jQuery.dequeue(this, type);
                }
            });
        }
    });

    function genFx(type, includeWidth) {
        var which, attrs = {
            height: type
        }, i = 0;
        includeWidth = includeWidth ? 1 : 0;
        for (; i < 4; i += 2 - includeWidth) {
            which = cssExpand[i];
            attrs["margin" + which] = attrs["padding" + which] = type;
        }
        if (includeWidth) {
            attrs.opacity = attrs.width = type;
        }
        return attrs;
    }
    jQuery.each({
        slideDown: genFx("show"),
        slideUp: genFx("hide"),
        slideToggle: genFx("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(name, props) {
        jQuery.fn[name] = function(speed, easing, callback) {
            return this.animate(props, speed, easing, callback);
        };
    });
    jQuery.speed = function(speed, easing, fn) {
        var opt = speed && typeof speed === "object" ? jQuery.extend({}, speed) : {
            complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
            duration: speed,
            easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
        };
        opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;
        if (opt.queue == null || opt.queue === true) {
            opt.queue = "fx";
        }
        opt.old = opt.complete;
        opt.complete = function() {
            if (jQuery.isFunction(opt.old)) {
                opt.old.call(this);
            }
            if (opt.queue) {
                jQuery.dequeue(this, opt.queue);
            }
        };
        return opt;
    };
    jQuery.easing = {
        linear: function(p) {
            return p;
        },
        swing: function(p) {
            return 0.5 - Math.cos(p * Math.PI) / 2;
        }
    };
    jQuery.timers = [];
    jQuery.fx = Tween.prototype.init;
    jQuery.fx.tick = function() {
        var timer, timers = jQuery.timers,
            i = 0;
        for (; i < timers.length; i++) {
            timer = timers[i];
            if (!timer() && timers[i] === timer) {
                timers.splice(i--, 1);
            }
        }
        if (!timers.length) {
            jQuery.fx.stop();
        }
    };
    jQuery.fx.timer = function(timer) {
        if (timer() && jQuery.timers.push(timer) && !timerId) {
            timerId = setInterval(jQuery.fx.tick, jQuery.fx.interval);
        }
    };
    jQuery.fx.interval = 13;
    jQuery.fx.stop = function() {
        clearInterval(timerId);
        timerId = null;
    };
    jQuery.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    };
    jQuery.fx.step = {};
    if (jQuery.expr && jQuery.expr.filters) {
        jQuery.expr.filters.animated = function(elem) {
            return jQuery.grep(jQuery.timers, function(fn) {
                return elem === fn.elem;
            }).length;
        };
    }
    var rroot = /^(?:body|html)$/i;
    jQuery.fn.offset = function(options) {
        if (arguments.length) {
            return options === undefined ? this : this.each(function(i) {
                jQuery.offset.setOffset(this, options, i);
            });
        }
        var docElem, body, win, clientTop, clientLeft, scrollTop, scrollLeft, box = {
                top: 0,
                left: 0
            }, elem = this[0],
            doc = elem && elem.ownerDocument;
        if (!doc) {
            return;
        }
        if ((body = doc.body) === elem) {
            return jQuery.offset.bodyOffset(elem);
        }
        docElem = doc.documentElement;
        if (!jQuery.contains(docElem, elem)) {
            return box;
        }
        if (typeof elem.getBoundingClientRect !== "undefined") {
            box = elem.getBoundingClientRect();
        }
        win = getWindow(doc);
        clientTop = docElem.clientTop || body.clientTop || 0;
        clientLeft = docElem.clientLeft || body.clientLeft || 0;
        scrollTop = win.pageYOffset || docElem.scrollTop;
        scrollLeft = win.pageXOffset || docElem.scrollLeft;
        return {
            top: box.top + scrollTop - clientTop,
            left: box.left + scrollLeft - clientLeft
        };
    };
    jQuery.offset = {
        bodyOffset: function(body) {
            var top = body.offsetTop,
                left = body.offsetLeft;
            if (jQuery.support.doesNotIncludeMarginInBodyOffset) {
                top += parseFloat(jQuery.css(body, "marginTop")) || 0;
                left += parseFloat(jQuery.css(body, "marginLeft")) || 0;
            }
            return {
                top: top,
                left: left
            };
        },
        setOffset: function(elem, options, i) {
            var position = jQuery.css(elem, "position");
            if (position === "static") {
                elem.style.position = "relative";
            }
            var curElem = jQuery(elem),
                curOffset = curElem.offset(),
                curCSSTop = jQuery.css(elem, "top"),
                curCSSLeft = jQuery.css(elem, "left"),
                calculatePosition = (position === "absolute" || position === "fixed") && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,
                props = {}, curPosition = {}, curTop, curLeft;
            if (calculatePosition) {
                curPosition = curElem.position();
                curTop = curPosition.top;
                curLeft = curPosition.left;
            } else {
                curTop = parseFloat(curCSSTop) || 0;
                curLeft = parseFloat(curCSSLeft) || 0;
            }
            if (jQuery.isFunction(options)) {
                options = options.call(elem, i, curOffset);
            }
            if (options.top != null) {
                props.top = (options.top - curOffset.top) + curTop;
            }
            if (options.left != null) {
                props.left = (options.left - curOffset.left) + curLeft;
            }
            if ("using" in options) {
                options.using.call(elem, props);
            } else {
                curElem.css(props);
            }
        }
    };
    jQuery.fn.extend({
        position: function() {
            if (!this[0]) {
                return;
            }
            var elem = this[0],
                offsetParent = this.offsetParent(),
                offset = this.offset(),
                parentOffset = rroot.test(offsetParent[0].nodeName) ? {
                    top: 0,
                    left: 0
                } : offsetParent.offset();
            offset.top -= parseFloat(jQuery.css(elem, "marginTop")) || 0;
            offset.left -= parseFloat(jQuery.css(elem, "marginLeft")) || 0;
            parentOffset.top += parseFloat(jQuery.css(offsetParent[0], "borderTopWidth")) || 0;
            parentOffset.left += parseFloat(jQuery.css(offsetParent[0], "borderLeftWidth")) || 0;
            return {
                top: offset.top - parentOffset.top,
                left: offset.left - parentOffset.left
            };
        },
        offsetParent: function() {
            return this.map(function() {
                var offsetParent = this.offsetParent || document.body;
                while (offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, "position") === "static")) {
                    offsetParent = offsetParent.offsetParent;
                }
                return offsetParent || document.body;
            });
        }
    });
    jQuery.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(method, prop) {
        var top = /Y/.test(prop);
        jQuery.fn[method] = function(val) {
            return jQuery.access(this, function(elem, method, val) {
                var win = getWindow(elem);
                if (val === undefined) {
                    return win ? (prop in win) ? win[prop] : win.document.documentElement[method] : elem[method];
                }
                if (win) {
                    win.scrollTo(!top ? val : jQuery(win).scrollLeft(), top ? val : jQuery(win).scrollTop());
                } else {
                    elem[method] = val;
                }
            }, method, val, arguments.length, null);
        };
    });

    function getWindow(elem) {
        return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 ? elem.defaultView || elem.parentWindow : false;
    }
    jQuery.each({
        Height: "height",
        Width: "width"
    }, function(name, type) {
        jQuery.each({
            padding: "inner" + name,
            content: type,
            "": "outer" + name
        }, function(defaultExtra, funcName) {
            jQuery.fn[funcName] = function(margin, value) {
                var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"),
                    extra = defaultExtra || (margin === true || value === true ? "margin" : "border");
                return jQuery.access(this, function(elem, type, value) {
                    var doc;
                    if (jQuery.isWindow(elem)) {
                        return elem.document.documentElement["client" + name];
                    }
                    if (elem.nodeType === 9) {
                        doc = elem.documentElement;
                        return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name]);
                    }
                    return value === undefined ? jQuery.css(elem, type, value, extra) : jQuery.style(elem, type, value, extra);
                }, type, chainable ? margin : undefined, chainable, null);
            };
        });
    });
    window.jQuery = window.$ = jQuery;
    if (typeof define === "function" && define.amd && define.amd.jQuery) {
        define("jquery", [], function() {
            return jQuery;
        });
    }
})(window);
! function() {
    var root = this;
    var EP2 = root.EP2 = root.EP2 || {};
    EP2.Mediator = function() {};
    EP2.Mediator.prototype = {
        topics: {},
        flushTopic: function(topic) {
            this.topics[topic] = null;
        },
        notify: function(topic, payload) {
            var t = this.topics[topic];
            if (!t) {
                return;
            }
            var i = t.length;
            while (i--) {
                t[i].callback.call(t[i].context, payload);
            }
        },
        subscribe: function(topic, callback, ctx) {
            if (typeof ctx === 'undefined' || ctx === null) {
                throw new Error('Subscribers must pass an execution context for callbacks');
            }
            subObj = {
                callback: callback,
                context: ctx
            };
            topic = topic.split(' ');
            var len = topic.length;
            while (len--) {
                var t = topic[len];
                if (this.topics[t]) {
                    var callbacks = this.topics[t];
                    callbacks.push(subObj);
                } else {
                    this.topics[t] = [subObj];
                }
            }
        }
    };
}.call(this);
(function(O, U, s) {
    'use strict';

    function t(b) {
        return function() {
            var a = arguments[0],
                c, a = "[" + (b ? b + ":" : "") + a + "] http://errors.angularjs.org/1.2.16/" + (b ? b + "/" : "") + a;
            for (c = 1; c < arguments.length; c++) a = a + (1 == c ? "?" : "&") + "p" + (c - 1) + "=" + encodeURIComponent("function" == typeof arguments[c] ? arguments[c].toString().replace(/ \{[\s\S]*$/, "") : "undefined" == typeof arguments[c] ? "undefined" : "string" != typeof arguments[c] ? JSON.stringify(arguments[c]) : arguments[c]);
            return Error(a)
        }
    }

    function ab(b) {
        if (null == b || Ca(b)) return !1;
        var a = b.length;
        return 1 === b.nodeType && a ? !0 : w(b) || M(b) || 0 === a || "number" === typeof a && 0 < a && a - 1 in b
    }

    function q(b, a, c) {
        var d;
        if (b)
            if (P(b))
                for (d in b) "prototype" == d || ("length" == d || "name" == d || b.hasOwnProperty && !b.hasOwnProperty(d)) || a.call(c, b[d], d);
            else if (b.forEach && b.forEach !== q) b.forEach(a, c);
            else if (ab(b))
                for (d = 0; d < b.length; d++) a.call(c, b[d], d);
            else
                for (d in b) b.hasOwnProperty(d) && a.call(c, b[d], d);
        return b
    }

    function Qb(b) {
        var a = [],
            c;
        for (c in b) b.hasOwnProperty(c) && a.push(c);
        return a.sort()
    }

    function Sc(b, a, c) {
        for (var d = Qb(b), e = 0; e < d.length; e++) a.call(c, b[d[e]], d[e]);
        return d
    }

    function Rb(b) {
        return function(a, c) {
            b(c, a)
        }
    }

    function bb() {
        for (var b = ka.length, a; b;) {
            b--;
            a = ka[b].charCodeAt(0);
            if (57 == a) return ka[b] = "A", ka.join("");
            if (90 == a) ka[b] = "0";
            else return ka[b] = String.fromCharCode(a + 1), ka.join("")
        }
        ka.unshift("0");
        return ka.join("")
    }

    function Sb(b, a) {
        a ? b.$$hashKey = a : delete b.$$hashKey
    }

    function D(b) {
        var a = b.$$hashKey;
        q(arguments, function(a) {
            a !== b && q(a, function(a, c) {
                b[c] = a
            })
        });
        Sb(b, a);
        return b
    }

    function Y(b) {
        return parseInt(b, 10)
    }

    function Tb(b, a) {
        return D(new(D(function() {}, {
            prototype: b
        })), a)
    }

    function C() {}

    function Da(b) {
        return b
    }

    function aa(b) {
        return function() {
            return b
        }
    }

    function E(b) {
        return "undefined" === typeof b
    }

    function B(b) {
        return "undefined" !== typeof b
    }

    function X(b) {
        return null != b && "object" === typeof b
    }

    function w(b) {
        return "string" === typeof b
    }

    function vb(b) {
        return "number" === typeof b
    }

    function Na(b) {
        return "[object Date]" === wa.call(b)
    }

    function M(b) {
        return "[object Array]" === wa.call(b)
    }

    function P(b) {
        return "function" === typeof b
    }

    function cb(b) {
        return "[object RegExp]" === wa.call(b)
    }

    function Ca(b) {
        return b && b.document && b.location && b.alert && b.setInterval
    }

    function Tc(b) {
        return !(!b || !(b.nodeName || b.prop && b.attr && b.find))
    }

    function Uc(b, a, c) {
        var d = [];
        q(b, function(b, g, f) {
            d.push(a.call(c, b, g, f))
        });
        return d
    }

    function db(b, a) {
        if (b.indexOf) return b.indexOf(a);
        for (var c = 0; c < b.length; c++)
            if (a === b[c]) return c;
        return -1
    }

    function Oa(b, a) {
        var c = db(b, a);
        0 <= c && b.splice(c, 1);
        return a
    }

    function ba(b, a) {
        if (Ca(b) || b && b.$evalAsync && b.$watch) throw Pa("cpws");
        if (a) {
            if (b === a) throw Pa("cpi");
            if (M(b))
                for (var c = a.length = 0; c < b.length; c++) a.push(ba(b[c]));
            else {
                c = a.$$hashKey;
                q(a, function(b, c) {
                    delete a[c]
                });
                for (var d in b) a[d] = ba(b[d]);
                Sb(a, c)
            }
        } else(a = b) && (M(b) ? a = ba(b, []) : Na(b) ? a = new Date(b.getTime()) : cb(b) ? a = RegExp(b.source) : X(b) && (a = ba(b, {})));
        return a
    }

    function Ub(b, a) {
        a = a || {};
        for (var c in b)!b.hasOwnProperty(c) || "$" === c.charAt(0) && "$" === c.charAt(1) || (a[c] = b[c]);
        return a
    }

    function xa(b, a) {
        if (b === a) return !0;
        if (null === b || null === a) return !1;
        if (b !== b && a !== a) return !0;
        var c = typeof b,
            d;
        if (c == typeof a && "object" == c)
            if (M(b)) {
                if (!M(a)) return !1;
                if ((c = b.length) == a.length) {
                    for (d = 0; d < c; d++)
                        if (!xa(b[d], a[d])) return !1;
                    return !0
                }
            } else {
                if (Na(b)) return Na(a) && b.getTime() == a.getTime();
                if (cb(b) && cb(a)) return b.toString() == a.toString();
                if (b && b.$evalAsync && b.$watch || a && a.$evalAsync && a.$watch || Ca(b) || Ca(a) || M(a)) return !1;
                c = {};
                for (d in b)
                    if ("$" !== d.charAt(0) && !P(b[d])) {
                        if (!xa(b[d], a[d])) return !1;
                        c[d] = !0
                    }
                for (d in a)
                    if (!c.hasOwnProperty(d) && "$" !== d.charAt(0) && a[d] !== s && !P(a[d])) return !1;
                return !0
            }
        return !1
    }

    function Vb() {
        return U.securityPolicy && U.securityPolicy.isActive || U.querySelector && !(!U.querySelector("[ng-csp]") && !U.querySelector("[data-ng-csp]"))
    }

    function eb(b, a) {
        var c = 2 < arguments.length ? ya.call(arguments, 2) : [];
        return !P(a) || a instanceof RegExp ? a : c.length ? function() {
            return arguments.length ? a.apply(b, c.concat(ya.call(arguments, 0))) : a.apply(b, c)
        } : function() {
            return arguments.length ? a.apply(b, arguments) : a.call(b)
        }
    }

    function Vc(b, a) {
        var c = a;
        "string" === typeof b && "$" === b.charAt(0) ? c = s : Ca(a) ? c = "$WINDOW" : a && U === a ? c = "$DOCUMENT" : a && (a.$evalAsync && a.$watch) && (c = "$SCOPE");
        return c
    }

    function qa(b, a) {
        return "undefined" === typeof b ? s : JSON.stringify(b, Vc, a ? "  " : null)
    }

    function Wb(b) {
        return w(b) ? JSON.parse(b) : b
    }

    function Qa(b) {
        "function" === typeof b ? b = !0 : b && 0 !== b.length ? (b = K("" + b), b = !("f" == b || "0" == b || "false" == b || "no" == b || "n" == b || "[]" == b)) : b = !1;
        return b
    }

    function ha(b) {
        b = y(b).clone();
        try {
            b.empty()
        } catch (a) {}
        var c = y("<div>").append(b).html();
        try {
            return 3 === b[0].nodeType ? K(c) : c.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/, function(a, b) {
                return "<" + K(b)
            })
        } catch (d) {
            return K(c)
        }
    }

    function Xb(b) {
        try {
            return decodeURIComponent(b)
        } catch (a) {}
    }

    function Yb(b) {
        var a = {}, c, d;
        q((b || "").split("&"), function(b) {
            b && (c = b.split("="), d = Xb(c[0]), B(d) && (b = B(c[1]) ? Xb(c[1]) : !0, a[d] ? M(a[d]) ? a[d].push(b) : a[d] = [a[d], b] : a[d] = b))
        });
        return a
    }

    function Zb(b) {
        var a = [];
        q(b, function(b, d) {
            M(b) ? q(b, function(b) {
                a.push(za(d, !0) + (!0 === b ? "" : "=" + za(b, !0)))
            }) : a.push(za(d, !0) + (!0 === b ? "" : "=" + za(b, !0)))
        });
        return a.length ? a.join("&") : ""
    }

    function wb(b) {
        return za(b, !0).replace(/%26/gi, "&").replace(/%3D/gi, "=").replace(/%2B/gi, "+")
    }

    function za(b, a) {
        return encodeURIComponent(b).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, a ? "%20" : "+")
    }

    function Wc(b, a) {
        function c(a) {
            a && d.push(a)
        }
        var d = [b],
            e, g, f = ["ng:app", "ng-app", "x-ng-app", "data-ng-app"],
            h = /\sng[:\-]app(:\s*([\w\d_]+);?)?\s/;
        q(f, function(a) {
            f[a] = !0;
            c(U.getElementById(a));
            a = a.replace(":", "\\:");
            b.querySelectorAll && (q(b.querySelectorAll("." + a), c), q(b.querySelectorAll("." +
                a + "\\:"), c), q(b.querySelectorAll("[" + a + "]"), c))
        });
        q(d, function(a) {
            if (!e) {
                var b = h.exec(" " + a.className + " ");
                b ? (e = a, g = (b[2] || "").replace(/\s+/g, ",")) : q(a.attributes, function(b) {
                    !e && f[b.name] && (e = a, g = b.value)
                })
            }
        });
        e && a(e, g ? [g] : [])
    }

    function $b(b, a) {
        var c = function() {
            b = y(b);
            if (b.injector()) {
                var c = b[0] === U ? "document" : ha(b);
                throw Pa("btstrpd", c);
            }
            a = a || [];
            a.unshift(["$provide",
                function(a) {
                    a.value("$rootElement", b)
                }
            ]);
            a.unshift("ng");
            c = ac(a);
            c.invoke(["$rootScope", "$rootElement", "$compile", "$injector", "$animate",
                function(a, b, c, d, e) {
                    a.$apply(function() {
                        b.data("$injector", d);
                        c(b)(a)
                    })
                }
            ]);
            return c
        }, d = /^NG_DEFER_BOOTSTRAP!/;
        if (O && !d.test(O.name)) return c();
        O.name = O.name.replace(d, "");
        Ea.resumeBootstrap = function(b) {
            q(b, function(b) {
                a.push(b)
            });
            c()
        }
    }

    function fb(b, a) {
        a = a || "_";
        return b.replace(Xc, function(b, d) {
            return (d ? a : "") + b.toLowerCase()
        })
    }

    function xb(b, a, c) {
        if (!b) throw Pa("areq", a || "?", c || "required");
        return b
    }

    function Ra(b, a, c) {
        c && M(b) && (b = b[b.length - 1]);
        xb(P(b), a, "not a function, got " + (b && "object" == typeof b ? b.constructor.name || "Object" : typeof b));
        return b
    }

    function Aa(b, a) {
        if ("hasOwnProperty" === b) throw Pa("badname", a);
    }

    function bc(b, a, c) {
        if (!a) return b;
        a = a.split(".");
        for (var d, e = b, g = a.length, f = 0; f < g; f++) d = a[f], b && (b = (e = b)[d]);
        return !c && P(b) ? eb(e, b) : b
    }

    function yb(b) {
        var a = b[0];
        b = b[b.length - 1];
        if (a === b) return y(a);
        var c = [a];
        do {
            a = a.nextSibling;
            if (!a) break;
            c.push(a)
        } while (a !== b);
        return y(c)
    }

    function Yc(b) {
        var a = t("$injector"),
            c = t("ng");
        b = b.angular || (b.angular = {});
        b.$$minErr = b.$$minErr || t;
        return b.module || (b.module = function() {
            var b = {};
            return function(e, g, f) {
                if ("hasOwnProperty" === e) throw c("badname", "module");
                g && b.hasOwnProperty(e) && (b[e] = null);
                return b[e] || (b[e] = function() {
                    function b(a, d, e) {
                        return function() {
                            c[e || "push"]([a, d, arguments]);
                            return n
                        }
                    }
                    if (!g) throw a("nomod", e);
                    var c = [],
                        d = [],
                        m = b("$injector", "invoke"),
                        n = {
                            _invokeQueue: c,
                            _runBlocks: d,
                            requires: g,
                            name: e,
                            provider: b("$provide", "provider"),
                            factory: b("$provide", "factory"),
                            service: b("$provide", "service"),
                            value: b("$provide", "value"),
                            constant: b("$provide", "constant", "unshift"),
                            animation: b("$animateProvider", "register"),
                            filter: b("$filterProvider", "register"),
                            controller: b("$controllerProvider", "register"),
                            directive: b("$compileProvider", "directive"),
                            config: m,
                            run: function(a) {
                                d.push(a);
                                return this
                            }
                        };
                    f && m(f);
                    return n
                }())
            }
        }())
    }

    function Zc(b) {
        D(b, {
            bootstrap: $b,
            copy: ba,
            extend: D,
            equals: xa,
            element: y,
            forEach: q,
            injector: ac,
            noop: C,
            bind: eb,
            toJson: qa,
            fromJson: Wb,
            identity: Da,
            isUndefined: E,
            isDefined: B,
            isString: w,
            isFunction: P,
            isObject: X,
            isNumber: vb,
            isElement: Tc,
            isArray: M,
            version: $c,
            isDate: Na,
            lowercase: K,
            uppercase: Fa,
            callbacks: {
                counter: 0
            },
            $$minErr: t,
            $$csp: Vb
        });
        Sa = Yc(O);
        try {
            Sa("ngLocale")
        } catch (a) {
            Sa("ngLocale", []).provider("$locale", ad)
        }
        Sa("ng", ["ngLocale"], ["$provide",
            function(a) {
                a.provider({
                    $$sanitizeUri: bd
                });
                a.provider("$compile", cc).directive({
                    a: cd,
                    input: dc,
                    textarea: dc,
                    form: dd,
                    script: ed,
                    select: fd,
                    style: gd,
                    option: hd,
                    ngBind: id,
                    ngBindHtml: jd,
                    ngBindTemplate: kd,
                    ngClass: ld,
                    ngClassEven: md,
                    ngClassOdd: nd,
                    ngCloak: od,
                    ngController: pd,
                    ngForm: qd,
                    ngHide: rd,
                    ngIf: sd,
                    ngInclude: td,
                    ngInit: ud,
                    ngNonBindable: vd,
                    ngPluralize: wd,
                    ngRepeat: xd,
                    ngShow: yd,
                    ngStyle: zd,
                    ngSwitch: Ad,
                    ngSwitchWhen: Bd,
                    ngSwitchDefault: Cd,
                    ngOptions: Dd,
                    ngTransclude: Ed,
                    ngModel: Fd,
                    ngList: Gd,
                    ngChange: Hd,
                    required: ec,
                    ngRequired: ec,
                    ngValue: Id
                }).directive({
                        ngInclude: Jd
                    }).directive(zb).directive(fc);
                a.provider({
                    $anchorScroll: Kd,
                    $animate: Ld,
                    $browser: Md,
                    $cacheFactory: Nd,
                    $controller: Od,
                    $document: Pd,
                    $exceptionHandler: Qd,
                    $filter: gc,
                    $interpolate: Rd,
                    $interval: Sd,
                    $http: Td,
                    $httpBackend: Ud,
                    $location: Vd,
                    $log: Wd,
                    $parse: Xd,
                    $rootScope: Yd,
                    $q: Zd,
                    $sce: $d,
                    $sceDelegate: ae,
                    $sniffer: be,
                    $templateCache: ce,
                    $timeout: de,
                    $window: ee,
                    $$rAF: fe,
                    $$asyncCallback: ge
                })
            }
        ])
    }

    function Ta(b) {
        return b.replace(he, function(a, b, d, e) {
            return e ? d.toUpperCase() : d
        }).replace(ie, "Moz$1")
    }

    function Ab(b, a, c, d) {
        function e(b) {
            var e = c && b ? [this.filter(b)] : [this],
                l = a,
                k, m, n, p, r, z;
            if (!d || null != b)
                for (; e.length;)
                    for (k = e.shift(), m = 0, n = k.length; m < n; m++)
                        for (p = y(k[m]), l ? p.triggerHandler("$destroy") : l = !l, r = 0, p = (z = p.children()).length; r < p; r++) e.push(Ga(z[r]));
            return g.apply(this, arguments)
        }
        var g = Ga.fn[b],
            g = g.$original || g;
        e.$original = g;
        Ga.fn[b] = e
    }

    function N(b) {
        if (b instanceof N) return b;
        w(b) && (b = ca(b));
        if (!(this instanceof N)) {
            if (w(b) && "<" != b.charAt(0)) throw Bb("nosel");
            return new N(b)
        }
        if (w(b)) {
            var a = b;
            b = U;
            var c;
            if (c = je.exec(a)) b = [b.createElement(c[1])];
            else {
                var d = b,
                    e;
                b = d.createDocumentFragment();
                c = [];
                if (Cb.test(a)) {
                    d = b.appendChild(d.createElement("div"));
                    e = (ke.exec(a) || ["", ""])[1].toLowerCase();
                    e = ea[e] || ea._default;
                    d.innerHTML = "<div>&#160;</div>" + e[1] + a.replace(le, "<$1></$2>") + e[2];
                    d.removeChild(d.firstChild);
                    for (a = e[0]; a--;) d = d.lastChild;
                    a = 0;
                    for (e = d.childNodes.length; a < e; ++a) c.push(d.childNodes[a]);
                    d = b.firstChild;
                    d.textContent = ""
                } else c.push(d.createTextNode(a));
                b.textContent = "";
                b.innerHTML = "";
                b = c
            }
            Db(this, b);
            y(U.createDocumentFragment()).append(this)
        } else Db(this, b)
    }

    function Eb(b) {
        return b.cloneNode(!0)
    }

    function Ha(b) {
        hc(b);
        var a = 0;
        for (b = b.childNodes || []; a < b.length; a++) Ha(b[a])
    }

    function ic(b, a, c, d) {
        if (B(d)) throw Bb("offargs");
        var e = la(b, "events");
        la(b, "handle") && (E(a) ? q(e, function(a, c) {
            Fb(b, c, a);
            delete e[c]
        }) : q(a.split(" "), function(a) {
            E(c) ? (Fb(b, a, e[a]), delete e[a]) : Oa(e[a] || [], c)
        }))
    }

    function hc(b, a) {
        var c = b[gb],
            d = Ua[c];
        d && (a ? delete Ua[c].data[a] : (d.handle && (d.events.$destroy && d.handle({}, "$destroy"), ic(b)), delete Ua[c], b[gb] = s))
    }

    function la(b, a, c) {
        var d = b[gb],
            d = Ua[d || -1];
        if (B(c)) d || (b[gb] = d = ++me, d = Ua[d] = {}), d[a] = c;
        else return d && d[a]
    }

    function jc(b, a, c) {
        var d = la(b, "data"),
            e = B(c),
            g = !e && B(a),
            f = g && !X(a);
        d || f || la(b, "data", d = {});
        if (e) d[a] = c;
        else if (g) {
            if (f) return d && d[a];
            D(d, a)
        } else return d
    }

    function Gb(b, a) {
        return b.getAttribute ? -1 < (" " + (b.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").indexOf(" " + a + " ") : !1
    }

    function hb(b, a) {
        a && b.setAttribute && q(a.split(" "), function(a) {
            b.setAttribute("class", ca((" " + (b.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").replace(" " + ca(a) + " ", " ")))
        })
    }

    function ib(b, a) {
        if (a && b.setAttribute) {
            var c = (" " + (b.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ");
            q(a.split(" "), function(a) {
                a = ca(a); - 1 === c.indexOf(" " + a + " ") && (c += a + " ")
            });
            b.setAttribute("class", ca(c))
        }
    }

    function Db(b, a) {
        if (a) {
            a = a.nodeName || !B(a.length) || Ca(a) ? [a] : a;
            for (var c = 0; c < a.length; c++) b.push(a[c])
        }
    }

    function kc(b, a) {
        return jb(b, "$" + (a || "ngController") + "Controller")
    }

    function jb(b, a, c) {
        b = y(b);
        9 == b[0].nodeType && (b = b.find("html"));
        for (a = M(a) ? a : [a]; b.length;) {
            for (var d = b[0], e = 0, g = a.length; e < g; e++)
                if ((c = b.data(a[e])) !== s) return c;
            b = y(d.parentNode || 11 === d.nodeType && d.host)
        }
    }

    function lc(b) {
        for (var a = 0, c = b.childNodes; a < c.length; a++) Ha(c[a]);
        for (; b.firstChild;) b.removeChild(b.firstChild)
    }

    function mc(b, a) {
        var c = kb[a.toLowerCase()];
        return c && nc[b.nodeName] && c
    }

    function ne(b, a) {
        var c = function(c, e) {
            c.preventDefault || (c.preventDefault = function() {
                c.returnValue = !1
            });
            c.stopPropagation || (c.stopPropagation = function() {
                c.cancelBubble = !0
            });
            c.target || (c.target = c.srcElement || U);
            if (E(c.defaultPrevented)) {
                var g = c.preventDefault;
                c.preventDefault = function() {
                    c.defaultPrevented = !0;
                    g.call(c)
                };
                c.defaultPrevented = !1
            }
            c.isDefaultPrevented = function() {
                return c.defaultPrevented || !1 === c.returnValue
            };
            var f = Ub(a[e || c.type] || []);
            q(f, function(a) {
                a.call(b, c)
            });
            8 >= S ? (c.preventDefault = null, c.stopPropagation = null, c.isDefaultPrevented = null) : (delete c.preventDefault, delete c.stopPropagation, delete c.isDefaultPrevented)
        };
        c.elem = b;
        return c
    }

    function Ia(b) {
        var a = typeof b,
            c;
        "object" == a && null !== b ? "function" == typeof(c = b.$$hashKey) ? c = b.$$hashKey() : c === s && (c = b.$$hashKey = bb()) : c = b;
        return a + ":" + c
    }

    function Va(b) {
        q(b, this.put, this)
    }

    function oc(b) {
        var a, c;
        "function" == typeof b ? (a = b.$inject) || (a = [], b.length && (c = b.toString().replace(oe, ""), c = c.match(pe), q(c[1].split(qe), function(b) {
            b.replace(re, function(b, c, d) {
                a.push(d)
            })
        })), b.$inject = a) : M(b) ? (c = b.length - 1, Ra(b[c], "fn"), a = b.slice(0, c)) : Ra(b, "fn", !0);
        return a
    }

    function ac(b) {
        function a(a) {
            return function(b, c) {
                if (X(b)) q(b, Rb(a));
                else return a(b, c)
            }
        }

        function c(a, b) {
            Aa(a, "service");
            if (P(b) || M(b)) b = n.instantiate(b);
            if (!b.$get) throw Wa("pget", a);
            return m[a + h] = b
        }

        function d(a, b) {
            return c(a, {
                $get: b
            })
        }

        function e(a) {
            var b = [],
                c, d, g, h;
            q(a, function(a) {
                if (!k.get(a)) {
                    k.put(a, !0);
                    try {
                        if (w(a))
                            for (c = Sa(a), b = b.concat(e(c.requires)).concat(c._runBlocks), d = c._invokeQueue, g = 0, h = d.length; g < h; g++) {
                                var f = d[g],
                                    l = n.get(f[0]);
                                l[f[1]].apply(l, f[2])
                            } else P(a) ? b.push(n.invoke(a)) : M(a) ? b.push(n.invoke(a)) : Ra(a, "module")
                    } catch (m) {
                        throw M(a) && (a = a[a.length - 1]), m.message && (m.stack && -1 == m.stack.indexOf(m.message)) && (m = m.message + "\n" + m.stack), Wa("modulerr", a, m.stack || m.message || m);
                    }
                }
            });
            return b
        }

        function g(a, b) {
            function c(d) {
                if (a.hasOwnProperty(d)) {
                    if (a[d] === f) throw Wa("cdep", l.join(" <- "));
                    return a[d]
                }
                try {
                    return l.unshift(d), a[d] = f, a[d] = b(d)
                } catch (e) {
                    throw a[d] === f && delete a[d], e;
                } finally {
                    l.shift()
                }
            }

            function d(a, b, e) {
                var g = [],
                    h = oc(a),
                    f, l, k;
                l = 0;
                for (f = h.length; l < f; l++) {
                    k = h[l];
                    if ("string" !== typeof k) throw Wa("itkn", k);
                    g.push(e && e.hasOwnProperty(k) ? e[k] : c(k))
                }
                a.$inject || (a = a[f]);
                return a.apply(b, g)
            }
            return {
                invoke: d,
                instantiate: function(a, b) {
                    var c = function() {}, e;
                    c.prototype = (M(a) ? a[a.length - 1] : a).prototype;
                    c = new c;
                    e = d(a, c, b);
                    return X(e) || P(e) ? e : c
                },
                get: c,
                annotate: oc,
                has: function(b) {
                    return m.hasOwnProperty(b + h) || a.hasOwnProperty(b)
                }
            }
        }
        var f = {}, h = "Provider",
            l = [],
            k = new Va,
            m = {
                $provide: {
                    provider: a(c),
                    factory: a(d),
                    service: a(function(a, b) {
                        return d(a, ["$injector",
                            function(a) {
                                return a.instantiate(b)
                            }
                        ])
                    }),
                    value: a(function(a, b) {
                        return d(a, aa(b))
                    }),
                    constant: a(function(a, b) {
                        Aa(a, "constant");
                        m[a] = b;
                        p[a] = b
                    }),
                    decorator: function(a, b) {
                        var c = n.get(a + h),
                            d = c.$get;
                        c.$get = function() {
                            var a = r.invoke(d, c);
                            return r.invoke(b, null, {
                                $delegate: a
                            })
                        }
                    }
                }
            }, n = m.$injector = g(m, function() {
                throw Wa("unpr", l.join(" <- "));
            }),
            p = {}, r = p.$injector = g(p, function(a) {
                a = n.get(a +
                    h);
                return r.invoke(a.$get, a)
            });
        q(e(b), function(a) {
            r.invoke(a || C)
        });
        return r
    }

    function Kd() {
        var b = !0;
        this.disableAutoScrolling = function() {
            b = !1
        };
        this.$get = ["$window", "$location", "$rootScope",
            function(a, c, d) {
                function e(a) {
                    var b = null;
                    q(a, function(a) {
                        b || "a" !== K(a.nodeName) || (b = a)
                    });
                    return b
                }

                function g() {
                    var b = c.hash(),
                        d;
                    b ? (d = f.getElementById(b)) ? d.scrollIntoView() : (d = e(f.getElementsByName(b))) ? d.scrollIntoView() : "top" === b && a.scrollTo(0, 0) : a.scrollTo(0, 0)
                }
                var f = a.document;
                b && d.$watch(function() {
                    return c.hash()
                }, function() {
                    d.$evalAsync(g)
                });
                return g
            }
        ]
    }

    function ge() {
        this.$get = ["$$rAF", "$timeout",
            function(b, a) {
                return b.supported ? function(a) {
                    return b(a)
                } : function(b) {
                    return a(b, 0, !1)
                }
            }
        ]
    }

    function se(b, a, c, d) {
        function e(a) {
            try {
                a.apply(null, ya.call(arguments, 1))
            } finally {
                if (z--, 0 === z)
                    for (; u.length;) try {
                        u.pop()()
                    } catch (b) {
                        c.error(b)
                    }
            }
        }

        function g(a, b) {
            (function T() {
                q(F, function(a) {
                    a()
                });
                v = b(T, a)
            })()
        }

        function f() {
            x = null;
            J != h.url() && (J = h.url(), q(ma, function(a) {
                a(h.url())
            }))
        }
        var h = this,
            l = a[0],
            k = b.location,
            m = b.history,
            n = b.setTimeout,
            p = b.clearTimeout,
            r = {};
        h.isMock = !1;
        var z = 0,
            u = [];
        h.$$completeOutstandingRequest = e;
        h.$$incOutstandingRequestCount = function() {
            z++
        };
        h.notifyWhenNoOutstandingRequests = function(a) {
            q(F, function(a) {
                a()
            });
            0 === z ? a() : u.push(a)
        };
        var F = [],
            v;
        h.addPollFn = function(a) {
            E(v) && g(100, n);
            F.push(a);
            return a
        };
        var J = k.href,
            A = a.find("base"),
            x = null;
        h.url = function(a, c) {
            k !== b.location && (k = b.location);
            m !== b.history && (m = b.history);
            if (a) {
                if (J != a) return J = a, d.history ? c ? m.replaceState(null, "", a) : (m.pushState(null, "", a), A.attr("href", A.attr("href"))) : (x = a, c ? k.replace(a) : k.href = a), h
            } else return x || k.href.replace(/%27/g, "'")
        };
        var ma = [],
            L = !1;
        h.onUrlChange = function(a) {
            if (!L) {
                if (d.history) y(b).on("popstate", f);
                if (d.hashchange) y(b).on("hashchange", f);
                else h.addPollFn(f);
                L = !0
            }
            ma.push(a);
            return a
        };
        h.baseHref = function() {
            var a = A.attr("href");
            return a ? a.replace(/^(https?\:)?\/\/[^\/]*/, "") : ""
        };
        var Q = {}, da = "",
            H = h.baseHref();
        h.cookies = function(a, b) {
            var d, e, g, h;
            if (a) b === s ? l.cookie = escape(a) + "=;path=" + H + ";expires=Thu, 01 Jan 1970 00:00:00 GMT" : w(b) && (d = (l.cookie = escape(a) + "=" + escape(b) + ";path=" + H).length + 1, 4096 < d && c.warn("Cookie '" + a + "' possibly not set or overflowed because it was too large (" + d + " > 4096 bytes)!"));
            else {
                if (l.cookie !== da)
                    for (da = l.cookie, d = da.split("; "), Q = {}, g = 0; g < d.length; g++) e = d[g], h = e.indexOf("="), 0 < h && (a = unescape(e.substring(0, h)), Q[a] === s && (Q[a] = unescape(e.substring(h + 1))));
                return Q
            }
        };
        h.defer = function(a, b) {
            var c;
            z++;
            c = n(function() {
                delete r[c];
                e(a)
            }, b || 0);
            r[c] = !0;
            return c
        };
        h.defer.cancel = function(a) {
            return r[a] ? (delete r[a], p(a), e(C), !0) : !1
        }
    }

    function Md() {
        this.$get = ["$window", "$log", "$sniffer", "$document",
            function(b, a, c, d) {
                return new se(b, d, a, c)
            }
        ]
    }

    function Nd() {
        this.$get = function() {
            function b(b, d) {
                function e(a) {
                    a != n && (p ? p == a && (p = a.n) : p = a, g(a.n, a.p), g(a, n), n = a, n.n = null)
                }

                function g(a, b) {
                    a != b && (a && (a.p = b), b && (b.n = a))
                }
                if (b in a) throw t("$cacheFactory")("iid", b);
                var f = 0,
                    h = D({}, d, {
                        id: b
                    }),
                    l = {}, k = d && d.capacity || Number.MAX_VALUE,
                    m = {}, n = null,
                    p = null;
                return a[b] = {
                    put: function(a, b) {
                        if (k < Number.MAX_VALUE) {
                            var c = m[a] || (m[a] = {
                                key: a
                            });
                            e(c)
                        }
                        if (!E(b)) return a in l || f++, l[a] = b, f > k && this.remove(p.key), b
                    },
                    get: function(a) {
                        if (k < Number.MAX_VALUE) {
                            var b = m[a];
                            if (!b) return;
                            e(b)
                        }
                        return l[a]
                    },
                    remove: function(a) {
                        if (k < Number.MAX_VALUE) {
                            var b = m[a];
                            if (!b) return;
                            b == n && (n = b.p);
                            b == p && (p = b.n);
                            g(b.n, b.p);
                            delete m[a]
                        }
                        delete l[a];
                        f--
                    },
                    removeAll: function() {
                        l = {};
                        f = 0;
                        m = {};
                        n = p = null
                    },
                    destroy: function() {
                        m = h = l = null;
                        delete a[b]
                    },
                    info: function() {
                        return D({}, h, {
                            size: f
                        })
                    }
                }
            }
            var a = {};
            b.info = function() {
                var b = {};
                q(a, function(a, e) {
                    b[e] = a.info()
                });
                return b
            };
            b.get = function(b) {
                return a[b]
            };
            return b
        }
    }

    function ce() {
        this.$get = ["$cacheFactory",
            function(b) {
                return b("templates")
            }
        ]
    }

    function cc(b, a) {
        var c = {}, d = "Directive",
            e = /^\s*directive\:\s*([\d\w\-_]+)\s+(.*)$/,
            g = /(([\d\w\-_]+)(?:\:([^;]+))?;?)/,
            f = /^(on[a-z]+|formaction)$/;
        this.directive = function l(a, e) {
            Aa(a, "directive");
            w(a) ? (xb(e, "directiveFactory"), c.hasOwnProperty(a) || (c[a] = [], b.factory(a + d, ["$injector", "$exceptionHandler",
                function(b, d) {
                    var e = [];
                    q(c[a], function(c, g) {
                        try {
                            var f = b.invoke(c);
                            P(f) ? f = {
                                compile: aa(f)
                            } : !f.compile && f.link && (f.compile = aa(f.link));
                            f.priority = f.priority || 0;
                            f.index = g;
                            f.name = f.name || a;
                            f.require = f.require || f.controller && f.name;
                            f.restrict = f.restrict || "A";
                            e.push(f)
                        } catch (l) {
                            d(l)
                        }
                    });
                    return e
                }
            ])), c[a].push(e)) : q(a, Rb(l));
            return this
        };
        this.aHrefSanitizationWhitelist = function(b) {
            return B(b) ? (a.aHrefSanitizationWhitelist(b), this) : a.aHrefSanitizationWhitelist()
        };
        this.imgSrcSanitizationWhitelist = function(b) {
            return B(b) ? (a.imgSrcSanitizationWhitelist(b), this) : a.imgSrcSanitizationWhitelist()
        };
        this.$get = ["$injector", "$interpolate", "$exceptionHandler", "$http", "$templateCache", "$parse", "$controller", "$rootScope", "$document", "$sce", "$animate", "$$sanitizeUri",
            function(a, b, m, n, p, r, z, u, F, v, J, A) {
                function x(a, b, c, d, e) {
                    a instanceof y || (a = y(a));
                    q(a, function(b, c) {
                        3 == b.nodeType && b.nodeValue.match(/\S+/) && (a[c] = y(b).wrap("<span></span>").parent()[0])
                    });
                    var g = L(a, b, a, c, d, e);
                    ma(a, "ng-scope");
                    return function(b, c, d) {
                        xb(b, "scope");
                        var e = c ? Ja.clone.call(a) : a;
                        q(d, function(a, b) {
                            e.data("$" + b + "Controller", a)
                        });
                        d = 0;
                        for (var f = e.length; d < f; d++) {
                            var l = e[d].nodeType;
                            1 !== l && 9 !== l || e.eq(d).data("$scope", b)
                        }
                        c && c(e, b);
                        g && g(b, e, e);
                        return e
                    }
                }

                function ma(a, b) {
                    try {
                        a.addClass(b)
                    } catch (c) {}
                }

                function L(a, b, c, d, e, g) {
                    function f(a, c, d, e) {
                        var g, k, m, r, n, p, z;
                        g = c.length;
                        var I = Array(g);
                        for (n = 0; n < g; n++) I[n] = c[n];
                        z = n = 0;
                        for (p = l.length; n < p; z++) k = I[z], c = l[n++], g = l[n++], m = y(k), c ? (c.scope ? (r = a.$new(), m.data("$scope", r)) : r = a, (m = c.transclude) || !e && b ? c(g, r, k, d, Q(a, m || b)) : c(g, r, k, d, e)) : g && g(a, k.childNodes, s, e)
                    }
                    for (var l = [], k, m, r, n, p = 0; p < a.length; p++) k = new Hb, m = da(a[p], [], k, 0 === p ? d : s, e), (g = m.length ? ia(m, a[p], k, b, c, null, [], [], g) : null) && g.scope && ma(y(a[p]), "ng-scope"), k = g && g.terminal || !(r = a[p].childNodes) || !r.length ? null : L(r, g ? g.transclude : b), l.push(g, k), n = n || g || k, g = null;
                    return n ? f : null
                }

                function Q(a, b) {
                    return function(c, d, e) {
                        var g = !1;
                        c || (c = a.$new(), g = c.$$transcluded = !0);
                        d = b(c, d, e);
                        if (g) d.on("$destroy", eb(c, c.$destroy));
                        return d
                    }
                }

                function da(a, b, c, d, f) {
                    var k = c.$attr,
                        l;
                    switch (a.nodeType) {
                        case 1:
                            T(b, na(Ka(a).toLowerCase()), "E", d, f);
                            var m, r, n;
                            l = a.attributes;
                            for (var p = 0, z = l && l.length; p < z; p++) {
                                var u = !1,
                                    F = !1;
                                m = l[p];
                                if (!S || 8 <= S || m.specified) {
                                    r = m.name;
                                    n = na(r);
                                    W.test(n) && (r = fb(n.substr(6), "-"));
                                    var J = n.replace(/(Start|End)$/, "");
                                    n === J + "Start" && (u = r, F = r.substr(0, r.length - 5) + "end", r = r.substr(0, r.length - 6));
                                    n = na(r.toLowerCase());
                                    k[n] = r;
                                    c[n] = m = ca(m.value);
                                    mc(a, n) && (c[n] = !0);
                                    N(a, b, m, n);
                                    T(b, n, "A", d, f, u, F)
                                }
                            }
                            a = a.className;
                            if (w(a) && "" !== a)
                                for (; l = g.exec(a);) n = na(l[2]), T(b, n, "C", d, f) && (c[n] = ca(l[3])), a = a.substr(l.index + l[0].length);
                            break;
                        case 3:
                            t(b, a.nodeValue);
                            break;
                        case 8:
                            try {
                                if (l = e.exec(a.nodeValue)) n = na(l[1]), T(b, n, "M", d, f) && (c[n] = ca(l[2]))
                            } catch (x) {}
                    }
                    b.sort(E);
                    return b
                }

                function H(a, b, c) {
                    var d = [],
                        e = 0;
                    if (b && a.hasAttribute && a.hasAttribute(b)) {
                        do {
                            if (!a) throw ja("uterdir", b, c);
                            1 == a.nodeType && (a.hasAttribute(b) && e++, a.hasAttribute(c) && e--);
                            d.push(a);
                            a = a.nextSibling
                        } while (0 < e)
                    } else d.push(a);
                    return y(d)
                }

                function R(a, b, c) {
                    return function(d, e, g, f, l) {
                        e = H(e[0], b, c);
                        return a(d, e, g, f, l)
                    }
                }

                function ia(a, c, d, e, g, f, l, n, p) {
                    function u(a, b, c, d) {
                        if (a) {
                            c && (a = R(a, c, d));
                            a.require = G.require;
                            if (Q === G || G.$$isolateScope) a = qc(a, {
                                isolateScope: !0
                            });
                            l.push(a)
                        }
                        if (b) {
                            c && (b = R(b, c, d));
                            b.require = G.require;
                            if (Q === G || G.$$isolateScope) b = qc(b, {
                                isolateScope: !0
                            });
                            n.push(b)
                        }
                    }

                    function F(a, b, c) {
                        var d, e = "data",
                            g = !1;
                        if (w(a)) {
                            for (;
                                "^" == (d = a.charAt(0)) || "?" == d;) a = a.substr(1), "^" == d && (e = "inheritedData"), g = g || "?" == d;
                            d = null;
                            c && "data" === e && (d = c[a]);
                            d = d || b[e]("$" + a + "Controller");
                            if (!d && !g) throw ja("ctreq", a, t);
                        } else M(a) && (d = [], q(a, function(a) {
                            d.push(F(a, b, c))
                        }));
                        return d
                    }

                    function J(a, e, g, f, p) {
                        function u(a, b) {
                            var c;
                            2 > arguments.length && (b = a, a = s);
                            D && (c = lb);
                            return p(a, b, c)
                        }
                        var I, x, v, A, R, H, lb = {}, da;
                        I = c === g ? d : Ub(d, new Hb(y(g), d.$attr));
                        x = I.$$element;
                        if (Q) {
                            var T = /^\s*([@=&])(\??)\s*(\w*)\s*$/;
                            f = y(g);
                            H = e.$new(!0);
                            ia && ia === Q.$$originalDirective ? f.data("$isolateScope", H) : f.data("$isolateScopeNoTemplate", H);
                            ma(f, "ng-isolate-scope");
                            q(Q.scope, function(a, c) {
                                var d = a.match(T) || [],
                                    g = d[3] || c,
                                    f = "?" == d[2],
                                    d = d[1],
                                    l, m, n, p;
                                H.$$isolateBindings[c] = d + g;
                                switch (d) {
                                    case "@":
                                        I.$observe(g, function(a) {
                                            H[c] = a
                                        });
                                        I.$$observers[g].$$scope = e;
                                        I[g] && (H[c] = b(I[g])(e));
                                        break;
                                    case "=":
                                        if (f && !I[g]) break;
                                        m = r(I[g]);
                                        p = m.literal ? xa : function(a, b) {
                                            return a === b
                                        };
                                        n = m.assign || function() {
                                            l = H[c] = m(e);
                                            throw ja("nonassign", I[g], Q.name);
                                        };
                                        l = H[c] = m(e);
                                        H.$watch(function() {
                                            var a = m(e);
                                            p(a, H[c]) || (p(a, l) ? n(e, a = H[c]) : H[c] = a);
                                            return l = a
                                        }, null, m.literal);
                                        break;
                                    case "&":
                                        m = r(I[g]);
                                        H[c] = function(a) {
                                            return m(e, a)
                                        };
                                        break;
                                    default:
                                        throw ja("iscp", Q.name, c, a);
                                }
                            })
                        }
                        da = p && u;
                        L && q(L, function(a) {
                            var b = {
                                $scope: a === Q || a.$$isolateScope ? H : e,
                                $element: x,
                                $attrs: I,
                                $transclude: da
                            }, c;
                            R = a.controller;
                            "@" == R && (R = I[a.name]);
                            c = z(R, b);
                            lb[a.name] = c;
                            D || x.data("$" + a.name + "Controller", c);
                            a.controllerAs && (b.$scope[a.controllerAs] = c)
                        });
                        f = 0;
                        for (v = l.length; f < v; f++) try {
                            A = l[f], A(A.isolateScope ? H : e, x, I, A.require && F(A.require, x, lb), da)
                        } catch (G) {
                            m(G, ha(x))
                        }
                        f = e;
                        Q && (Q.template || null === Q.templateUrl) && (f = H);
                        a && a(f, g.childNodes, s, p);
                        for (f = n.length - 1; 0 <= f; f--) try {
                            A = n[f], A(A.isolateScope ? H : e, x, I, A.require && F(A.require, x, lb), da)
                        } catch (B) {
                            m(B, ha(x))
                        }
                    }
                    p = p || {};
                    for (var v = -Number.MAX_VALUE, A, L = p.controllerDirectives, Q = p.newIsolateScopeDirective, ia = p.templateDirective, T = p.nonTlbTranscludeDirective, E = !1, D = p.hasElementTranscludeDirective, Z = d.$$element = y(c), G, t, V, Xa = e, O, N = 0, S = a.length; N < S; N++) {
                        G = a[N];
                        var ra = G.$$start,
                            W = G.$$end;
                        ra && (Z = H(c, ra, W));
                        V = s;
                        if (v > G.priority) break;
                        if (V = G.scope) A = A || G, G.templateUrl || (K("new/isolated scope", Q, G, Z), X(V) && (Q = G));
                        t = G.name;
                        !G.templateUrl && G.controller && (V = G.controller, L = L || {}, K("'" + t + "' controller", L[t], G, Z), L[t] = G);
                        if (V = G.transclude) E = !0, G.$$tlb || (K("transclusion", T, G, Z), T = G), "element" == V ? (D = !0, v = G.priority, V = H(c, ra, W), Z = d.$$element = y(U.createComment(" " + t + ": " + d[t] + " ")), c = Z[0], mb(g, y(ya.call(V, 0)), c), Xa = x(V, e, v, f && f.name, {
                            nonTlbTranscludeDirective: T
                        })) : (V = y(Eb(c)).contents(), Z.empty(), Xa = x(V, e));
                        if (G.template)
                            if (K("template", ia, G, Z), ia = G, V = P(G.template) ? G.template(Z, d) : G.template, V = Y(V), G.replace) {
                                f = G;
                                V = Cb.test(V) ? y(V) : [];
                                c = V[0];
                                if (1 != V.length || 1 !== c.nodeType) throw ja("tplrt", t, "");
                                mb(g, Z, c);
                                S = {
                                    $attr: {}
                                };
                                V = da(c, [], S);
                                var $ = a.splice(N + 1, a.length - (N + 1));
                                Q && pc(V);
                                a = a.concat(V).concat($);
                                B(d, S);
                                S = a.length
                            } else Z.html(V);
                        if (G.templateUrl) K("template", ia, G, Z), ia = G, G.replace && (f = G), J = C(a.splice(N, a.length - N), Z, d, g, Xa, l, n, {
                            controllerDirectives: L,
                            newIsolateScopeDirective: Q,
                            templateDirective: ia,
                            nonTlbTranscludeDirective: T
                        }), S = a.length;
                        else if (G.compile) try {
                            O = G.compile(Z, d, Xa), P(O) ? u(null, O, ra, W) : O && u(O.pre, O.post, ra, W)
                        } catch (aa) {
                            m(aa, ha(Z))
                        }
                        G.terminal && (J.terminal = !0, v = Math.max(v, G.priority))
                    }
                    J.scope = A && !0 === A.scope;
                    J.transclude = E && Xa;
                    p.hasElementTranscludeDirective = D;
                    return J
                }

                function pc(a) {
                    for (var b = 0, c = a.length; b < c; b++) a[b] = Tb(a[b], {
                        $$isolateScope: !0
                    })
                }

                function T(b, e, g, f, k, n, r) {
                    if (e === k) return null;
                    k = null;
                    if (c.hasOwnProperty(e)) {
                        var p;
                        e = a.get(e + d);
                        for (var z = 0, u = e.length; z < u; z++) try {
                            p = e[z], (f === s || f > p.priority) && -1 != p.restrict.indexOf(g) && (n && (p = Tb(p, {
                                $$start: n,
                                $$end: r
                            })), b.push(p), k = p)
                        } catch (F) {
                            m(F)
                        }
                    }
                    return k
                }

                function B(a, b) {
                    var c = b.$attr,
                        d = a.$attr,
                        e = a.$$element;
                    q(a, function(d, e) {
                        "$" != e.charAt(0) && (b[e] && (d += ("style" === e ? ";" : " ") + b[e]), a.$set(e, d, !0, c[e]))
                    });
                    q(b, function(b, g) {
                        "class" == g ? (ma(e, b), a["class"] = (a["class"] ? a["class"] + " " : "") + b) : "style" == g ? (e.attr("style", e.attr("style") + ";" + b), a.style = (a.style ? a.style + ";" : "") + b) : "$" == g.charAt(0) || a.hasOwnProperty(g) || (a[g] = b, d[g] = c[g])
                    })
                }

                function C(a, b, c, d, e, g, f, l) {
                    var k = [],
                        m, r, z = b[0],
                        u = a.shift(),
                        F = D({}, u, {
                            templateUrl: null,
                            transclude: null,
                            replace: null,
                            $$originalDirective: u
                        }),
                        x = P(u.templateUrl) ? u.templateUrl(b, c) : u.templateUrl;
                    b.empty();
                    n.get(v.getTrustedResourceUrl(x), {
                        cache: p
                    }).success(function(n) {
                            var p, J;
                            n = Y(n);
                            if (u.replace) {
                                n = Cb.test(n) ? y(n) : [];
                                p = n[0];
                                if (1 != n.length || 1 !== p.nodeType) throw ja("tplrt", u.name, x);
                                n = {
                                    $attr: {}
                                };
                                mb(d, b, p);
                                var v = da(p, [], n);
                                X(u.scope) && pc(v);
                                a = v.concat(a);
                                B(c, n)
                            } else p = z, b.html(n);
                            a.unshift(F);
                            m = ia(a, p, c, e, b, u, g, f, l);
                            q(d, function(a, c) {
                                a == p && (d[c] = b[0])
                            });
                            for (r = L(b[0].childNodes, e); k.length;) {
                                n = k.shift();
                                J = k.shift();
                                var A = k.shift(),
                                    R = k.shift(),
                                    v = b[0];
                                if (J !== z) {
                                    var H = J.className;
                                    l.hasElementTranscludeDirective && u.replace || (v = Eb(p));
                                    mb(A, y(J), v);
                                    ma(y(v), H)
                                }
                                J = m.transclude ? Q(n, m.transclude) : R;
                                m(r, n, v, d, J)
                            }
                            k = null
                        }).error(function(a, b, c, d) {
                            throw ja("tpload", d.url);
                        });
                    return function(a, b, c, d, e) {
                        k ? (k.push(b), k.push(c), k.push(d), k.push(e)) : m(r, b, c, d, e)
                    }
                }

                function E(a, b) {
                    var c = b.priority - a.priority;
                    return 0 !== c ? c : a.name !== b.name ? a.name < b.name ? -1 : 1 : a.index - b.index
                }

                function K(a, b, c, d) {
                    if (b) throw ja("multidir", b.name, c.name, a, ha(d));
                }

                function t(a, c) {
                    var d = b(c, !0);
                    d && a.push({
                        priority: 0,
                        compile: aa(function(a, b) {
                            var c = b.parent(),
                                e = c.data("$binding") || [];
                            e.push(d);
                            ma(c.data("$binding", e), "ng-binding");
                            a.$watch(d, function(a) {
                                b[0].nodeValue = a
                            })
                        })
                    })
                }

                function O(a, b) {
                    if ("srcdoc" == b) return v.HTML;
                    var c = Ka(a);
                    if ("xlinkHref" == b || "FORM" == c && "action" == b || "IMG" != c && ("src" == b || "ngSrc" == b)) return v.RESOURCE_URL
                }

                function N(a, c, d, e) {
                    var g = b(d, !0);
                    if (g) {
                        if ("multiple" === e && "SELECT" === Ka(a)) throw ja("selmulti", ha(a));
                        c.push({
                            priority: 100,
                            compile: function() {
                                return {
                                    pre: function(c, d, l) {
                                        d = l.$$observers || (l.$$observers = {});
                                        if (f.test(e)) throw ja("nodomevents");
                                        if (g = b(l[e], !0, O(a, e))) l[e] = g(c), (d[e] || (d[e] = [])).$$inter = !0, (l.$$observers && l.$$observers[e].$$scope || c).$watch(g, function(a, b) {
                                            "class" === e && a != b ? l.$updateClass(a, b) : l.$set(e, a)
                                        })
                                    }
                                }
                            }
                        })
                    }
                }

                function mb(a, b, c) {
                    var d = b[0],
                        e = b.length,
                        g = d.parentNode,
                        f, l;
                    if (a)
                        for (f = 0, l = a.length; f < l; f++)
                            if (a[f] == d) {
                                a[f++] = c;
                                l = f + e - 1;
                                for (var k = a.length; f < k; f++, l++) l < k ? a[f] = a[l] : delete a[f];
                                a.length -= e - 1;
                                break
                            }
                    g && g.replaceChild(c, d);
                    a = U.createDocumentFragment();
                    a.appendChild(d);
                    c[y.expando] = d[y.expando];
                    d = 1;
                    for (e = b.length; d < e; d++) g = b[d], y(g).remove(), a.appendChild(g), delete b[d];
                    b[0] = c;
                    b.length = 1
                }

                function qc(a, b) {
                    return D(function() {
                        return a.apply(null, arguments)
                    }, a, b)
                }
                var Hb = function(a, b) {
                    this.$$element = a;
                    this.$attr = b || {}
                };
                Hb.prototype = {
                    $normalize: na,
                    $addClass: function(a) {
                        a && 0 < a.length && J.addClass(this.$$element, a)
                    },
                    $removeClass: function(a) {
                        a && 0 < a.length && J.removeClass(this.$$element, a)
                    },
                    $updateClass: function(a, b) {
                        var c = rc(a, b),
                            d = rc(b, a);
                        0 === c.length ? J.removeClass(this.$$element, d) : 0 === d.length ? J.addClass(this.$$element, c) : J.setClass(this.$$element, c, d)
                    },
                    $set: function(a, b, c, d) {
                        var e = mc(this.$$element[0], a);
                        e && (this.$$element.prop(a, b), d = e);
                        this[a] = b;
                        d ? this.$attr[a] = d : (d = this.$attr[a]) || (this.$attr[a] = d = fb(a, "-"));
                        e = Ka(this.$$element);
                        if ("A" === e && "href" === a || "IMG" === e && "src" === a) this[a] = b = A(b, "src" === a);
                        !1 !== c && (null === b || b === s ? this.$$element.removeAttr(d) : this.$$element.attr(d, b));
                        (c = this.$$observers) && q(c[a], function(a) {
                            try {
                                a(b)
                            } catch (c) {
                                m(c)
                            }
                        })
                    },
                    $observe: function(a, b) {
                        var c = this,
                            d = c.$$observers || (c.$$observers = {}),
                            e = d[a] || (d[a] = []);
                        e.push(b);
                        u.$evalAsync(function() {
                            e.$$inter || b(c[a])
                        });
                        return b
                    }
                };
                var Z = b.startSymbol(),
                    ra = b.endSymbol(),
                    Y = "{{" == Z || "}}" == ra ? Da : function(a) {
                        return a.replace(/\{\{/g, Z).replace(/}}/g, ra)
                    }, W = /^ngAttr[A-Z]/;
                return x
            }
        ]
    }

    function na(b) {
        return Ta(b.replace(te, ""))
    }

    function rc(b, a) {
        var c = "",
            d = b.split(/\s+/),
            e = a.split(/\s+/),
            g = 0;
        a: for (; g < d.length; g++) {
            for (var f = d[g], h = 0; h < e.length; h++)
                if (f == e[h]) continue a;
            c += (0 < c.length ? " " : "") + f
        }
        return c
    }

    function Od() {
        var b = {}, a = /^(\S+)(\s+as\s+(\w+))?$/;
        this.register = function(a, d) {
            Aa(a, "controller");
            X(a) ? D(b, a) : b[a] = d
        };
        this.$get = ["$injector", "$window",
            function(c, d) {
                return function(e, g) {
                    var f, h, l;
                    w(e) && (f = e.match(a), h = f[1], l = f[3], e = b.hasOwnProperty(h) ? b[h] : bc(g.$scope, h, !0) || bc(d, h, !0), Ra(e, h, !0));
                    f = c.instantiate(e, g);
                    if (l) {
                        if (!g || "object" != typeof g.$scope) throw t("$controller")("noscp", h || e.name, l);
                        g.$scope[l] = f
                    }
                    return f
                }
            }
        ]
    }

    function Pd() {
        this.$get = ["$window",
            function(b) {
                return y(b.document)
            }
        ]
    }

    function Qd() {
        this.$get = ["$log",
            function(b) {
                return function(a, c) {
                    b.error.apply(b, arguments)
                }
            }
        ]
    }

    function sc(b) {
        var a = {}, c, d, e;
        if (!b) return a;
        q(b.split("\n"), function(b) {
            e = b.indexOf(":");
            c = K(ca(b.substr(0, e)));
            d = ca(b.substr(e + 1));
            c && (a[c] = a[c] ? a[c] + (", " + d) : d)
        });
        return a
    }

    function tc(b) {
        var a = X(b) ? b : s;
        return function(c) {
            a || (a = sc(b));
            return c ? a[K(c)] || null : a
        }
    }

    function uc(b, a, c) {
        if (P(c)) return c(b, a);
        q(c, function(c) {
            b = c(b, a)
        });
        return b
    }

    function Td() {
        var b = /^\s*(\[|\{[^\{])/,
            a = /[\}\]]\s*$/,
            c = /^\)\]\}',?\n/,
            d = {
                "Content-Type": "application/json;charset=utf-8"
            }, e = this.defaults = {
                transformResponse: [
                    function(d) {
                        w(d) && (d = d.replace(c, ""), b.test(d) && a.test(d) && (d = Wb(d)));
                        return d
                    }
                ],
                transformRequest: [
                    function(a) {
                        return X(a) && "[object File]" !== wa.call(a) && "[object Blob]" !== wa.call(a) ? qa(a) : a
                    }
                ],
                headers: {
                    common: {
                        Accept: "application/json, text/plain, */*"
                    },
                    post: ba(d),
                    put: ba(d),
                    patch: ba(d)
                },
                xsrfCookieName: "XSRF-TOKEN",
                xsrfHeaderName: "X-XSRF-TOKEN"
            }, g = this.interceptors = [],
            f = this.responseInterceptors = [];
        this.$get = ["$httpBackend", "$browser", "$cacheFactory", "$rootScope", "$q", "$injector",
            function(a, b, c, d, n, p) {
                function r(a) {
                    function c(a) {
                        var b = D({}, a, {
                            data: uc(a.data, a.headers, d.transformResponse)
                        });
                        return 200 <= a.status && 300 > a.status ? b : n.reject(b)
                    }
                    var d = {
                        method: "get",
                        transformRequest: e.transformRequest,
                        transformResponse: e.transformResponse
                    }, g = function(a) {
                        function b(a) {
                            var c;
                            q(a, function(b, d) {
                                P(b) && (c = b(), null != c ? a[d] = c : delete a[d])
                            })
                        }
                        var c = e.headers,
                            d = D({}, a.headers),
                            g, f, c = D({}, c.common, c[K(a.method)]);
                        b(c);
                        b(d);
                        a: for (g in c) {
                            a = K(g);
                            for (f in d)
                                if (K(f) === a) continue a;
                            d[g] = c[g]
                        }
                        return d
                    }(a);
                    D(d, a);
                    d.headers = g;
                    d.method = Fa(d.method);
                    (a = Ib(d.url) ? b.cookies()[d.xsrfCookieName || e.xsrfCookieName] : s) && (g[d.xsrfHeaderName || e.xsrfHeaderName] = a);
                    var f = [
                            function(a) {
                                g = a.headers;
                                var b = uc(a.data, tc(g), a.transformRequest);
                                E(a.data) && q(g, function(a, b) {
                                    "content-type" === K(b) && delete g[b]
                                });
                                E(a.withCredentials) && !E(e.withCredentials) && (a.withCredentials = e.withCredentials);
                                return z(a, b, g).then(c, c)
                            },
                            s
                        ],
                        h = n.when(d);
                    for (q(v, function(a) {
                        (a.request || a.requestError) && f.unshift(a.request, a.requestError);
                        (a.response || a.responseError) && f.push(a.response, a.responseError)
                    }); f.length;) {
                        a = f.shift();
                        var k = f.shift(),
                            h = h.then(a, k)
                    }
                    h.success = function(a) {
                        h.then(function(b) {
                            a(b.data, b.status, b.headers, d)
                        });
                        return h
                    };
                    h.error = function(a) {
                        h.then(null, function(b) {
                            a(b.data, b.status, b.headers, d)
                        });
                        return h
                    };
                    return h
                }

                function z(b, c, g) {
                    function f(a, b, c, e) {
                        v && (200 <= a && 300 > a ? v.put(s, [a, b, sc(c), e]) : v.remove(s));
                        l(b, a, c, e);
                        d.$$phase || d.$apply()
                    }

                    function l(a, c, d, e) {
                        c = Math.max(c, 0);
                        (200 <= c && 300 > c ? p.resolve : p.reject)({
                            data: a,
                            status: c,
                            headers: tc(d),
                            config: b,
                            statusText: e
                        })
                    }

                    function k() {
                        var a = db(r.pendingRequests, b); - 1 !== a && r.pendingRequests.splice(a, 1)
                    }
                    var p = n.defer(),
                        z = p.promise,
                        v, q, s = u(b.url, b.params);
                    r.pendingRequests.push(b);
                    z.then(k, k);
                    (b.cache || e.cache) && (!1 !== b.cache && "GET" == b.method) && (v = X(b.cache) ? b.cache : X(e.cache) ? e.cache : F);
                    if (v)
                        if (q = v.get(s), B(q)) {
                            if (q.then) return q.then(k, k), q;
                            M(q) ? l(q[1], q[0], ba(q[2]), q[3]) : l(q, 200, {}, "OK")
                        } else v.put(s, z);
                    E(q) && a(b.method, s, c, f, g, b.timeout, b.withCredentials, b.responseType);
                    return z
                }

                function u(a, b) {
                    if (!b) return a;
                    var c = [];
                    Sc(b, function(a, b) {
                        null === a || E(a) || (M(a) || (a = [a]), q(a, function(a) {
                            X(a) && (a = qa(a));
                            c.push(za(b) + "=" + za(a))
                        }))
                    });
                    0 < c.length && (a += (-1 == a.indexOf("?") ? "?" : "&") + c.join("&"));
                    return a
                }
                var F = c("$http"),
                    v = [];
                q(g, function(a) {
                    v.unshift(w(a) ? p.get(a) : p.invoke(a))
                });
                q(f, function(a, b) {
                    var c = w(a) ? p.get(a) : p.invoke(a);
                    v.splice(b, 0, {
                        response: function(a) {
                            return c(n.when(a))
                        },
                        responseError: function(a) {
                            return c(n.reject(a))
                        }
                    })
                });
                r.pendingRequests = [];
                (function(a) {
                    q(arguments, function(a) {
                        r[a] = function(b, c) {
                            return r(D(c || {}, {
                                method: a,
                                url: b
                            }))
                        }
                    })
                })("get", "delete", "head", "jsonp");
                (function(a) {
                    q(arguments, function(a) {
                        r[a] = function(b, c, d) {
                            return r(D(d || {}, {
                                method: a,
                                url: b,
                                data: c
                            }))
                        }
                    })
                })("post", "put");
                r.defaults = e;
                return r
            }
        ]
    }

    function ue(b) {
        if (8 >= S && (!b.match(/^(get|post|head|put|delete|options)$/i) || !O.XMLHttpRequest)) return new O.ActiveXObject("Microsoft.XMLHTTP");
        if (O.XMLHttpRequest) return new O.XMLHttpRequest;
        throw t("$httpBackend")("noxhr");
    }

    function Ud() {
        this.$get = ["$browser", "$window", "$document",
            function(b, a, c) {
                return ve(b, ue, b.defer, a.angular.callbacks, c[0])
            }
        ]
    }

    function ve(b, a, c, d, e) {
        function g(a, b) {
            var c = e.createElement("script"),
                d = function() {
                    c.onreadystatechange = c.onload = c.onerror = null;
                    e.body.removeChild(c);
                    b && b()
                };
            c.type = "text/javascript";
            c.src = a;
            S && 8 >= S ? c.onreadystatechange = function() {
                /loaded|complete/.test(c.readyState) && d()
            } : c.onload = c.onerror = function() {
                d()
            };
            e.body.appendChild(c);
            return d
        }
        var f = -1;
        return function(e, l, k, m, n, p, r, z) {
            function u() {
                v = f;
                A && A();
                x && x.abort()
            }

            function F(a, d, e, g, f) {
                L && c.cancel(L);
                A = x = null;
                0 === d && (d = e ? 200 : "file" == sa(l).protocol ? 404 : 0);
                a(1223 === d ? 204 : d, e, g, f || "");
                b.$$completeOutstandingRequest(C)
            }
            var v;
            b.$$incOutstandingRequestCount();
            l = l || b.url();
            if ("jsonp" == K(e)) {
                var J = "_" + (d.counter++).toString(36);
                d[J] = function(a) {
                    d[J].data = a
                };
                var A = g(l.replace("JSON_CALLBACK", "angular.callbacks." + J), function() {
                    d[J].data ? F(m, 200, d[J].data) : F(m, v || -2);
                    d[J] = Ea.noop
                })
            } else {
                var x = a(e);
                x.open(e, l, !0);
                q(n, function(a, b) {
                    B(a) && x.setRequestHeader(b, a)
                });
                x.onreadystatechange = function() {
                    if (x && 4 == x.readyState) {
                        var a = null,
                            b = null;
                        v !== f && (a = x.getAllResponseHeaders(), b = "response" in x ? x.response : x.responseText);
                        F(m, v || x.status, b, a, x.statusText || "")
                    }
                };
                r && (x.withCredentials = !0);
                if (z) try {
                    x.responseType = z
                } catch (s) {
                    if ("json" !== z) throw s;
                }
                x.send(k || null)
            } if (0 < p) var L = c(u, p);
            else p && p.then && p.then(u)
        }
    }

    function Rd() {
        var b = "{{",
            a = "}}";
        this.startSymbol = function(a) {
            return a ? (b = a, this) : b
        };
        this.endSymbol = function(b) {
            return b ? (a = b, this) : a
        };
        this.$get = ["$parse", "$exceptionHandler", "$sce",
            function(c, d, e) {
                function g(g, k, m) {
                    for (var n, p, r = 0, z = [], u = g.length, F = !1, v = []; r < u;) - 1 != (n = g.indexOf(b, r)) && -1 != (p = g.indexOf(a, n + f)) ? (r != n && z.push(g.substring(r, n)), z.push(r = c(F = g.substring(n + f, p))), r.exp = F, r = p + h, F = !0) : (r != u && z.push(g.substring(r)), r = u);
                    (u = z.length) || (z.push(""), u = 1);
                    if (m && 1 < z.length) throw vc("noconcat", g);
                    if (!k || F) return v.length = u, r = function(a) {
                        try {
                            for (var b = 0, c = u, f; b < c; b++) "function" == typeof(f = z[b]) && (f = f(a), f = m ? e.getTrusted(m, f) : e.valueOf(f), null === f || E(f) ? f = "" : "string" != typeof f && (f = qa(f))), v[b] = f;
                            return v.join("")
                        } catch (h) {
                            a = vc("interr", g, h.toString()), d(a)
                        }
                    }, r.exp = g, r.parts = z, r
                }
                var f = b.length,
                    h = a.length;
                g.startSymbol = function() {
                    return b
                };
                g.endSymbol = function() {
                    return a
                };
                return g
            }
        ]
    }

    function Sd() {
        this.$get = ["$rootScope", "$window", "$q",
            function(b, a, c) {
                function d(d, f, h, l) {
                    var k = a.setInterval,
                        m = a.clearInterval,
                        n = c.defer(),
                        p = n.promise,
                        r = 0,
                        z = B(l) && !l;
                    h = B(h) ? h : 0;
                    p.then(null, null, d);
                    p.$$intervalId = k(function() {
                        n.notify(r++);
                        0 < h && r >= h && (n.resolve(r), m(p.$$intervalId), delete e[p.$$intervalId]);
                        z || b.$apply()
                    }, f);
                    e[p.$$intervalId] = n;
                    return p
                }
                var e = {};
                d.cancel = function(a) {
                    return a && a.$$intervalId in e ? (e[a.$$intervalId].reject("canceled"), clearInterval(a.$$intervalId), delete e[a.$$intervalId], !0) : !1
                };
                return d
            }
        ]
    }

    function ad() {
        this.$get = function() {
            return {
                id: "en-us",
                NUMBER_FORMATS: {
                    DECIMAL_SEP: ".",
                    GROUP_SEP: ",",
                    PATTERNS: [{
                        minInt: 1,
                        minFrac: 0,
                        maxFrac: 3,
                        posPre: "",
                        posSuf: "",
                        negPre: "-",
                        negSuf: "",
                        gSize: 3,
                        lgSize: 3
                    }, {
                        minInt: 1,
                        minFrac: 2,
                        maxFrac: 2,
                        posPre: "\u00a4",
                        posSuf: "",
                        negPre: "(\u00a4",
                        negSuf: ")",
                        gSize: 3,
                        lgSize: 3
                    }],
                    CURRENCY_SYM: "$"
                },
                DATETIME_FORMATS: {
                    MONTH: "January February March April May June July August September October November December".split(" "),
                    SHORTMONTH: "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),
                    DAY: "Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),
                    SHORTDAY: "Sun Mon Tue Wed Thu Fri Sat".split(" "),
                    AMPMS: ["AM", "PM"],
                    medium: "MMM d, y h:mm:ss a",
                    "short": "M/d/yy h:mm a",
                    fullDate: "EEEE, MMMM d, y",
                    longDate: "MMMM d, y",
                    mediumDate: "MMM d, y",
                    shortDate: "M/d/yy",
                    mediumTime: "h:mm:ss a",
                    shortTime: "h:mm a"
                },
                pluralCat: function(b) {
                    return 1 === b ? "one" : "other"
                }
            }
        }
    }

    function wc(b) {
        b = b.split("/");
        for (var a = b.length; a--;) b[a] = wb(b[a]);
        return b.join("/")
    }

    function xc(b, a, c) {
        b = sa(b, c);
        a.$$protocol = b.protocol;
        a.$$host = b.hostname;
        a.$$port = Y(b.port) || we[b.protocol] || null
    }

    function yc(b, a, c) {
        var d = "/" !== b.charAt(0);
        d && (b = "/" + b);
        b = sa(b, c);
        a.$$path = decodeURIComponent(d && "/" === b.pathname.charAt(0) ? b.pathname.substring(1) : b.pathname);
        a.$$search = Yb(b.search);
        a.$$hash = decodeURIComponent(b.hash);
        a.$$path && "/" != a.$$path.charAt(0) && (a.$$path = "/" + a.$$path)
    }

    function oa(b, a) {
        if (0 === a.indexOf(b)) return a.substr(b.length)
    }

    function Ya(b) {
        var a = b.indexOf("#");
        return -1 == a ? b : b.substr(0, a)
    }

    function Jb(b) {
        return b.substr(0, Ya(b).lastIndexOf("/") + 1)
    }

    function zc(b, a) {
        this.$$html5 = !0;
        a = a || "";
        var c = Jb(b);
        xc(b, this, b);
        this.$$parse = function(a) {
            var e = oa(c, a);
            if (!w(e)) throw Kb("ipthprfx", a, c);
            yc(e, this, b);
            this.$$path || (this.$$path = "/");
            this.$$compose()
        };
        this.$$compose = function() {
            var a = Zb(this.$$search),
                b = this.$$hash ? "#" + wb(this.$$hash) : "";
            this.$$url = wc(this.$$path) + (a ? "?" + a : "") + b;
            this.$$absUrl = c + this.$$url.substr(1)
        };
        this.$$rewrite = function(d) {
            var e;
            if ((e = oa(b, d)) !== s) return d = e, (e = oa(a, e)) !== s ? c + (oa("/", e) || e) : b + d;
            if ((e = oa(c, d)) !== s) return c + e;
            if (c == d + "/") return c
        }
    }

    function Lb(b, a) {
        var c = Jb(b);
        xc(b, this, b);
        this.$$parse = function(d) {
            var e = oa(b, d) || oa(c, d),
                e = "#" == e.charAt(0) ? oa(a, e) : this.$$html5 ? e : "";
            if (!w(e)) throw Kb("ihshprfx", d, a);
            yc(e, this, b);
            d = this.$$path;
            var g = /^\/?.*?:(\/.*)/;
            0 === e.indexOf(b) && (e = e.replace(b, ""));
            g.exec(e) || (d = (e = g.exec(d)) ? e[1] : d);
            this.$$path = d;
            this.$$compose()
        };
        this.$$compose = function() {
            var c = Zb(this.$$search),
                e = this.$$hash ? "#" + wb(this.$$hash) : "";
            this.$$url = wc(this.$$path) + (c ? "?" + c : "") + e;
            this.$$absUrl = b + (this.$$url ? a + this.$$url : "")
        };
        this.$$rewrite = function(a) {
            if (Ya(b) == Ya(a)) return a
        }
    }

    function Ac(b, a) {
        this.$$html5 = !0;
        Lb.apply(this, arguments);
        var c = Jb(b);
        this.$$rewrite = function(d) {
            var e;
            if (b == Ya(d)) return d;
            if (e = oa(c, d)) return b + a + e;
            if (c === d + "/") return c
        }
    }

    function nb(b) {
        return function() {
            return this[b]
        }
    }

    function Bc(b, a) {
        return function(c) {
            if (E(c)) return this[b];
            this[b] = a(c);
            this.$$compose();
            return this
        }
    }

    function Vd() {
        var b = "",
            a = !1;
        this.hashPrefix = function(a) {
            return B(a) ? (b = a, this) : b
        };
        this.html5Mode = function(b) {
            return B(b) ? (a = b, this) : a
        };
        this.$get = ["$rootScope", "$browser", "$sniffer", "$rootElement",
            function(c, d, e, g) {
                function f(a) {
                    c.$broadcast("$locationChangeSuccess", h.absUrl(), a)
                }
                var h, l = d.baseHref(),
                    k = d.url();
                a ? (l = k.substring(0, k.indexOf("/", k.indexOf("//") + 2)) + (l || "/"), e = e.history ? zc : Ac) : (l = Ya(k), e = Lb);
                h = new e(l, "#" + b);
                h.$$parse(h.$$rewrite(k));
                g.on("click", function(a) {
                    if (!a.ctrlKey && !a.metaKey && 2 != a.which) {
                        for (var b = y(a.target);
                             "a" !== K(b[0].nodeName);)
                            if (b[0] === g[0] || !(b = b.parent())[0]) return;
                        var e = b.prop("href");
                        X(e) && "[object SVGAnimatedString]" === e.toString() && (e = sa(e.animVal).href);
                        var f = h.$$rewrite(e);
                        e && (!b.attr("target") && f && !a.isDefaultPrevented()) && (a.preventDefault(), f != d.url() && (h.$$parse(f), c.$apply(), O.angular["ff-684208-preventDefault"] = !0))
                    }
                });
                h.absUrl() != k && d.url(h.absUrl(), !0);
                d.onUrlChange(function(a) {
                    h.absUrl() != a && (c.$evalAsync(function() {
                        var b = h.absUrl();
                        h.$$parse(a);
                        c.$broadcast("$locationChangeStart", a, b).defaultPrevented ? (h.$$parse(b), d.url(b)) : f(b)
                    }), c.$$phase || c.$digest())
                });
                var m = 0;
                c.$watch(function() {
                    var a = d.url(),
                        b = h.$$replace;
                    m && a == h.absUrl() || (m++, c.$evalAsync(function() {
                        c.$broadcast("$locationChangeStart", h.absUrl(), a).defaultPrevented ? h.$$parse(a) : (d.url(h.absUrl(), b), f(a))
                    }));
                    h.$$replace = !1;
                    return m
                });
                return h
            }
        ]
    }

    function Wd() {
        var b = !0,
            a = this;
        this.debugEnabled = function(a) {
            return B(a) ? (b = a, this) : b
        };
        this.$get = ["$window",
            function(c) {
                function d(a) {
                    a instanceof Error && (a.stack ? a = a.message && -1 === a.stack.indexOf(a.message) ? "Error: " + a.message + "\n" + a.stack : a.stack : a.sourceURL && (a = a.message + "\n" + a.sourceURL + ":" + a.line));
                    return a
                }

                function e(a) {
                    var b = c.console || {}, e = b[a] || b.log || C;
                    a = !1;
                    try {
                        a = !! e.apply
                    } catch (l) {}
                    return a ? function() {
                        var a = [];
                        q(arguments, function(b) {
                            a.push(d(b))
                        });
                        return e.apply(b, a)
                    } : function(a, b) {
                        e(a, null == b ? "" : b)
                    }
                }
                return {
                    log: e("log"),
                    info: e("info"),
                    warn: e("warn"),
                    error: e("error"),
                    debug: function() {
                        var c = e("debug");
                        return function() {
                            b && c.apply(a, arguments)
                        }
                    }()
                }
            }
        ]
    }

    function fa(b, a) {
        if ("constructor" === b) throw Ba("isecfld", a);
        return b
    }

    function Za(b, a) {
        if (b) {
            if (b.constructor === b) throw Ba("isecfn", a);
            if (b.document && b.location && b.alert && b.setInterval) throw Ba("isecwindow", a);
            if (b.children && (b.nodeName || b.prop && b.attr && b.find)) throw Ba("isecdom", a);
        }
        return b
    }

    function ob(b, a, c, d, e) {
        e = e || {};
        a = a.split(".");
        for (var g, f = 0; 1 < a.length; f++) {
            g = fa(a.shift(), d);
            var h = b[g];
            h || (h = {}, b[g] = h);
            b = h;
            b.then && e.unwrapPromises && (ta(d), "$$v" in b || function(a) {
                a.then(function(b) {
                    a.$$v = b
                })
            }(b), b.$$v === s && (b.$$v = {}), b = b.$$v)
        }
        g = fa(a.shift(), d);
        return b[g] = c
    }

    function Cc(b, a, c, d, e, g, f) {
        fa(b, g);
        fa(a, g);
        fa(c, g);
        fa(d, g);
        fa(e, g);
        return f.unwrapPromises ? function(f, l) {
            var k = l && l.hasOwnProperty(b) ? l : f,
                m;
            if (null == k) return k;
            (k = k[b]) && k.then && (ta(g), "$$v" in k || (m = k, m.$$v = s, m.then(function(a) {
                m.$$v = a
            })), k = k.$$v);
            if (!a) return k;
            if (null == k) return s;
            (k = k[a]) && k.then && (ta(g), "$$v" in k || (m = k, m.$$v = s, m.then(function(a) {
                m.$$v = a
            })), k = k.$$v);
            if (!c) return k;
            if (null == k) return s;
            (k = k[c]) && k.then && (ta(g), "$$v" in k || (m = k, m.$$v = s, m.then(function(a) {
                m.$$v = a
            })), k = k.$$v);
            if (!d) return k;
            if (null == k) return s;
            (k = k[d]) && k.then && (ta(g), "$$v" in k || (m = k, m.$$v = s, m.then(function(a) {
                m.$$v = a
            })), k = k.$$v);
            if (!e) return k;
            if (null == k) return s;
            (k = k[e]) && k.then && (ta(g), "$$v" in k || (m = k, m.$$v = s, m.then(function(a) {
                m.$$v = a
            })), k = k.$$v);
            return k
        } : function(g, f) {
            var k = f && f.hasOwnProperty(b) ? f : g;
            if (null == k) return k;
            k = k[b];
            if (!a) return k;
            if (null == k) return s;
            k = k[a];
            if (!c) return k;
            if (null == k) return s;
            k = k[c];
            if (!d) return k;
            if (null == k) return s;
            k = k[d];
            return e ? null == k ? s : k = k[e] : k
        }
    }

    function xe(b, a) {
        fa(b, a);
        return function(a, d) {
            return null == a ? s : (d && d.hasOwnProperty(b) ? d : a)[b]
        }
    }

    function ye(b, a, c) {
        fa(b, c);
        fa(a, c);
        return function(c, e) {
            if (null == c) return s;
            c = (e && e.hasOwnProperty(b) ? e : c)[b];
            return null == c ? s : c[a]
        }
    }

    function Dc(b, a, c) {
        if (Mb.hasOwnProperty(b)) return Mb[b];
        var d = b.split("."),
            e = d.length,
            g;
        if (a.unwrapPromises || 1 !== e)
            if (a.unwrapPromises || 2 !== e)
                if (a.csp) g = 6 > e ? Cc(d[0], d[1], d[2], d[3], d[4], c, a) : function(b, g) {
                    var f = 0,
                        h;
                    do h = Cc(d[f++], d[f++], d[f++], d[f++], d[f++], c, a)(b, g), g = s, b = h; while (f < e);
                    return h
                };
                else {
                    var f = "var p;\n";
                    q(d, function(b, d) {
                        fa(b, c);
                        f += "if(s == null) return undefined;\ns=" + (d ? "s" : '((k&&k.hasOwnProperty("' + b + '"))?k:s)') + '["' + b + '"];\n' + (a.unwrapPromises ? 'if (s && s.then) {\n pw("' + c.replace(/(["\r\n])/g, "\\$1") + '");\n if (!("$$v" in s)) {\n p=s;\n p.$$v = undefined;\n p.then(function(v) {p.$$v=v;});\n}\n s=s.$$v\n}\n' : "")
                    });
                    var f = f + "return s;",
                        h = new Function("s", "k", "pw", f);
                    h.toString = aa(f);
                    g = a.unwrapPromises ? function(a, b) {
                        return h(a, b, ta)
                    } : h
                } else g = ye(d[0], d[1], c);
        else g = xe(d[0], c);
        "hasOwnProperty" !== b && (Mb[b] = g);
        return g
    }

    function Xd() {
        var b = {}, a = {
            csp: !1,
            unwrapPromises: !1,
            logPromiseWarnings: !0
        };
        this.unwrapPromises = function(b) {
            return B(b) ? (a.unwrapPromises = !! b, this) : a.unwrapPromises
        };
        this.logPromiseWarnings = function(b) {
            return B(b) ? (a.logPromiseWarnings = b, this) : a.logPromiseWarnings
        };
        this.$get = ["$filter", "$sniffer", "$log",
            function(c, d, e) {
                a.csp = d.csp;
                ta = function(b) {
                    a.logPromiseWarnings && !Ec.hasOwnProperty(b) && (Ec[b] = !0, e.warn("[$parse] Promise found in the expression `" + b + "`. Automatic unwrapping of promises in Angular expressions is deprecated."))
                };
                return function(d) {
                    var e;
                    switch (typeof d) {
                        case "string":
                            if (b.hasOwnProperty(d)) return b[d];
                            e = new Nb(a);
                            e = (new $a(e, c, a)).parse(d, !1);
                            "hasOwnProperty" !== d && (b[d] = e);
                            return e;
                        case "function":
                            return d;
                        default:
                            return C
                    }
                }
            }
        ]
    }

    function Zd() {
        this.$get = ["$rootScope", "$exceptionHandler",
            function(b, a) {
                return ze(function(a) {
                    b.$evalAsync(a)
                }, a)
            }
        ]
    }

    function ze(b, a) {
        function c(a) {
            return a
        }

        function d(a) {
            return f(a)
        }
        var e = function() {
            var f = [],
                k, m;
            return m = {
                resolve: function(a) {
                    if (f) {
                        var c = f;
                        f = s;
                        k = g(a);
                        c.length && b(function() {
                            for (var a, b = 0, d = c.length; b < d; b++) a = c[b], k.then(a[0], a[1], a[2])
                        })
                    }
                },
                reject: function(a) {
                    m.resolve(h(a))
                },
                notify: function(a) {
                    if (f) {
                        var c = f;
                        f.length && b(function() {
                            for (var b, d = 0, e = c.length; d < e; d++) b = c[d], b[2](a)
                        })
                    }
                },
                promise: {
                    then: function(b, g, h) {
                        var m = e(),
                            u = function(d) {
                                try {
                                    m.resolve((P(b) ? b : c)(d))
                                } catch (e) {
                                    m.reject(e), a(e)
                                }
                            }, F = function(b) {
                                try {
                                    m.resolve((P(g) ? g : d)(b))
                                } catch (c) {
                                    m.reject(c), a(c)
                                }
                            }, v = function(b) {
                                try {
                                    m.notify((P(h) ? h : c)(b))
                                } catch (d) {
                                    a(d)
                                }
                            };
                        f ? f.push([u, F, v]) : k.then(u, F, v);
                        return m.promise
                    },
                    "catch": function(a) {
                        return this.then(null, a)
                    },
                    "finally": function(a) {
                        function b(a, c) {
                            var d = e();
                            c ? d.resolve(a) : d.reject(a);
                            return d.promise
                        }

                        function d(e, g) {
                            var f = null;
                            try {
                                f = (a || c)()
                            } catch (h) {
                                return b(h, !1)
                            }
                            return f && P(f.then) ? f.then(function() {
                                return b(e, g)
                            }, function(a) {
                                return b(a, !1)
                            }) : b(e, g)
                        }
                        return this.then(function(a) {
                            return d(a, !0)
                        }, function(a) {
                            return d(a, !1)
                        })
                    }
                }
            }
        }, g = function(a) {
            return a && P(a.then) ? a : {
                then: function(c) {
                    var d = e();
                    b(function() {
                        d.resolve(c(a))
                    });
                    return d.promise
                }
            }
        }, f = function(a) {
            var b = e();
            b.reject(a);
            return b.promise
        }, h = function(c) {
            return {
                then: function(g, f) {
                    var h = e();
                    b(function() {
                        try {
                            h.resolve((P(f) ? f : d)(c))
                        } catch (b) {
                            h.reject(b), a(b)
                        }
                    });
                    return h.promise
                }
            }
        };
        return {
            defer: e,
            reject: f,
            when: function(h, k, m, n) {
                var p = e(),
                    r, z = function(b) {
                        try {
                            return (P(k) ? k : c)(b)
                        } catch (d) {
                            return a(d), f(d)
                        }
                    }, u = function(b) {
                        try {
                            return (P(m) ? m : d)(b)
                        } catch (c) {
                            return a(c), f(c)
                        }
                    }, F = function(b) {
                        try {
                            return (P(n) ? n : c)(b)
                        } catch (d) {
                            a(d)
                        }
                    };
                b(function() {
                    g(h).then(function(a) {
                        r || (r = !0, p.resolve(g(a).then(z, u, F)))
                    }, function(a) {
                        r || (r = !0, p.resolve(u(a)))
                    }, function(a) {
                        r || p.notify(F(a))
                    })
                });
                return p.promise
            },
            all: function(a) {
                var b = e(),
                    c = 0,
                    d = M(a) ? [] : {};
                q(a, function(a, e) {
                    c++;
                    g(a).then(function(a) {
                        d.hasOwnProperty(e) || (d[e] = a, --c || b.resolve(d))
                    }, function(a) {
                        d.hasOwnProperty(e) || b.reject(a)
                    })
                });
                0 === c && b.resolve(d);
                return b.promise
            }
        }
    }

    function fe() {
        this.$get = ["$window", "$timeout",
            function(b, a) {
                var c = b.requestAnimationFrame || b.webkitRequestAnimationFrame || b.mozRequestAnimationFrame,
                    d = b.cancelAnimationFrame || b.webkitCancelAnimationFrame || b.mozCancelAnimationFrame || b.webkitCancelRequestAnimationFrame,
                    e = !! c,
                    g = e ? function(a) {
                        var b = c(a);
                        return function() {
                            d(b)
                        }
                    } : function(b) {
                        var c = a(b, 16.66, !1);
                        return function() {
                            a.cancel(c)
                        }
                    };
                g.supported = e;
                return g
            }
        ]
    }

    function Yd() {
        var b = 10,
            a = t("$rootScope"),
            c = null;
        this.digestTtl = function(a) {
            arguments.length && (b = a);
            return b
        };
        this.$get = ["$injector", "$exceptionHandler", "$parse", "$browser",
            function(d, e, g, f) {
                function h() {
                    this.$id = bb();
                    this.$$phase = this.$parent = this.$$watchers = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = null;
                    this["this"] = this.$root = this;
                    this.$$destroyed = !1;
                    this.$$asyncQueue = [];
                    this.$$postDigestQueue = [];
                    this.$$listeners = {};
                    this.$$listenerCount = {};
                    this.$$isolateBindings = {}
                }

                function l(b) {
                    if (p.$$phase) throw a("inprog", p.$$phase);
                    p.$$phase = b
                }

                function k(a, b) {
                    var c = g(a);
                    Ra(c, b);
                    return c
                }

                function m(a, b, c) {
                    do a.$$listenerCount[c] -= b, 0 === a.$$listenerCount[c] && delete a.$$listenerCount[c]; while (a = a.$parent)
                }

                function n() {}
                h.prototype = {
                    constructor: h,
                    $new: function(a) {
                        a ? (a = new h, a.$root = this.$root, a.$$asyncQueue = this.$$asyncQueue, a.$$postDigestQueue = this.$$postDigestQueue) : (a = function() {}, a.prototype = this, a = new a, a.$id = bb());
                        a["this"] = a;
                        a.$$listeners = {};
                        a.$$listenerCount = {};
                        a.$parent = this;
                        a.$$watchers = a.$$nextSibling = a.$$childHead = a.$$childTail = null;
                        a.$$prevSibling = this.$$childTail;
                        this.$$childHead ? this.$$childTail = this.$$childTail.$$nextSibling = a : this.$$childHead = this.$$childTail = a;
                        return a
                    },
                    $watch: function(a, b, d) {
                        var e = k(a, "watch"),
                            g = this.$$watchers,
                            f = {
                                fn: b,
                                last: n,
                                get: e,
                                exp: a,
                                eq: !! d
                            };
                        c = null;
                        if (!P(b)) {
                            var h = k(b || C, "listener");
                            f.fn = function(a, b, c) {
                                h(c)
                            }
                        }
                        if ("string" == typeof a && e.constant) {
                            var l = f.fn;
                            f.fn = function(a, b, c) {
                                l.call(this, a, b, c);
                                Oa(g, f)
                            }
                        }
                        g || (g = this.$$watchers = []);
                        g.unshift(f);
                        return function() {
                            Oa(g, f);
                            c = null
                        }
                    },
                    $watchCollection: function(a, b) {
                        var c = this,
                            d, e, f, h = 1 < b.length,
                            l = 0,
                            k = g(a),
                            m = [],
                            n = {}, p = !0,
                            q = 0;
                        return this.$watch(function() {
                            d = k(c);
                            var a, b;
                            if (X(d))
                                if (ab(d))
                                    for (e !== m && (e = m, q = e.length = 0, l++), a = d.length, q !== a && (l++, e.length = q = a), b = 0; b < a; b++) e[b] !== e[b] && d[b] !== d[b] || e[b] === d[b] || (l++, e[b] = d[b]);
                                else {
                                    e !== n && (e = n = {}, q = 0, l++);
                                    a = 0;
                                    for (b in d) d.hasOwnProperty(b) && (a++, e.hasOwnProperty(b) ? e[b] !== d[b] && (l++, e[b] = d[b]) : (q++, e[b] = d[b], l++));
                                    if (q > a)
                                        for (b in l++, e) e.hasOwnProperty(b) && !d.hasOwnProperty(b) && (q--, delete e[b])
                                } else e !== d && (e = d, l++);
                            return l
                        }, function() {
                            p ? (p = !1, b(d, d, c)) : b(d, f, c);
                            if (h)
                                if (X(d))
                                    if (ab(d)) {
                                        f = Array(d.length);
                                        for (var a = 0; a < d.length; a++) f[a] = d[a]
                                    } else
                                        for (a in f = {}, d) Fc.call(d, a) && (f[a] = d[a]);
                                else f = d
                        })
                    },
                    $digest: function() {
                        var d, g, f, h, k = this.$$asyncQueue,
                            m = this.$$postDigestQueue,
                            q, x, s = b,
                            L, Q = [],
                            y, H, R;
                        l("$digest");
                        c = null;
                        do {
                            x = !1;
                            for (L = this; k.length;) {
                                try {
                                    R = k.shift(), R.scope.$eval(R.expression)
                                } catch (B) {
                                    p.$$phase = null, e(B)
                                }
                                c = null
                            }
                            a: do {
                                if (h = L.$$watchers)
                                    for (q = h.length; q--;) try {
                                        if (d = h[q])
                                            if ((g = d.get(L)) !== (f = d.last) && !(d.eq ? xa(g, f) : "number" == typeof g && "number" == typeof f && isNaN(g) && isNaN(f))) x = !0, c = d, d.last = d.eq ? ba(g) : g, d.fn(g, f === n ? g : f, L), 5 > s && (y = 4 - s, Q[y] || (Q[y] = []), H = P(d.exp) ? "fn: " + (d.exp.name || d.exp.toString()) : d.exp, H += "; newVal: " + qa(g) + "; oldVal: " + qa(f), Q[y].push(H));
                                            else if (d === c) {
                                                x = !1;
                                                break a
                                            }
                                    } catch (w) {
                                        p.$$phase = null, e(w)
                                    }
                                if (!(h = L.$$childHead || L !== this && L.$$nextSibling))
                                    for (; L !== this && !(h = L.$$nextSibling);) L = L.$parent
                            } while (L = h);
                            if ((x || k.length) && !s--) throw p.$$phase = null, a("infdig", b, qa(Q));
                        } while (x || k.length);
                        for (p.$$phase = null; m.length;) try {
                            m.shift()()
                        } catch (T) {
                            e(T)
                        }
                    },
                    $destroy: function() {
                        if (!this.$$destroyed) {
                            var a = this.$parent;
                            this.$broadcast("$destroy");
                            this.$$destroyed = !0;
                            this !== p && (q(this.$$listenerCount, eb(null, m, this)), a.$$childHead == this && (a.$$childHead = this.$$nextSibling), a.$$childTail == this && (a.$$childTail = this.$$prevSibling), this.$$prevSibling && (this.$$prevSibling.$$nextSibling = this.$$nextSibling), this.$$nextSibling && (this.$$nextSibling.$$prevSibling = this.$$prevSibling), this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = this.$root = null, this.$$listeners = {}, this.$$watchers = this.$$asyncQueue = this.$$postDigestQueue = [], this.$destroy = this.$digest = this.$apply = C, this.$on = this.$watch = function() {
                                return C
                            })
                        }
                    },
                    $eval: function(a, b) {
                        return g(a)(this, b)
                    },
                    $evalAsync: function(a) {
                        p.$$phase || p.$$asyncQueue.length || f.defer(function() {
                            p.$$asyncQueue.length && p.$digest()
                        });
                        this.$$asyncQueue.push({
                            scope: this,
                            expression: a
                        })
                    },
                    $$postDigest: function(a) {
                        this.$$postDigestQueue.push(a)
                    },
                    $apply: function(a) {
                        try {
                            return l("$apply"), this.$eval(a)
                        } catch (b) {
                            e(b)
                        } finally {
                            p.$$phase = null;
                            try {
                                p.$digest()
                            } catch (c) {
                                throw e(c), c;
                            }
                        }
                    },
                    $on: function(a, b) {
                        var c = this.$$listeners[a];
                        c || (this.$$listeners[a] = c = []);
                        c.push(b);
                        var d = this;
                        do d.$$listenerCount[a] || (d.$$listenerCount[a] = 0), d.$$listenerCount[a]++; while (d = d.$parent);
                        var e = this;
                        return function() {
                            c[db(c, b)] = null;
                            m(e, 1, a)
                        }
                    },
                    $emit: function(a, b) {
                        var c = [],
                            d, g = this,
                            f = !1,
                            h = {
                                name: a,
                                targetScope: g,
                                stopPropagation: function() {
                                    f = !0
                                },
                                preventDefault: function() {
                                    h.defaultPrevented = !0
                                },
                                defaultPrevented: !1
                            }, l = [h].concat(ya.call(arguments, 1)),
                            k, m;
                        do {
                            d = g.$$listeners[a] || c;
                            h.currentScope = g;
                            k = 0;
                            for (m = d.length; k < m; k++)
                                if (d[k]) try {
                                    d[k].apply(null, l)
                                } catch (n) {
                                    e(n)
                                } else d.splice(k, 1), k--, m--;
                            if (f) break;
                            g = g.$parent
                        } while (g);
                        return h
                    },
                    $broadcast: function(a, b) {
                        for (var c = this, d = this, g = {
                            name: a,
                            targetScope: this,
                            preventDefault: function() {
                                g.defaultPrevented = !0
                            },
                            defaultPrevented: !1
                        }, f = [g].concat(ya.call(arguments, 1)), h, k; c = d;) {
                            g.currentScope = c;
                            d = c.$$listeners[a] || [];
                            h = 0;
                            for (k = d.length; h < k; h++)
                                if (d[h]) try {
                                    d[h].apply(null, f)
                                } catch (l) {
                                    e(l)
                                } else d.splice(h, 1), h--, k--;
                            if (!(d = c.$$listenerCount[a] && c.$$childHead || c !== this && c.$$nextSibling))
                                for (; c !== this && !(d = c.$$nextSibling);) c = c.$parent
                        }
                        return g
                    }
                };
                var p = new h;
                return p
            }
        ]
    }

    function bd() {
        var b = /^\s*(https?|ftp|mailto|tel|file):/,
            a = /^\s*(https?|ftp|file):|data:image\//;
        this.aHrefSanitizationWhitelist = function(a) {
            return B(a) ? (b = a, this) : b
        };
        this.imgSrcSanitizationWhitelist = function(b) {
            return B(b) ? (a = b, this) : a
        };
        this.$get = function() {
            return function(c, d) {
                var e = d ? a : b,
                    g;
                if (!S || 8 <= S)
                    if (g = sa(c).href, "" !== g && !g.match(e)) return "unsafe:" + g;
                return c
            }
        }
    }

    function Ae(b) {
        if ("self" === b) return b;
        if (w(b)) {
            if (-1 < b.indexOf("***")) throw ua("iwcard", b);
            b = b.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08").replace("\\*\\*", ".*").replace("\\*", "[^:/.?&;]*");
            return RegExp("^" +
                b + "$")
        }
        if (cb(b)) return RegExp("^" + b.source + "$");
        throw ua("imatcher");
    }

    function Gc(b) {
        var a = [];
        B(b) && q(b, function(b) {
            a.push(Ae(b))
        });
        return a
    }

    function ae() {
        this.SCE_CONTEXTS = ga;
        var b = ["self"],
            a = [];
        this.resourceUrlWhitelist = function(a) {
            arguments.length && (b = Gc(a));
            return b
        };
        this.resourceUrlBlacklist = function(b) {
            arguments.length && (a = Gc(b));
            return a
        };
        this.$get = ["$injector",
            function(c) {
                function d(a) {
                    var b = function(a) {
                        this.$$unwrapTrustedValue = function() {
                            return a
                        }
                    };
                    a && (b.prototype = new a);
                    b.prototype.valueOf = function() {
                        return this.$$unwrapTrustedValue()
                    };
                    b.prototype.toString = function() {
                        return this.$$unwrapTrustedValue().toString()
                    };
                    return b
                }
                var e = function(a) {
                    throw ua("unsafe");
                };
                c.has("$sanitize") && (e = c.get("$sanitize"));
                var g = d(),
                    f = {};
                f[ga.HTML] = d(g);
                f[ga.CSS] = d(g);
                f[ga.URL] = d(g);
                f[ga.JS] = d(g);
                f[ga.RESOURCE_URL] = d(f[ga.URL]);
                return {
                    trustAs: function(a, b) {
                        var c = f.hasOwnProperty(a) ? f[a] : null;
                        if (!c) throw ua("icontext", a, b);
                        if (null === b || b === s || "" === b) return b;
                        if ("string" !== typeof b) throw ua("itype", a);
                        return new c(b)
                    },
                    getTrusted: function(c, d) {
                        if (null === d || d === s || "" === d) return d;
                        var g = f.hasOwnProperty(c) ? f[c] : null;
                        if (g && d instanceof g) return d.$$unwrapTrustedValue();
                        if (c === ga.RESOURCE_URL) {
                            var g = sa(d.toString()),
                                m, n, p = !1;
                            m = 0;
                            for (n = b.length; m < n; m++)
                                if ("self" === b[m] ? Ib(g) : b[m].exec(g.href)) {
                                    p = !0;
                                    break
                                }
                            if (p)
                                for (m = 0, n = a.length; m < n; m++)
                                    if ("self" === a[m] ? Ib(g) : a[m].exec(g.href)) {
                                        p = !1;
                                        break
                                    }
                            if (p) return d;
                            throw ua("insecurl", d.toString());
                        }
                        if (c === ga.HTML) return e(d);
                        throw ua("unsafe");
                    },
                    valueOf: function(a) {
                        return a instanceof
                            g ? a.$$unwrapTrustedValue() : a
                    }
                }
            }
        ]
    }

    function $d() {
        var b = !0;
        this.enabled = function(a) {
            arguments.length && (b = !! a);
            return b
        };
        this.$get = ["$parse", "$sniffer", "$sceDelegate",
            function(a, c, d) {
                if (b && c.msie && 8 > c.msieDocumentMode) throw ua("iequirks");
                var e = ba(ga);
                e.isEnabled = function() {
                    return b
                };
                e.trustAs = d.trustAs;
                e.getTrusted = d.getTrusted;
                e.valueOf = d.valueOf;
                b || (e.trustAs = e.getTrusted = function(a, b) {
                    return b
                }, e.valueOf = Da);
                e.parseAs = function(b, c) {
                    var d = a(c);
                    return d.literal && d.constant ? d : function(a, c) {
                        return e.getTrusted(b, d(a, c))
                    }
                };
                var g = e.parseAs,
                    f = e.getTrusted,
                    h = e.trustAs;
                q(ga, function(a, b) {
                    var c = K(b);
                    e[Ta("parse_as_" + c)] = function(b) {
                        return g(a, b)
                    };
                    e[Ta("get_trusted_" + c)] = function(b) {
                        return f(a, b)
                    };
                    e[Ta("trust_as_" + c)] = function(b) {
                        return h(a, b)
                    }
                });
                return e
            }
        ]
    }

    function be() {
        this.$get = ["$window", "$document",
            function(b, a) {
                var c = {}, d = Y((/android (\d+)/.exec(K((b.navigator || {}).userAgent)) || [])[1]),
                    e = /Boxee/i.test((b.navigator || {}).userAgent),
                    g = a[0] || {}, f = g.documentMode,
                    h, l = /^(Moz|webkit|O|ms)(?=[A-Z])/,
                    k = g.body && g.body.style,
                    m = !1,
                    n = !1;
                if (k) {
                    for (var p in k)
                        if (m = l.exec(p)) {
                            h = m[0];
                            h = h.substr(0, 1).toUpperCase() + h.substr(1);
                            break
                        }
                    h || (h = "WebkitOpacity" in k && "webkit");
                    m = !! ("transition" in k || h + "Transition" in k);
                    n = !! ("animation" in k || h + "Animation" in k);
                    !d || m && n || (m = w(g.body.style.webkitTransition), n = w(g.body.style.webkitAnimation))
                }
                return {
                    history: !(!b.history || !b.history.pushState || 4 > d || e),
                    hashchange: "onhashchange" in b && (!f || 7 < f),
                    hasEvent: function(a) {
                        if ("input" == a && 9 == S) return !1;
                        if (E(c[a])) {
                            var b = g.createElement("div");
                            c[a] = "on" +
                                a in b
                        }
                        return c[a]
                    },
                    csp: Vb(),
                    vendorPrefix: h,
                    transitions: m,
                    animations: n,
                    android: d,
                    msie: S,
                    msieDocumentMode: f
                }
            }
        ]
    }

    function de() {
        this.$get = ["$rootScope", "$browser", "$q", "$exceptionHandler",
            function(b, a, c, d) {
                function e(e, h, l) {
                    var k = c.defer(),
                        m = k.promise,
                        n = B(l) && !l;
                    h = a.defer(function() {
                        try {
                            k.resolve(e())
                        } catch (a) {
                            k.reject(a), d(a)
                        } finally {
                            delete g[m.$$timeoutId]
                        }
                        n || b.$apply()
                    }, h);
                    m.$$timeoutId = h;
                    g[h] = k;
                    return m
                }
                var g = {};
                e.cancel = function(b) {
                    return b && b.$$timeoutId in g ? (g[b.$$timeoutId].reject("canceled"), delete g[b.$$timeoutId], a.defer.cancel(b.$$timeoutId)) : !1
                };
                return e
            }
        ]
    }

    function sa(b, a) {
        var c = b;
        S && (W.setAttribute("href", c), c = W.href);
        W.setAttribute("href", c);
        return {
            href: W.href,
            protocol: W.protocol ? W.protocol.replace(/:$/, "") : "",
            host: W.host,
            search: W.search ? W.search.replace(/^\?/, "") : "",
            hash: W.hash ? W.hash.replace(/^#/, "") : "",
            hostname: W.hostname,
            port: W.port,
            pathname: "/" === W.pathname.charAt(0) ? W.pathname : "/" + W.pathname
        }
    }

    function Ib(b) {
        b = w(b) ? sa(b) : b;
        return b.protocol === Hc.protocol && b.host === Hc.host
    }

    function ee() {
        this.$get = aa(O)
    }

    function gc(b) {
        function a(d, e) {
            if (X(d)) {
                var g = {};
                q(d, function(b, c) {
                    g[c] = a(c, b)
                });
                return g
            }
            return b.factory(d + c, e)
        }
        var c = "Filter";
        this.register = a;
        this.$get = ["$injector",
            function(a) {
                return function(b) {
                    return a.get(b + c)
                }
            }
        ];
        a("currency", Ic);
        a("date", Jc);
        a("filter", Be);
        a("json", Ce);
        a("limitTo", De);
        a("lowercase", Ee);
        a("number", Kc);
        a("orderBy", Lc);
        a("uppercase", Fe)
    }

    function Be() {
        return function(b, a, c) {
            if (!M(b)) return b;
            var d = typeof c,
                e = [];
            e.check = function(a) {
                for (var b = 0; b < e.length; b++)
                    if (!e[b](a)) return !1;
                return !0
            };
            "function" !== d && (c = "boolean" === d && c ? function(a, b) {
                return Ea.equals(a, b)
            } : function(a, b) {
                if (a && b && "object" === typeof a && "object" === typeof b) {
                    for (var d in a)
                        if ("$" !== d.charAt(0) && Fc.call(a, d) && c(a[d], b[d])) return !0;
                    return !1
                }
                b = ("" + b).toLowerCase();
                return -1 < ("" + a).toLowerCase().indexOf(b)
            });
            var g = function(a, b) {
                if ("string" == typeof b && "!" === b.charAt(0)) return !g(a, b.substr(1));
                switch (typeof a) {
                    case "boolean":
                    case "number":
                    case "string":
                        return c(a, b);
                    case "object":
                        switch (typeof b) {
                            case "object":
                                return c(a, b);
                            default:
                                for (var d in a)
                                    if ("$" !== d.charAt(0) && g(a[d], b)) return !0
                        }
                        return !1;
                    case "array":
                        for (d = 0; d < a.length; d++)
                            if (g(a[d], b)) return !0;
                        return !1;
                    default:
                        return !1
                }
            };
            switch (typeof a) {
                case "boolean":
                case "number":
                case "string":
                    a = {
                        $: a
                    };
                case "object":
                    for (var f in a)(function(b) {
                        "undefined" != typeof a[b] && e.push(function(c) {
                            return g("$" == b ? c : c && c[b], a[b])
                        })
                    })(f);
                    break;
                case "function":
                    e.push(a);
                    break;
                default:
                    return b
            }
            d = [];
            for (f = 0; f < b.length; f++) {
                var h = b[f];
                e.check(h) && d.push(h)
            }
            return d
        }
    }

    function Ic(b) {
        var a = b.NUMBER_FORMATS;
        return function(b, d) {
            E(d) && (d = a.CURRENCY_SYM);
            return Mc(b, a.PATTERNS[1], a.GROUP_SEP, a.DECIMAL_SEP, 2).replace(/\u00A4/g, d)
        }
    }

    function Kc(b) {
        var a = b.NUMBER_FORMATS;
        return function(b, d) {
            return Mc(b, a.PATTERNS[0], a.GROUP_SEP, a.DECIMAL_SEP, d)
        }
    }

    function Mc(b, a, c, d, e) {
        if (null == b || !isFinite(b) || X(b)) return "";
        var g = 0 > b;
        b = Math.abs(b);
        var f = b + "",
            h = "",
            l = [],
            k = !1;
        if (-1 !== f.indexOf("e")) {
            var m = f.match(/([\d\.]+)e(-?)(\d+)/);
            m && "-" == m[2] && m[3] > e + 1 ? f = "0" : (h = f, k = !0)
        }
        if (k) 0 < e && (-1 < b && 1 > b) && (h = b.toFixed(e));
        else {
            f = (f.split(Nc)[1] || "").length;
            E(e) && (e = Math.min(Math.max(a.minFrac, f), a.maxFrac));
            f = Math.pow(10, e);
            b = Math.round(b * f) / f;
            b = ("" + b).split(Nc);
            f = b[0];
            b = b[1] || "";
            var m = 0,
                n = a.lgSize,
                p = a.gSize;
            if (f.length >= n + p)
                for (m = f.length - n, k = 0; k < m; k++) 0 === (m - k) % p && 0 !== k && (h += c), h += f.charAt(k);
            for (k = m; k < f.length; k++) 0 === (f.length - k) % n && 0 !== k && (h += c), h += f.charAt(k);
            for (; b.length < e;) b += "0";
            e && "0" !== e && (h += d + b.substr(0, e))
        }
        l.push(g ? a.negPre : a.posPre);
        l.push(h);
        l.push(g ? a.negSuf : a.posSuf);
        return l.join("")
    }

    function Ob(b, a, c) {
        var d = "";
        0 > b && (d = "-", b = -b);
        for (b = "" + b; b.length < a;) b = "0" + b;
        c && (b = b.substr(b.length - a));
        return d + b
    }

    function $(b, a, c, d) {
        c = c || 0;
        return function(e) {
            e = e["get" + b]();
            if (0 < c || e > -c) e += c;
            0 === e && -12 == c && (e = 12);
            return Ob(e, a, d)
        }
    }

    function pb(b, a) {
        return function(c, d) {
            var e = c["get" + b](),
                g = Fa(a ? "SHORT" + b : b);
            return d[g][e]
        }
    }

    function Jc(b) {
        function a(a) {
            var b;
            if (b = a.match(c)) {
                a = new Date(0);
                var g = 0,
                    f = 0,
                    h = b[8] ? a.setUTCFullYear : a.setFullYear,
                    l = b[8] ? a.setUTCHours : a.setHours;
                b[9] && (g = Y(b[9] + b[10]), f = Y(b[9] + b[11]));
                h.call(a, Y(b[1]), Y(b[2]) - 1, Y(b[3]));
                g = Y(b[4] || 0) - g;
                f = Y(b[5] || 0) - f;
                h = Y(b[6] || 0);
                b = Math.round(1E3 * parseFloat("0." + (b[7] || 0)));
                l.call(a, g, f, h, b)
            }
            return a
        }
        var c = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
        return function(c, e) {
            var g = "",
                f = [],
                h, l;
            e = e || "mediumDate";
            e = b.DATETIME_FORMATS[e] || e;
            w(c) && (c = Ge.test(c) ? Y(c) : a(c));
            vb(c) && (c = new Date(c));
            if (!Na(c)) return c;
            for (; e;)(l = He.exec(e)) ? (f = f.concat(ya.call(l, 1)), e = f.pop()) : (f.push(e), e = null);
            q(f, function(a) {
                h = Ie[a];
                g += h ? h(c, b.DATETIME_FORMATS) : a.replace(/(^'|'$)/g, "").replace(/''/g, "'")
            });
            return g
        }
    }

    function Ce() {
        return function(b) {
            return qa(b, !0)
        }
    }

    function De() {
        return function(b, a) {
            if (!M(b) && !w(b)) return b;
            a = Y(a);
            if (w(b)) return a ? 0 <= a ? b.slice(0, a) : b.slice(a, b.length) : "";
            var c = [],
                d, e;
            a > b.length ? a = b.length : a < -b.length && (a = -b.length);
            0 < a ? (d = 0, e = a) : (d = b.length + a, e = b.length);
            for (; d < e; d++) c.push(b[d]);
            return c
        }
    }

    function Lc(b) {
        return function(a, c, d) {
            function e(a, b) {
                return Qa(b) ? function(b, c) {
                    return a(c, b)
                } : a
            }

            function g(a, b) {
                var c = typeof a,
                    d = typeof b;
                return c == d ? ("string" == c && (a = a.toLowerCase(), b = b.toLowerCase()), a === b ? 0 : a < b ? -1 : 1) : c < d ? -1 : 1
            }
            if (!M(a) || !c) return a;
            c = M(c) ? c : [c];
            c = Uc(c, function(a) {
                var c = !1,
                    d = a || Da;
                if (w(a)) {
                    if ("+" == a.charAt(0) || "-" == a.charAt(0)) c = "-" == a.charAt(0), a = a.substring(1);
                    d = b(a);
                    if (d.constant) {
                        var f = d();
                        return e(function(a, b) {
                            return g(a[f], b[f])
                        }, c)
                    }
                }
                return e(function(a, b) {
                    return g(d(a), d(b))
                }, c)
            });
            for (var f = [], h = 0; h < a.length; h++) f.push(a[h]);
            return f.sort(e(function(a, b) {
                for (var d = 0; d < c.length; d++) {
                    var e = c[d](a, b);
                    if (0 !== e) return e
                }
                return 0
            }, d))
        }
    }

    function va(b) {
        P(b) && (b = {
            link: b
        });
        b.restrict = b.restrict || "AC";
        return aa(b)
    }

    function Oc(b, a, c, d) {
        function e(a, c) {
            c = c ? "-" + fb(c, "-") : "";
            d.removeClass(b, (a ? qb : rb) + c);
            d.addClass(b, (a ? rb : qb) + c)
        }
        var g = this,
            f = b.parent().controller("form") || sb,
            h = 0,
            l = g.$error = {}, k = [];
        g.$name = a.name || a.ngForm;
        g.$dirty = !1;
        g.$pristine = !0;
        g.$valid = !0;
        g.$invalid = !1;
        f.$addControl(g);
        b.addClass(La);
        e(!0);
        g.$addControl = function(a) {
            Aa(a.$name, "input");
            k.push(a);
            a.$name && (g[a.$name] = a)
        };
        g.$removeControl = function(a) {
            a.$name && g[a.$name] === a && delete g[a.$name];
            q(l, function(b, c) {
                g.$setValidity(c, !0, a)
            });
            Oa(k, a)
        };
        g.$setValidity = function(a, b, c) {
            var d = l[a];
            if (b) d && (Oa(d, c), d.length || (h--, h || (e(b), g.$valid = !0, g.$invalid = !1), l[a] = !1, e(!0, a), f.$setValidity(a, !0, g)));
            else {
                h || e(b);
                if (d) {
                    if (-1 != db(d, c)) return
                } else l[a] = d = [], h++, e(!1, a), f.$setValidity(a, !1, g);
                d.push(c);
                g.$valid = !1;
                g.$invalid = !0
            }
        };
        g.$setDirty = function() {
            d.removeClass(b, La);
            d.addClass(b, tb);
            g.$dirty = !0;
            g.$pristine = !1;
            f.$setDirty()
        };
        g.$setPristine = function() {
            d.removeClass(b, tb);
            d.addClass(b, La);
            g.$dirty = !1;
            g.$pristine = !0;
            q(k, function(a) {
                a.$setPristine()
            })
        }
    }

    function pa(b, a, c, d) {
        b.$setValidity(a, c);
        return c ? d : s
    }

    function Je(b, a, c) {
        var d = c.prop("validity");
        X(d) && b.$parsers.push(function(c) {
            if (b.$error[a] || !(d.badInput || d.customError || d.typeMismatch) || d.valueMissing) return c;
            b.$setValidity(a, !1)
        })
    }

    function ub(b, a, c, d, e, g) {
        var f = a.prop("validity");
        if (!e.android) {
            var h = !1;
            a.on("compositionstart", function(a) {
                h = !0
            });
            a.on("compositionend", function() {
                h = !1;
                l()
            })
        }
        var l = function() {
            if (!h) {
                var e = a.val();
                Qa(c.ngTrim || "T") && (e = ca(e));
                if (d.$viewValue !== e || f && "" === e && !f.valueMissing) b.$$phase ? d.$setViewValue(e) : b.$apply(function() {
                    d.$setViewValue(e)
                })
            }
        };
        if (e.hasEvent("input")) a.on("input", l);
        else {
            var k, m = function() {
                k || (k = g.defer(function() {
                    l();
                    k = null
                }))
            };
            a.on("keydown", function(a) {
                a = a.keyCode;
                91 === a || (15 < a && 19 > a || 37 <= a && 40 >= a) || m()
            });
            if (e.hasEvent("paste")) a.on("paste cut", m)
        }
        a.on("change", l);
        d.$render = function() {
            a.val(d.$isEmpty(d.$viewValue) ? "" : d.$viewValue)
        };
        var n = c.ngPattern;
        n && ((e = n.match(/^\/(.*)\/([gim]*)$/)) ? (n = RegExp(e[1], e[2]), e = function(a) {
            return pa(d, "pattern", d.$isEmpty(a) || n.test(a), a)
        }) : e = function(c) {
            var e = b.$eval(n);
            if (!e || !e.test) throw t("ngPattern")("noregexp", n, e, ha(a));
            return pa(d, "pattern", d.$isEmpty(c) || e.test(c), c)
        }, d.$formatters.push(e), d.$parsers.push(e));
        if (c.ngMinlength) {
            var p = Y(c.ngMinlength);
            e = function(a) {
                return pa(d, "minlength", d.$isEmpty(a) || a.length >= p, a)
            };
            d.$parsers.push(e);
            d.$formatters.push(e)
        }
        if (c.ngMaxlength) {
            var r = Y(c.ngMaxlength);
            e = function(a) {
                return pa(d, "maxlength", d.$isEmpty(a) || a.length <= r, a)
            };
            d.$parsers.push(e);
            d.$formatters.push(e)
        }
    }

    function Pb(b, a) {
        b = "ngClass" + b;
        return ["$animate", function(c) {
            function d(a, b) {
                var c = [],
                    d = 0;
                a: for (; d < a.length; d++) {
                    for (var e = a[d], m = 0; m < b.length; m++)
                        if (e == b[m]) continue a;
                    c.push(e)
                }
                return c
            }

            function e(a) {
                if (!M(a)) {
                    if (w(a)) return a.split(" ");
                    if (X(a)) {
                        var b = [];
                        q(a, function(a, c) {
                            a && b.push(c)
                        });
                        return b
                    }
                }
                return a
            }
            return {
                restrict: "AC",
                link: function(g, f, h) {
                    function l(a, b) {
                        var c = f.data("$classCounts") || {}, d = [];
                        q(a, function(a) {
                            if (0 < b || c[a]) c[a] = (c[a] || 0) + b, c[a] === +(0 < b) && d.push(a)
                        });
                        f.data("$classCounts", c);
                        return d.join(" ")
                    }

                    function k(b) {
                        if (!0 === a || g.$index % 2 === a) {
                            var k = e(b || []);
                            if (!m) {
                                var r = l(k, 1);
                                h.$addClass(r)
                            } else if (!xa(b, m)) {
                                var q = e(m),
                                    r = d(k, q),
                                    k = d(q, k),
                                    k = l(k, -1),
                                    r = l(r, 1);
                                0 === r.length ? c.removeClass(f, k) : 0 === k.length ? c.addClass(f, r) : c.setClass(f, r, k)
                            }
                        }
                        m = ba(b)
                    }
                    var m;
                    g.$watch(h[b], k, !0);
                    h.$observe("class", function(a) {
                        k(g.$eval(h[b]))
                    });
                    "ngClass" !== b && g.$watch("$index", function(c, d) {
                        var f = c & 1;
                        if (f !== d & 1) {
                            var k = e(g.$eval(h[b]));
                            f === a ? (f = l(k, 1), h.$addClass(f)) : (f = l(k, -1), h.$removeClass(f))
                        }
                    })
                }
            }
        }]
    }
    var K = function(b) {
            return w(b) ? b.toLowerCase() : b
        }, Fc = Object.prototype.hasOwnProperty,
        Fa = function(b) {
            return w(b) ? b.toUpperCase() : b
        }, S, y, Ga, ya = [].slice,
        Ke = [].push,
        wa = Object.prototype.toString,
        Pa = t("ng"),
        Ea = O.angular || (O.angular = {}),
        Sa, Ka, ka = ["0", "0", "0"];
    S = Y((/msie (\d+)/.exec(K(navigator.userAgent)) || [])[1]);
    isNaN(S) && (S = Y((/trident\/.*; rv:(\d+)/.exec(K(navigator.userAgent)) || [])[1]));
    C.$inject = [];
    Da.$inject = [];
    var ca = function() {
        return String.prototype.trim ? function(b) {
            return w(b) ? b.trim() : b
        } : function(b) {
            return w(b) ? b.replace(/^\s\s*/, "").replace(/\s\s*$/, "") : b
        }
    }();
    Ka = 9 > S ? function(b) {
        b = b.nodeName ? b : b[0];
        return b.scopeName && "HTML" != b.scopeName ? Fa(b.scopeName + ":" + b.nodeName) : b.nodeName
    } : function(b) {
        return b.nodeName ? b.nodeName : b[0].nodeName
    };
    var Xc = /[A-Z]/g,
        $c = {
            full: "1.2.16",
            major: 1,
            minor: 2,
            dot: 16,
            codeName: "badger-enumeration"
        }, Ua = N.cache = {}, gb = N.expando = "ng-" + (new Date).getTime(),
        me = 1,
        Pc = O.document.addEventListener ? function(b, a, c) {
            b.addEventListener(a, c, !1)
        } : function(b, a, c) {
            b.attachEvent("on" + a, c)
        }, Fb = O.document.removeEventListener ? function(b, a, c) {
            b.removeEventListener(a, c, !1)
        } : function(b, a, c) {
            b.detachEvent("on" + a, c)
        };
    N._data = function(b) {
        return this.cache[b[this.expando]] || {}
    };
    var he = /([\:\-\_]+(.))/g,
        ie = /^moz([A-Z])/,
        Bb = t("jqLite"),
        je = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
        Cb = /<|&#?\w+;/,
        ke = /<([\w:]+)/,
        le = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
        ea = {
            option: [1, '<select multiple="multiple">', "</select>"],
            thead: [1, "<table>", "</table>"],
            col: [2, "<table><colgroup>", "</colgroup></table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: [0, "", ""]
        };
    ea.optgroup = ea.option;
    ea.tbody = ea.tfoot = ea.colgroup = ea.caption = ea.thead;
    ea.th = ea.td;
    var Ja = N.prototype = {
        ready: function(b) {
            function a() {
                c || (c = !0, b())
            }
            var c = !1;
            "complete" === U.readyState ? setTimeout(a) : (this.on("DOMContentLoaded", a), N(O).on("load", a))
        },
        toString: function() {
            var b = [];
            q(this, function(a) {
                b.push("" + a)
            });
            return "[" + b.join(", ") + "]"
        },
        eq: function(b) {
            return 0 <= b ? y(this[b]) : y(this[this.length + b])
        },
        length: 0,
        push: Ke,
        sort: [].sort,
        splice: [].splice
    }, kb = {};
    q("multiple selected checked disabled readOnly required open".split(" "), function(b) {
        kb[K(b)] = b
    });
    var nc = {};
    q("input select option textarea button form details".split(" "), function(b) {
        nc[Fa(b)] = !0
    });
    q({
        data: jc,
        inheritedData: jb,
        scope: function(b) {
            return y(b).data("$scope") || jb(b.parentNode || b, ["$isolateScope", "$scope"])
        },
        isolateScope: function(b) {
            return y(b).data("$isolateScope") || y(b).data("$isolateScopeNoTemplate")
        },
        controller: kc,
        injector: function(b) {
            return jb(b, "$injector")
        },
        removeAttr: function(b, a) {
            b.removeAttribute(a)
        },
        hasClass: Gb,
        css: function(b, a, c) {
            a = Ta(a);
            if (B(c)) b.style[a] = c;
            else {
                var d;
                8 >= S && (d = b.currentStyle && b.currentStyle[a], "" === d && (d = "auto"));
                d = d || b.style[a];
                8 >= S && (d = "" === d ? s : d);
                return d
            }
        },
        attr: function(b, a, c) {
            var d = K(a);
            if (kb[d])
                if (B(c)) c ? (b[a] = !0, b.setAttribute(a, d)) : (b[a] = !1, b.removeAttribute(d));
                else return b[a] || (b.attributes.getNamedItem(a) || C).specified ? d : s;
            else if (B(c)) b.setAttribute(a, c);
            else if (b.getAttribute) return b = b.getAttribute(a, 2), null === b ? s : b
        },
        prop: function(b, a, c) {
            if (B(c)) b[a] = c;
            else return b[a]
        },
        text: function() {
            function b(b, d) {
                var e = a[b.nodeType];
                if (E(d)) return e ? b[e] : "";
                b[e] = d
            }
            var a = [];
            9 > S ? (a[1] = "innerText", a[3] = "nodeValue") : a[1] = a[3] = "textContent";
            b.$dv = "";
            return b
        }(),
        val: function(b, a) {
            if (E(a)) {
                if ("SELECT" === Ka(b) && b.multiple) {
                    var c = [];
                    q(b.options, function(a) {
                        a.selected && c.push(a.value || a.text)
                    });
                    return 0 === c.length ? null : c
                }
                return b.value
            }
            b.value = a
        },
        html: function(b, a) {
            if (E(a)) return b.innerHTML;
            for (var c = 0, d = b.childNodes; c < d.length; c++) Ha(d[c]);
            b.innerHTML = a
        },
        empty: lc
    }, function(b, a) {
        N.prototype[a] = function(a, d) {
            var e, g;
            if (b !== lc && (2 == b.length && b !== Gb && b !== kc ? a : d) === s) {
                if (X(a)) {
                    for (e = 0; e < this.length; e++)
                        if (b === jc) b(this[e], a);
                        else
                            for (g in a) b(this[e], g, a[g]);
                    return this
                }
                e = b.$dv;
                g = e === s ? Math.min(this.length, 1) : this.length;
                for (var f = 0; f < g; f++) {
                    var h = b(this[f], a, d);
                    e = e ? e + h : h
                }
                return e
            }
            for (e = 0; e < this.length; e++) b(this[e], a, d);
            return this
        }
    });
    q({
        removeData: hc,
        dealoc: Ha,
        on: function a(c, d, e, g) {
            if (B(g)) throw Bb("onargs");
            var f = la(c, "events"),
                h = la(c, "handle");
            f || la(c, "events", f = {});
            h || la(c, "handle", h = ne(c, f));
            q(d.split(" "), function(d) {
                var g = f[d];
                if (!g) {
                    if ("mouseenter" == d || "mouseleave" == d) {
                        var m = U.body.contains || U.body.compareDocumentPosition ? function(a, c) {
                            var d = 9 === a.nodeType ? a.documentElement : a,
                                e = c && c.parentNode;
                            return a === e || !! (e && 1 === e.nodeType && (d.contains ? d.contains(e) : a.compareDocumentPosition && a.compareDocumentPosition(e) & 16))
                        } : function(a, c) {
                            if (c)
                                for (; c = c.parentNode;)
                                    if (c === a) return !0;
                            return !1
                        };
                        f[d] = [];
                        a(c, {
                            mouseleave: "mouseout",
                            mouseenter: "mouseover"
                        }[d], function(a) {
                            var c = a.relatedTarget;
                            c && (c === this || m(this, c)) || h(a, d)
                        })
                    } else Pc(c, d, h), f[d] = [];
                    g = f[d]
                }
                g.push(e)
            })
        },
        off: ic,
        one: function(a, c, d) {
            a = y(a);
            a.on(c, function g() {
                a.off(c, d);
                a.off(c, g)
            });
            a.on(c, d)
        },
        replaceWith: function(a, c) {
            var d, e = a.parentNode;
            Ha(a);
            q(new N(c), function(c) {
                d ? e.insertBefore(c, d.nextSibling) : e.replaceChild(c, a);
                d = c
            })
        },
        children: function(a) {
            var c = [];
            q(a.childNodes, function(a) {
                1 === a.nodeType && c.push(a)
            });
            return c
        },
        contents: function(a) {
            return a.contentDocument || a.childNodes || []
        },
        append: function(a, c) {
            q(new N(c), function(c) {
                1 !== a.nodeType && 11 !== a.nodeType || a.appendChild(c)
            })
        },
        prepend: function(a, c) {
            if (1 === a.nodeType) {
                var d = a.firstChild;
                q(new N(c), function(c) {
                    a.insertBefore(c, d)
                })
            }
        },
        wrap: function(a, c) {
            c = y(c)[0];
            var d = a.parentNode;
            d && d.replaceChild(c, a);
            c.appendChild(a)
        },
        remove: function(a) {
            Ha(a);
            var c = a.parentNode;
            c && c.removeChild(a)
        },
        after: function(a, c) {
            var d = a,
                e = a.parentNode;
            q(new N(c), function(a) {
                e.insertBefore(a, d.nextSibling);
                d = a
            })
        },
        addClass: ib,
        removeClass: hb,
        toggleClass: function(a, c, d) {
            c && q(c.split(" "), function(c) {
                var g = d;
                E(g) && (g = !Gb(a, c));
                (g ? ib : hb)(a, c)
            })
        },
        parent: function(a) {
            return (a = a.parentNode) && 11 !== a.nodeType ? a : null
        },
        next: function(a) {
            if (a.nextElementSibling) return a.nextElementSibling;
            for (a = a.nextSibling; null != a && 1 !== a.nodeType;) a = a.nextSibling;
            return a
        },
        find: function(a, c) {
            return a.getElementsByTagName ? a.getElementsByTagName(c) : []
        },
        clone: Eb,
        triggerHandler: function(a, c, d) {
            c = (la(a, "events") || {})[c];
            d = d || [];
            var e = [{
                preventDefault: C,
                stopPropagation: C
            }];
            q(c, function(c) {
                c.apply(a, e.concat(d))
            })
        }
    }, function(a, c) {
        N.prototype[c] = function(c, e, g) {
            for (var f, h = 0; h < this.length; h++) E(f) ? (f = a(this[h], c, e, g), B(f) && (f = y(f))) : Db(f, a(this[h], c, e, g));
            return B(f) ? f : this
        };
        N.prototype.bind = N.prototype.on;
        N.prototype.unbind = N.prototype.off
    });
    Va.prototype = {
        put: function(a, c) {
            this[Ia(a)] = c
        },
        get: function(a) {
            return this[Ia(a)]
        },
        remove: function(a) {
            var c = this[a = Ia(a)];
            delete this[a];
            return c
        }
    };
    var pe = /^function\s*[^\(]*\(\s*([^\)]*)\)/m,
        qe = /,/,
        re = /^\s*(_?)(\S+?)\1\s*$/,
        oe = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg,
        Wa = t("$injector"),
        Le = t("$animate"),
        Ld = ["$provide",
            function(a) {
                this.$$selectors = {};
                this.register = function(c, d) {
                    var e = c + "-animation";
                    if (c && "." != c.charAt(0)) throw Le("notcsel", c);
                    this.$$selectors[c.substr(1)] = e;
                    a.factory(e, d)
                };
                this.classNameFilter = function(a) {
                    1 === arguments.length && (this.$$classNameFilter = a instanceof RegExp ? a : null);
                    return this.$$classNameFilter
                };
                this.$get = ["$timeout", "$$asyncCallback",
                    function(a, d) {
                        return {
                            enter: function(a, c, f, h) {
                                f ? f.after(a) : (c && c[0] || (c = f.parent()), c.append(a));
                                h && d(h)
                            },
                            leave: function(a, c) {
                                a.remove();
                                c && d(c)
                            },
                            move: function(a, c, d, h) {
                                this.enter(a, c, d, h)
                            },
                            addClass: function(a, c, f) {
                                c = w(c) ? c : M(c) ? c.join(" ") : "";
                                q(a, function(a) {
                                    ib(a, c)
                                });
                                f && d(f)
                            },
                            removeClass: function(a, c, f) {
                                c = w(c) ? c : M(c) ? c.join(" ") : "";
                                q(a, function(a) {
                                    hb(a, c)
                                });
                                f && d(f)
                            },
                            setClass: function(a, c, f, h) {
                                q(a, function(a) {
                                    ib(a, c);
                                    hb(a, f)
                                });
                                h && d(h)
                            },
                            enabled: C
                        }
                    }
                ]
            }
        ],
        ja = t("$compile");
    cc.$inject = ["$provide", "$$sanitizeUriProvider"];
    var te = /^(x[\:\-_]|data[\:\-_])/i,
        vc = t("$interpolate"),
        Me = /^([^\?#]*)(\?([^#]*))?(#(.*))?$/,
        we = {
            http: 80,
            https: 443,
            ftp: 21
        }, Kb = t("$location");
    Ac.prototype = Lb.prototype = zc.prototype = {
        $$html5: !1,
        $$replace: !1,
        absUrl: nb("$$absUrl"),
        url: function(a, c) {
            if (E(a)) return this.$$url;
            var d = Me.exec(a);
            d[1] && this.path(decodeURIComponent(d[1]));
            (d[2] || d[1]) && this.search(d[3] || "");
            this.hash(d[5] || "", c);
            return this
        },
        protocol: nb("$$protocol"),
        host: nb("$$host"),
        port: nb("$$port"),
        path: Bc("$$path", function(a) {
            return "/" == a.charAt(0) ? a : "/" + a
        }),
        search: function(a, c) {
            switch (arguments.length) {
                case 0:
                    return this.$$search;
                case 1:
                    if (w(a)) this.$$search = Yb(a);
                    else if (X(a)) this.$$search = a;
                    else throw Kb("isrcharg");
                    break;
                default:
                    E(c) || null === c ? delete this.$$search[a] : this.$$search[a] = c
            }
            this.$$compose();
            return this
        },
        hash: Bc("$$hash", Da),
        replace: function() {
            this.$$replace = !0;
            return this
        }
    };
    var Ba = t("$parse"),
        Ec = {}, ta, Ma = {
            "null": function() {
                return null
            },
            "true": function() {
                return !0
            },
            "false": function() {
                return !1
            },
            undefined: C,
            "+": function(a, c, d, e) {
                d = d(a, c);
                e = e(a, c);
                return B(d) ? B(e) ? d + e : d : B(e) ? e : s
            },
            "-": function(a, c, d, e) {
                d = d(a, c);
                e = e(a, c);
                return (B(d) ? d : 0) - (B(e) ? e : 0)
            },
            "*": function(a, c, d, e) {
                return d(a, c) * e(a, c)
            },
            "/": function(a, c, d, e) {
                return d(a, c) / e(a, c)
            },
            "%": function(a, c, d, e) {
                return d(a, c) % e(a, c)
            },
            "^": function(a, c, d, e) {
                return d(a, c) ^ e(a, c)
            },
            "=": C,
            "===": function(a, c, d, e) {
                return d(a, c) === e(a, c)
            },
            "!==": function(a, c, d, e) {
                return d(a, c) !== e(a, c)
            },
            "==": function(a, c, d, e) {
                return d(a, c) == e(a, c)
            },
            "!=": function(a, c, d, e) {
                return d(a, c) != e(a, c)
            },
            "<": function(a, c, d, e) {
                return d(a, c) < e(a, c)
            },
            ">": function(a, c, d, e) {
                return d(a, c) > e(a, c)
            },
            "<=": function(a, c, d, e) {
                return d(a, c) <= e(a, c)
            },
            ">=": function(a, c, d, e) {
                return d(a, c) >= e(a, c)
            },
            "&&": function(a, c, d, e) {
                return d(a, c) && e(a, c)
            },
            "||": function(a, c, d, e) {
                return d(a, c) || e(a, c)
            },
            "&": function(a, c, d, e) {
                return d(a, c) & e(a, c)
            },
            "|": function(a, c, d, e) {
                return e(a, c)(a, c, d(a, c))
            },
            "!": function(a, c, d) {
                return !d(a, c)
            }
        }, Ne = {
            n: "\n",
            f: "\f",
            r: "\r",
            t: "\t",
            v: "\v",
            "'": "'",
            '"': '"'
        }, Nb = function(a) {
            this.options = a
        };
    Nb.prototype = {
        constructor: Nb,
        lex: function(a) {
            this.text = a;
            this.index = 0;
            this.ch = s;
            this.lastCh = ":";
            this.tokens = [];
            var c;
            for (a = []; this.index < this.text.length;) {
                this.ch = this.text.charAt(this.index);
                if (this.is("\"'")) this.readString(this.ch);
                else if (this.isNumber(this.ch) || this.is(".") && this.isNumber(this.peek())) this.readNumber();
                else if (this.isIdent(this.ch)) this.readIdent(), this.was("{,") && ("{" === a[0] && (c = this.tokens[this.tokens.length - 1])) && (c.json = -1 === c.text.indexOf("."));
                else if (this.is("(){}[].,;:?")) this.tokens.push({
                    index: this.index,
                    text: this.ch,
                    json: this.was(":[,") && this.is("{[") || this.is("}]:,")
                }), this.is("{[") && a.unshift(this.ch), this.is("}]") && a.shift(), this.index++;
                else if (this.isWhitespace(this.ch)) {
                    this.index++;
                    continue
                } else {
                    var d = this.ch + this.peek(),
                        e = d + this.peek(2),
                        g = Ma[this.ch],
                        f = Ma[d],
                        h = Ma[e];
                    h ? (this.tokens.push({
                        index: this.index,
                        text: e,
                        fn: h
                    }), this.index += 3) : f ? (this.tokens.push({
                        index: this.index,
                        text: d,
                        fn: f
                    }), this.index += 2) : g ? (this.tokens.push({
                        index: this.index,
                        text: this.ch,
                        fn: g,
                        json: this.was("[,:") && this.is("+-")
                    }), this.index += 1) : this.throwError("Unexpected next character ", this.index, this.index + 1)
                }
                this.lastCh = this.ch
            }
            return this.tokens
        },
        is: function(a) {
            return -1 !== a.indexOf(this.ch)
        },
        was: function(a) {
            return -1 !== a.indexOf(this.lastCh)
        },
        peek: function(a) {
            a = a || 1;
            return this.index + a < this.text.length ? this.text.charAt(this.index + a) : !1
        },
        isNumber: function(a) {
            return "0" <= a && "9" >= a
        },
        isWhitespace: function(a) {
            return " " === a || "\r" === a || "\t" === a || "\n" === a || "\v" === a || "\u00a0" === a
        },
        isIdent: function(a) {
            return "a" <= a && "z" >= a || "A" <= a && "Z" >= a || "_" === a || "$" === a
        },
        isExpOperator: function(a) {
            return "-" === a || "+" === a || this.isNumber(a)
        },
        throwError: function(a, c, d) {
            d = d || this.index;
            c = B(c) ? "s " + c + "-" + this.index + " [" + this.text.substring(c, d) + "]" : " " + d;
            throw Ba("lexerr", a, c, this.text);
        },
        readNumber: function() {
            for (var a = "", c = this.index; this.index < this.text.length;) {
                var d = K(this.text.charAt(this.index));
                if ("." == d || this.isNumber(d)) a += d;
                else {
                    var e = this.peek();
                    if ("e" == d && this.isExpOperator(e)) a += d;
                    else if (this.isExpOperator(d) && e && this.isNumber(e) && "e" == a.charAt(a.length - 1)) a += d;
                    else if (!this.isExpOperator(d) || e && this.isNumber(e) || "e" != a.charAt(a.length - 1)) break;
                    else this.throwError("Invalid exponent")
                }
                this.index++
            }
            a *= 1;
            this.tokens.push({
                index: c,
                text: a,
                json: !0,
                fn: function() {
                    return a
                }
            })
        },
        readIdent: function() {
            for (var a = this, c = "", d = this.index, e, g, f, h; this.index < this.text.length;) {
                h = this.text.charAt(this.index);
                if ("." === h || this.isIdent(h) || this.isNumber(h)) "." === h && (e = this.index), c += h;
                else break;
                this.index++
            }
            if (e)
                for (g = this.index; g < this.text.length;) {
                    h = this.text.charAt(g);
                    if ("(" === h) {
                        f = c.substr(e - d + 1);
                        c = c.substr(0, e - d);
                        this.index = g;
                        break
                    }
                    if (this.isWhitespace(h)) g++;
                    else break
                }
            d = {
                index: d,
                text: c
            };
            if (Ma.hasOwnProperty(c)) d.fn = Ma[c], d.json = Ma[c];
            else {
                var l = Dc(c, this.options, this.text);
                d.fn = D(function(a, c) {
                    return l(a, c)
                }, {
                    assign: function(d, e) {
                        return ob(d, c, e, a.text, a.options)
                    }
                })
            }
            this.tokens.push(d);
            f && (this.tokens.push({
                index: e,
                text: ".",
                json: !1
            }), this.tokens.push({
                index: e + 1,
                text: f,
                json: !1
            }))
        },
        readString: function(a) {
            var c = this.index;
            this.index++;
            for (var d = "", e = a, g = !1; this.index < this.text.length;) {
                var f = this.text.charAt(this.index),
                    e = e + f;
                if (g) "u" === f ? (f = this.text.substring(this.index + 1, this.index + 5), f.match(/[\da-f]{4}/i) || this.throwError("Invalid unicode escape [\\u" + f + "]"), this.index += 4, d += String.fromCharCode(parseInt(f, 16))) : d = (g = Ne[f]) ? d + g : d + f, g = !1;
                else if ("\\" === f) g = !0;
                else {
                    if (f === a) {
                        this.index++;
                        this.tokens.push({
                            index: c,
                            text: e,
                            string: d,
                            json: !0,
                            fn: function() {
                                return d
                            }
                        });
                        return
                    }
                    d += f
                }
                this.index++
            }
            this.throwError("Unterminated quote", c)
        }
    };
    var $a = function(a, c, d) {
        this.lexer = a;
        this.$filter = c;
        this.options = d
    };
    $a.ZERO = D(function() {
        return 0
    }, {
        constant: !0
    });
    $a.prototype = {
        constructor: $a,
        parse: function(a, c) {
            this.text = a;
            this.json = c;
            this.tokens = this.lexer.lex(a);
            c && (this.assignment = this.logicalOR, this.functionCall = this.fieldAccess = this.objectIndex = this.filterChain = function() {
                this.throwError("is not valid json", {
                    text: a,
                    index: 0
                })
            });
            var d = c ? this.primary() : this.statements();
            0 !== this.tokens.length && this.throwError("is an unexpected token", this.tokens[0]);
            d.literal = !! d.literal;
            d.constant = !! d.constant;
            return d
        },
        primary: function() {
            var a;
            if (this.expect("(")) a = this.filterChain(), this.consume(")");
            else if (this.expect("[")) a = this.arrayDeclaration();
            else if (this.expect("{")) a = this.object();
            else {
                var c = this.expect();
                (a = c.fn) || this.throwError("not a primary expression", c);
                c.json && (a.constant = !0, a.literal = !0)
            }
            for (var d; c = this.expect("(", "[", ".");) "(" === c.text ? (a = this.functionCall(a, d), d = null) : "[" === c.text ? (d = a, a = this.objectIndex(a)) : "." === c.text ? (d = a, a = this.fieldAccess(a)) : this.throwError("IMPOSSIBLE");
            return a
        },
        throwError: function(a, c) {
            throw Ba("syntax", c.text, a, c.index + 1, this.text, this.text.substring(c.index));
        },
        peekToken: function() {
            if (0 === this.tokens.length) throw Ba("ueoe", this.text);
            return this.tokens[0]
        },
        peek: function(a, c, d, e) {
            if (0 < this.tokens.length) {
                var g = this.tokens[0],
                    f = g.text;
                if (f === a || f === c || f === d || f === e || !(a || c || d || e)) return g
            }
            return !1
        },
        expect: function(a, c, d, e) {
            return (a = this.peek(a, c, d, e)) ? (this.json && !a.json && this.throwError("is not valid json", a), this.tokens.shift(), a) : !1
        },
        consume: function(a) {
            this.expect(a) || this.throwError("is unexpected, expecting [" + a + "]", this.peek())
        },
        unaryFn: function(a, c) {
            return D(function(d, e) {
                return a(d, e, c)
            }, {
                constant: c.constant
            })
        },
        ternaryFn: function(a, c, d) {
            return D(function(e, g) {
                return a(e, g) ? c(e, g) : d(e, g)
            }, {
                constant: a.constant && c.constant && d.constant
            })
        },
        binaryFn: function(a, c, d) {
            return D(function(e, g) {
                return c(e, g, a, d)
            }, {
                constant: a.constant && d.constant
            })
        },
        statements: function() {
            for (var a = [];;)
                if (0 < this.tokens.length && !this.peek("}", ")", ";", "]") && a.push(this.filterChain()), !this.expect(";")) return 1 === a.length ? a[0] : function(c, d) {
                    for (var e, g = 0; g < a.length; g++) {
                        var f = a[g];
                        f && (e = f(c, d))
                    }
                    return e
                }
        },
        filterChain: function() {
            for (var a = this.expression(), c;;)
                if (c = this.expect("|")) a = this.binaryFn(a, c.fn, this.filter());
                else return a
        },
        filter: function() {
            for (var a = this.expect(), c = this.$filter(a.text), d = [];;)
                if (a = this.expect(":")) d.push(this.expression());
                else {
                    var e = function(a, e, h) {
                        h = [h];
                        for (var l = 0; l < d.length; l++) h.push(d[l](a, e));
                        return c.apply(a, h)
                    };
                    return function() {
                        return e
                    }
                }
        },
        expression: function() {
            return this.assignment()
        },
        assignment: function() {
            var a = this.ternary(),
                c, d;
            return (d = this.expect("=")) ? (a.assign || this.throwError("implies assignment but [" + this.text.substring(0, d.index) + "] can not be assigned to", d), c = this.ternary(), function(d, g) {
                return a.assign(d, c(d, g), g)
            }) : a
        },
        ternary: function() {
            var a = this.logicalOR(),
                c, d;
            if (this.expect("?")) {
                c = this.ternary();
                if (d = this.expect(":")) return this.ternaryFn(a, c, this.ternary());
                this.throwError("expected :", d)
            } else return a
        },
        logicalOR: function() {
            for (var a = this.logicalAND(), c;;)
                if (c = this.expect("||")) a = this.binaryFn(a, c.fn, this.logicalAND());
                else return a
        },
        logicalAND: function() {
            var a = this.equality(),
                c;
            if (c = this.expect("&&")) a = this.binaryFn(a, c.fn, this.logicalAND());
            return a
        },
        equality: function() {
            var a = this.relational(),
                c;
            if (c = this.expect("==", "!=", "===", "!==")) a = this.binaryFn(a, c.fn, this.equality());
            return a
        },
        relational: function() {
            var a = this.additive(),
                c;
            if (c = this.expect("<", ">", "<=", ">=")) a = this.binaryFn(a, c.fn, this.relational());
            return a
        },
        additive: function() {
            for (var a = this.multiplicative(), c; c = this.expect("+", "-");) a = this.binaryFn(a, c.fn, this.multiplicative());
            return a
        },
        multiplicative: function() {
            for (var a = this.unary(), c; c = this.expect("*", "/", "%");) a = this.binaryFn(a, c.fn, this.unary());
            return a
        },
        unary: function() {
            var a;
            return this.expect("+") ? this.primary() : (a = this.expect("-")) ? this.binaryFn($a.ZERO, a.fn, this.unary()) : (a = this.expect("!")) ? this.unaryFn(a.fn, this.unary()) : this.primary()
        },
        fieldAccess: function(a) {
            var c = this,
                d = this.expect().text,
                e = Dc(d, this.options, this.text);
            return D(function(c, d, h) {
                return e(h || a(c, d))
            }, {
                assign: function(e, f, h) {
                    return ob(a(e, h), d, f, c.text, c.options)
                }
            })
        },
        objectIndex: function(a) {
            var c = this,
                d = this.expression();
            this.consume("]");
            return D(function(e, g) {
                var f = a(e, g),
                    h = d(e, g),
                    l;
                if (!f) return s;
                (f = Za(f[h], c.text)) && (f.then && c.options.unwrapPromises) && (l = f, "$$v" in f || (l.$$v = s, l.then(function(a) {
                    l.$$v = a
                })), f = f.$$v);
                return f
            }, {
                assign: function(e, g, f) {
                    var h = d(e, f);
                    return Za(a(e, f), c.text)[h] = g
                }
            })
        },
        functionCall: function(a, c) {
            var d = [];
            if (")" !== this.peekToken().text) {
                do d.push(this.expression()); while (this.expect(","))
            }
            this.consume(")");
            var e = this;
            return function(g, f) {
                for (var h = [], l = c ? c(g, f) : g, k = 0; k < d.length; k++) h.push(d[k](g, f));
                k = a(g, f, l) || C;
                Za(l, e.text);
                Za(k, e.text);
                h = k.apply ? k.apply(l, h) : k(h[0], h[1], h[2], h[3], h[4]);
                return Za(h, e.text)
            }
        },
        arrayDeclaration: function() {
            var a = [],
                c = !0;
            if ("]" !== this.peekToken().text) {
                do {
                    if (this.peek("]")) break;
                    var d = this.expression();
                    a.push(d);
                    d.constant || (c = !1)
                } while (this.expect(","))
            }
            this.consume("]");
            return D(function(c, d) {
                for (var f = [], h = 0; h < a.length; h++) f.push(a[h](c, d));
                return f
            }, {
                literal: !0,
                constant: c
            })
        },
        object: function() {
            var a = [],
                c = !0;
            if ("}" !== this.peekToken().text) {
                do {
                    if (this.peek("}")) break;
                    var d = this.expect(),
                        d = d.string || d.text;
                    this.consume(":");
                    var e = this.expression();
                    a.push({
                        key: d,
                        value: e
                    });
                    e.constant || (c = !1)
                } while (this.expect(","))
            }
            this.consume("}");
            return D(function(c, d) {
                for (var e = {}, l = 0; l < a.length; l++) {
                    var k = a[l];
                    e[k.key] = k.value(c, d)
                }
                return e
            }, {
                literal: !0,
                constant: c
            })
        }
    };
    var Mb = {}, ua = t("$sce"),
        ga = {
            HTML: "html",
            CSS: "css",
            URL: "url",
            RESOURCE_URL: "resourceUrl",
            JS: "js"
        }, W = U.createElement("a"),
        Hc = sa(O.location.href, !0);
    gc.$inject = ["$provide"];
    Ic.$inject = ["$locale"];
    Kc.$inject = ["$locale"];
    var Nc = ".",
        Ie = {
            yyyy: $("FullYear", 4),
            yy: $("FullYear", 2, 0, !0),
            y: $("FullYear", 1),
            MMMM: pb("Month"),
            MMM: pb("Month", !0),
            MM: $("Month", 2, 1),
            M: $("Month", 1, 1),
            dd: $("Date", 2),
            d: $("Date", 1),
            HH: $("Hours", 2),
            H: $("Hours", 1),
            hh: $("Hours", 2, -12),
            h: $("Hours", 1, -12),
            mm: $("Minutes", 2),
            m: $("Minutes", 1),
            ss: $("Seconds", 2),
            s: $("Seconds", 1),
            sss: $("Milliseconds", 3),
            EEEE: pb("Day"),
            EEE: pb("Day", !0),
            a: function(a, c) {
                return 12 > a.getHours() ? c.AMPMS[0] : c.AMPMS[1]
            },
            Z: function(a) {
                a = -1 * a.getTimezoneOffset();
                return a = (0 <= a ? "+" : "") + (Ob(Math[0 < a ? "floor" : "ceil"](a / 60), 2) + Ob(Math.abs(a % 60), 2))
            }
        }, He = /((?:[^yMdHhmsaZE']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z))(.*)/,
        Ge = /^\-?\d+$/;
    Jc.$inject = ["$locale"];
    var Ee = aa(K),
        Fe = aa(Fa);
    Lc.$inject = ["$parse"];
    var cd = aa({
            restrict: "E",
            compile: function(a, c) {
                8 >= S && (c.href || c.name || c.$set("href", ""), a.append(U.createComment("IE fix")));
                if (!c.href && !c.xlinkHref && !c.name) return function(a, c) {
                    var g = "[object SVGAnimatedString]" === wa.call(c.prop("href")) ? "xlink:href" : "href";
                    c.on("click", function(a) {
                        c.attr(g) || a.preventDefault()
                    })
                }
            }
        }),
        zb = {};
    q(kb, function(a, c) {
        if ("multiple" != a) {
            var d = na("ng-" + c);
            zb[d] = function() {
                return {
                    priority: 100,
                    link: function(a, g, f) {
                        a.$watch(f[d], function(a) {
                            f.$set(c, !! a)
                        })
                    }
                }
            }
        }
    });
    q(["src", "srcset", "href"], function(a) {
        var c = na("ng-" + a);
        zb[c] = function() {
            return {
                priority: 99,
                link: function(d, e, g) {
                    var f = a,
                        h = a;
                    "href" === a && "[object SVGAnimatedString]" === wa.call(e.prop("href")) && (h = "xlinkHref", g.$attr[h] = "xlink:href", f = null);
                    g.$observe(c, function(a) {
                        a && (g.$set(h, a), S && f && e.prop(f, g[h]))
                    })
                }
            }
        }
    });
    var sb = {
        $addControl: C,
        $removeControl: C,
        $setValidity: C,
        $setDirty: C,
        $setPristine: C
    };
    Oc.$inject = ["$element", "$attrs", "$scope", "$animate"];
    var Qc = function(a) {
            return ["$timeout", function(c) {
                return {
                    name: "form",
                    restrict: a ? "EAC" : "E",
                    controller: Oc,
                    compile: function() {
                        return {
                            pre: function(a, e, g, f) {
                                if (!g.action) {
                                    var h = function(a) {
                                        a.preventDefault ? a.preventDefault() : a.returnValue = !1
                                    };
                                    Pc(e[0], "submit", h);
                                    e.on("$destroy", function() {
                                        c(function() {
                                            Fb(e[0], "submit", h)
                                        }, 0, !1)
                                    })
                                }
                                var l = e.parent().controller("form"),
                                    k = g.name || g.ngForm;
                                k && ob(a, k, f, k);
                                if (l) e.on("$destroy", function() {
                                    l.$removeControl(f);
                                    k && ob(a, k, s, k);
                                    D(f, sb)
                                })
                            }
                        }
                    }
                }
            }]
        }, dd = Qc(),
        qd = Qc(!0),
        Oe = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/,
        Pe = /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9-]+(\.[a-z0-9-]+)*$/i,
        Qe = /^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/,
        Rc = {
            text: ub,
            number: function(a, c, d, e, g, f) {
                ub(a, c, d, e, g, f);
                e.$parsers.push(function(a) {
                    var c = e.$isEmpty(a);
                    if (c || Qe.test(a)) return e.$setValidity("number", !0), "" === a ? null : c ? a : parseFloat(a);
                    e.$setValidity("number", !1);
                    return s
                });
                Je(e, "number", c);
                e.$formatters.push(function(a) {
                    return e.$isEmpty(a) ? "" : "" + a
                });
                d.min && (a = function(a) {
                    var c = parseFloat(d.min);
                    return pa(e, "min", e.$isEmpty(a) || a >= c, a)
                }, e.$parsers.push(a), e.$formatters.push(a));
                d.max && (a = function(a) {
                    var c = parseFloat(d.max);
                    return pa(e, "max", e.$isEmpty(a) || a <= c, a)
                }, e.$parsers.push(a), e.$formatters.push(a));
                e.$formatters.push(function(a) {
                    return pa(e, "number", e.$isEmpty(a) || vb(a), a)
                })
            },
            url: function(a, c, d, e, g, f) {
                ub(a, c, d, e, g, f);
                a = function(a) {
                    return pa(e, "url", e.$isEmpty(a) || Oe.test(a), a)
                };
                e.$formatters.push(a);
                e.$parsers.push(a)
            },
            email: function(a, c, d, e, g, f) {
                ub(a, c, d, e, g, f);
                a = function(a) {
                    return pa(e, "email", e.$isEmpty(a) || Pe.test(a), a)
                };
                e.$formatters.push(a);
                e.$parsers.push(a)
            },
            radio: function(a, c, d, e) {
                E(d.name) && c.attr("name", bb());
                c.on("click", function() {
                    c[0].checked && a.$apply(function() {
                        e.$setViewValue(d.value)
                    })
                });
                e.$render = function() {
                    c[0].checked = d.value == e.$viewValue
                };
                d.$observe("value", e.$render)
            },
            checkbox: function(a, c, d, e) {
                var g = d.ngTrueValue,
                    f = d.ngFalseValue;
                w(g) || (g = !0);
                w(f) || (f = !1);
                c.on("click", function() {
                    a.$apply(function() {
                        e.$setViewValue(c[0].checked)
                    })
                });
                e.$render = function() {
                    c[0].checked = e.$viewValue
                };
                e.$isEmpty = function(a) {
                    return a !== g
                };
                e.$formatters.push(function(a) {
                    return a === g
                });
                e.$parsers.push(function(a) {
                    return a ? g : f
                })
            },
            hidden: C,
            button: C,
            submit: C,
            reset: C,
            file: C
        }, dc = ["$browser", "$sniffer",
            function(a, c) {
                return {
                    restrict: "E",
                    require: "?ngModel",
                    link: function(d, e, g, f) {
                        f && (Rc[K(g.type)] || Rc.text)(d, e, g, f, c, a)
                    }
                }
            }
        ],
        rb = "ng-valid",
        qb = "ng-invalid",
        La = "ng-pristine",
        tb = "ng-dirty",
        Re = ["$scope", "$exceptionHandler", "$attrs", "$element", "$parse", "$animate",
            function(a, c, d, e, g, f) {
                function h(a, c) {
                    c = c ? "-" + fb(c, "-") : "";
                    f.removeClass(e, (a ? qb : rb) + c);
                    f.addClass(e, (a ? rb : qb) + c)
                }
                this.$modelValue = this.$viewValue = Number.NaN;
                this.$parsers = [];
                this.$formatters = [];
                this.$viewChangeListeners = [];
                this.$pristine = !0;
                this.$dirty = !1;
                this.$valid = !0;
                this.$invalid = !1;
                this.$name = d.name;
                var l = g(d.ngModel),
                    k = l.assign;
                if (!k) throw t("ngModel")("nonassign", d.ngModel, ha(e));
                this.$render = C;
                this.$isEmpty = function(a) {
                    return E(a) || "" === a || null === a || a !== a
                };
                var m = e.inheritedData("$formController") || sb,
                    n = 0,
                    p = this.$error = {};
                e.addClass(La);
                h(!0);
                this.$setValidity = function(a, c) {
                    p[a] !== !c && (c ? (p[a] && n--, n || (h(!0), this.$valid = !0, this.$invalid = !1)) : (h(!1), this.$invalid = !0, this.$valid = !1, n++), p[a] = !c, h(c, a), m.$setValidity(a, c, this))
                };
                this.$setPristine = function() {
                    this.$dirty = !1;
                    this.$pristine = !0;
                    f.removeClass(e, tb);
                    f.addClass(e, La)
                };
                this.$setViewValue = function(d) {
                    this.$viewValue = d;
                    this.$pristine && (this.$dirty = !0, this.$pristine = !1, f.removeClass(e, La), f.addClass(e, tb), m.$setDirty());
                    q(this.$parsers, function(a) {
                        d = a(d)
                    });
                    this.$modelValue !== d && (this.$modelValue = d, k(a, d), q(this.$viewChangeListeners, function(a) {
                        try {
                            a()
                        } catch (d) {
                            c(d)
                        }
                    }))
                };
                var r = this;
                a.$watch(function() {
                    var c = l(a);
                    if (r.$modelValue !== c) {
                        var d = r.$formatters,
                            e = d.length;
                        for (r.$modelValue = c; e--;) c = d[e](c);
                        r.$viewValue !== c && (r.$viewValue = c, r.$render())
                    }
                    return c
                })
            }
        ],
        Fd = function() {
            return {
                require: ["ngModel", "^?form"],
                controller: Re,
                link: function(a, c, d, e) {
                    var g = e[0],
                        f = e[1] || sb;
                    f.$addControl(g);
                    a.$on("$destroy", function() {
                        f.$removeControl(g)
                    })
                }
            }
        }, Hd = aa({
            require: "ngModel",
            link: function(a, c, d, e) {
                e.$viewChangeListeners.push(function() {
                    a.$eval(d.ngChange)
                })
            }
        }),
        ec = function() {
            return {
                require: "?ngModel",
                link: function(a, c, d, e) {
                    if (e) {
                        d.required = !0;
                        var g = function(a) {
                            if (d.required && e.$isEmpty(a)) e.$setValidity("required", !1);
                            else return e.$setValidity("required", !0), a
                        };
                        e.$formatters.push(g);
                        e.$parsers.unshift(g);
                        d.$observe("required", function() {
                            g(e.$viewValue)
                        })
                    }
                }
            }
        }, Gd = function() {
            return {
                require: "ngModel",
                link: function(a, c, d, e) {
                    var g = (a = /\/(.*)\//.exec(d.ngList)) && RegExp(a[1]) || d.ngList || ",";
                    e.$parsers.push(function(a) {
                        if (!E(a)) {
                            var c = [];
                            a && q(a.split(g), function(a) {
                                a && c.push(ca(a))
                            });
                            return c
                        }
                    });
                    e.$formatters.push(function(a) {
                        return M(a) ? a.join(", ") : s
                    });
                    e.$isEmpty = function(a) {
                        return !a || !a.length
                    }
                }
            }
        }, Se = /^(true|false|\d+)$/,
        Id = function() {
            return {
                priority: 100,
                compile: function(a, c) {
                    return Se.test(c.ngValue) ? function(a, c, g) {
                        g.$set("value", a.$eval(g.ngValue))
                    } : function(a, c, g) {
                        a.$watch(g.ngValue, function(a) {
                            g.$set("value", a)
                        })
                    }
                }
            }
        }, id = va(function(a, c, d) {
            c.addClass("ng-binding").data("$binding", d.ngBind);
            a.$watch(d.ngBind, function(a) {
                c.text(a == s ? "" : a)
            })
        }),
        kd = ["$interpolate",
            function(a) {
                return function(c, d, e) {
                    c = a(d.attr(e.$attr.ngBindTemplate));
                    d.addClass("ng-binding").data("$binding", c);
                    e.$observe("ngBindTemplate", function(a) {
                        d.text(a)
                    })
                }
            }
        ],
        jd = ["$sce", "$parse",
            function(a, c) {
                return function(d, e, g) {
                    e.addClass("ng-binding").data("$binding", g.ngBindHtml);
                    var f = c(g.ngBindHtml);
                    d.$watch(function() {
                        return (f(d) || "").toString()
                    }, function(c) {
                        e.html(a.getTrustedHtml(f(d)) || "")
                    })
                }
            }
        ],
        ld = Pb("", !0),
        nd = Pb("Odd", 0),
        md = Pb("Even", 1),
        od = va({
            compile: function(a, c) {
                c.$set("ngCloak", s);
                a.removeClass("ng-cloak")
            }
        }),
        pd = [
            function() {
                return {
                    scope: !0,
                    controller: "@",
                    priority: 500
                }
            }
        ],
        fc = {};
    q("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "), function(a) {
        var c = na("ng-" + a);
        fc[c] = ["$parse",
            function(d) {
                return {
                    compile: function(e, g) {
                        var f = d(g[c]);
                        return function(c, d, e) {
                            d.on(K(a), function(a) {
                                c.$apply(function() {
                                    f(c, {
                                        $event: a
                                    })
                                })
                            })
                        }
                    }
                }
            }
        ]
    });
    var sd = ["$animate",
            function(a) {
                return {
                    transclude: "element",
                    priority: 600,
                    terminal: !0,
                    restrict: "A",
                    $$tlb: !0,
                    link: function(c, d, e, g, f) {
                        var h, l, k;
                        c.$watch(e.ngIf, function(g) {
                            Qa(g) ? l || (l = c.$new(), f(l, function(c) {
                                c[c.length++] = U.createComment(" end ngIf: " + e.ngIf + " ");
                                h = {
                                    clone: c
                                };
                                a.enter(c, d.parent(), d)
                            })) : (k && (k.remove(), k = null), l && (l.$destroy(), l = null), h && (k = yb(h.clone), a.leave(k, function() {
                                k = null
                            }), h = null))
                        })
                    }
                }
            }
        ],
        td = ["$http", "$templateCache", "$anchorScroll", "$animate", "$sce",
            function(a, c, d, e, g) {
                return {
                    restrict: "ECA",
                    priority: 400,
                    terminal: !0,
                    transclude: "element",
                    controller: Ea.noop,
                    compile: function(f, h) {
                        var l = h.ngInclude || h.src,
                            k = h.onload || "",
                            m = h.autoscroll;
                        return function(f, h, q, s, u) {
                            var F = 0,
                                v, y, A, x = function() {
                                    y && (y.remove(), y = null);
                                    v && (v.$destroy(), v = null);
                                    A && (e.leave(A, function() {
                                        y = null
                                    }), y = A, A = null)
                                };
                            f.$watch(g.parseAsResourceUrl(l), function(g) {
                                var l = function() {
                                    !B(m) || m && !f.$eval(m) || d()
                                }, q = ++F;
                                g ? (a.get(g, {
                                    cache: c
                                }).success(function(a) {
                                        if (q === F) {
                                            var c = f.$new();
                                            s.template = a;
                                            a = u(c, function(a) {
                                                x();
                                                e.enter(a, null, h, l)
                                            });
                                            v = c;
                                            A = a;
                                            v.$emit("$includeContentLoaded");
                                            f.$eval(k)
                                        }
                                    }).error(function() {
                                        q === F && x()
                                    }), f.$emit("$includeContentRequested")) : (x(), s.template = null)
                            })
                        }
                    }
                }
            }
        ],
        Jd = ["$compile",
            function(a) {
                return {
                    restrict: "ECA",
                    priority: -400,
                    require: "ngInclude",
                    link: function(c, d, e, g) {
                        d.html(g.template);
                        a(d.contents())(c)
                    }
                }
            }
        ],
        ud = va({
            priority: 450,
            compile: function() {
                return {
                    pre: function(a, c, d) {
                        a.$eval(d.ngInit)
                    }
                }
            }
        }),
        vd = va({
            terminal: !0,
            priority: 1E3
        }),
        wd = ["$locale", "$interpolate",
            function(a, c) {
                var d = /{}/g;
                return {
                    restrict: "EA",
                    link: function(e, g, f) {
                        var h = f.count,
                            l = f.$attr.when && g.attr(f.$attr.when),
                            k = f.offset || 0,
                            m = e.$eval(l) || {}, n = {}, p = c.startSymbol(),
                            r = c.endSymbol(),
                            s = /^when(Minus)?(.+)$/;
                        q(f, function(a, c) {
                            s.test(c) && (m[K(c.replace("when", "").replace("Minus", "-"))] = g.attr(f.$attr[c]))
                        });
                        q(m, function(a, e) {
                            n[e] = c(a.replace(d, p + h + "-" + k + r))
                        });
                        e.$watch(function() {
                            var c = parseFloat(e.$eval(h));
                            if (isNaN(c)) return "";
                            c in m || (c = a.pluralCat(c - k));
                            return n[c](e, g, !0)
                        }, function(a) {
                            g.text(a)
                        })
                    }
                }
            }
        ],
        xd = ["$parse", "$animate",
            function(a, c) {
                var d = t("ngRepeat");
                return {
                    transclude: "element",
                    priority: 1E3,
                    terminal: !0,
                    $$tlb: !0,
                    link: function(e, g, f, h, l) {
                        var k = f.ngRepeat,
                            m = k.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?\s*$/),
                            n, p, r, s, u, F, v = {
                                $id: Ia
                            };
                        if (!m) throw d("iexp", k);
                        f = m[1];
                        h = m[2];
                        (m = m[3]) ? (n = a(m), p = function(a, c, d) {
                            F && (v[F] = a);
                            v[u] = c;
                            v.$index = d;
                            return n(e, v)
                        }) : (r = function(a, c) {
                            return Ia(c)
                        }, s = function(a) {
                            return a
                        });
                        m = f.match(/^(?:([\$\w]+)|\(([\$\w]+)\s*,\s*([\$\w]+)\))$/);
                        if (!m) throw d("iidexp", f);
                        u = m[3] || m[1];
                        F = m[2];
                        var B = {};
                        e.$watchCollection(h, function(a) {
                            var f, h, m = g[0],
                                n, v = {}, H, R, w, C, T, t, E = [];
                            if (ab(a)) T = a, n = p || r;
                            else {
                                n = p || s;
                                T = [];
                                for (w in a) a.hasOwnProperty(w) && "$" != w.charAt(0) && T.push(w);
                                T.sort()
                            }
                            H = T.length;
                            h = E.length = T.length;
                            for (f = 0; f < h; f++)
                                if (w = a === T ? f : T[f], C = a[w], C = n(w, C, f), Aa(C, "`track by` id"), B.hasOwnProperty(C)) t = B[C], delete B[C], v[C] = t, E[f] = t;
                                else {
                                    if (v.hasOwnProperty(C)) throw q(E, function(a) {
                                        a && a.scope && (B[a.id] = a)
                                    }), d("dupes", k, C);
                                    E[f] = {
                                        id: C
                                    };
                                    v[C] = !1
                                }
                            for (w in B) B.hasOwnProperty(w) && (t = B[w], f = yb(t.clone), c.leave(f), q(f, function(a) {
                                a.$$NG_REMOVED = !0
                            }), t.scope.$destroy());
                            f = 0;
                            for (h = T.length; f < h; f++) {
                                w = a === T ? f : T[f];
                                C = a[w];
                                t = E[f];
                                E[f - 1] && (m = E[f - 1].clone[E[f - 1].clone.length - 1]);
                                if (t.scope) {
                                    R = t.scope;
                                    n = m;
                                    do n = n.nextSibling; while (n && n.$$NG_REMOVED);
                                    t.clone[0] != n && c.move(yb(t.clone), null, y(m));
                                    m = t.clone[t.clone.length - 1]
                                } else R = e.$new();
                                R[u] = C;
                                F && (R[F] = w);
                                R.$index = f;
                                R.$first = 0 === f;
                                R.$last = f === H - 1;
                                R.$middle = !(R.$first || R.$last);
                                R.$odd = !(R.$even = 0 === (f & 1));
                                t.scope || l(R, function(a) {
                                    a[a.length++] = U.createComment(" end ngRepeat: " + k + " ");
                                    c.enter(a, null, y(m));
                                    m = a;
                                    t.scope = R;
                                    t.clone = a;
                                    v[t.id] = t
                                })
                            }
                            B = v
                        })
                    }
                }
            }
        ],
        yd = ["$animate",
            function(a) {
                return function(c, d, e) {
                    c.$watch(e.ngShow, function(c) {
                        a[Qa(c) ? "removeClass" : "addClass"](d, "ng-hide")
                    })
                }
            }
        ],
        rd = ["$animate",
            function(a) {
                return function(c, d, e) {
                    c.$watch(e.ngHide, function(c) {
                        a[Qa(c) ? "addClass" : "removeClass"](d, "ng-hide")
                    })
                }
            }
        ],
        zd = va(function(a, c, d) {
            a.$watch(d.ngStyle, function(a, d) {
                d && a !== d && q(d, function(a, d) {
                    c.css(d, "")
                });
                a && c.css(a)
            }, !0)
        }),
        Ad = ["$animate",
            function(a) {
                return {
                    restrict: "EA",
                    require: "ngSwitch",
                    controller: ["$scope",
                        function() {
                            this.cases = {}
                        }
                    ],
                    link: function(c, d, e, g) {
                        var f, h, l, k = [];
                        c.$watch(e.ngSwitch || e.on, function(d) {
                            var n, p = k.length;
                            if (0 < p) {
                                if (l) {
                                    for (n = 0; n < p; n++) l[n].remove();
                                    l = null
                                }
                                l = [];
                                for (n = 0; n < p; n++) {
                                    var r = h[n];
                                    k[n].$destroy();
                                    l[n] = r;
                                    a.leave(r, function() {
                                        l.splice(n, 1);
                                        0 === l.length && (l = null)
                                    })
                                }
                            }
                            h = [];
                            k = [];
                            if (f = g.cases["!" + d] || g.cases["?"]) c.$eval(e.change), q(f, function(d) {
                                var e = c.$new();
                                k.push(e);
                                d.transclude(e, function(c) {
                                    var e = d.element;
                                    h.push(c);
                                    a.enter(c, e.parent(), e)
                                })
                            })
                        })
                    }
                }
            }
        ],
        Bd = va({
            transclude: "element",
            priority: 800,
            require: "^ngSwitch",
            link: function(a, c, d, e, g) {
                e.cases["!" + d.ngSwitchWhen] = e.cases["!" + d.ngSwitchWhen] || [];
                e.cases["!" + d.ngSwitchWhen].push({
                    transclude: g,
                    element: c
                })
            }
        }),
        Cd = va({
            transclude: "element",
            priority: 800,
            require: "^ngSwitch",
            link: function(a, c, d, e, g) {
                e.cases["?"] = e.cases["?"] || [];
                e.cases["?"].push({
                    transclude: g,
                    element: c
                })
            }
        }),
        Ed = va({
            link: function(a, c, d, e, g) {
                if (!g) throw t("ngTransclude")("orphan", ha(c));
                g(function(a) {
                    c.empty();
                    c.append(a)
                })
            }
        }),
        ed = ["$templateCache",
            function(a) {
                return {
                    restrict: "E",
                    terminal: !0,
                    compile: function(c, d) {
                        "text/ng-template" == d.type && a.put(d.id, c[0].text)
                    }
                }
            }
        ],
        Te = t("ngOptions"),
        Dd = aa({
            terminal: !0
        }),
        fd = ["$compile", "$parse",
            function(a, c) {
                var d = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,
                    e = {
                        $setViewValue: C
                    };
                return {
                    restrict: "E",
                    require: ["select", "?ngModel"],
                    controller: ["$element", "$scope", "$attrs",
                        function(a, c, d) {
                            var l = this,
                                k = {}, m = e,
                                n;
                            l.databound = d.ngModel;
                            l.init = function(a, c, d) {
                                m = a;
                                n = d
                            };
                            l.addOption = function(c) {
                                Aa(c, '"option value"');
                                k[c] = !0;
                                m.$viewValue == c && (a.val(c), n.parent() && n.remove())
                            };
                            l.removeOption = function(a) {
                                this.hasOption(a) && (delete k[a], m.$viewValue == a && this.renderUnknownOption(a))
                            };
                            l.renderUnknownOption = function(c) {
                                c = "? " + Ia(c) + " ?";
                                n.val(c);
                                a.prepend(n);
                                a.val(c);
                                n.prop("selected", !0)
                            };
                            l.hasOption = function(a) {
                                return k.hasOwnProperty(a)
                            };
                            c.$on("$destroy", function() {
                                l.renderUnknownOption = C
                            })
                        }
                    ],
                    link: function(e, f, h, l) {
                        function k(a, c, d, e) {
                            d.$render = function() {
                                var a = d.$viewValue;
                                e.hasOption(a) ? (A.parent() && A.remove(), c.val(a), "" === a && w.prop("selected", !0)) : E(a) && w ? c.val("") : e.renderUnknownOption(a)
                            };
                            c.on("change", function() {
                                a.$apply(function() {
                                    A.parent() && A.remove();
                                    d.$setViewValue(c.val())
                                })
                            })
                        }

                        function m(a, c, d) {
                            var e;
                            d.$render = function() {
                                var a = new Va(d.$viewValue);
                                q(c.find("option"), function(c) {
                                    c.selected = B(a.get(c.value))
                                })
                            };
                            a.$watch(function() {
                                xa(e, d.$viewValue) || (e = ba(d.$viewValue), d.$render())
                            });
                            c.on("change", function() {
                                a.$apply(function() {
                                    var a = [];
                                    q(c.find("option"), function(c) {
                                        c.selected && a.push(c.value)
                                    });
                                    d.$setViewValue(a)
                                })
                            })
                        }

                        function n(e, f, g) {
                            function h() {
                                var a = {
                                        "": []
                                    }, c = [""],
                                    d, k, s, t, z;
                                t = g.$modelValue;
                                z = y(e) || [];
                                var E = n ? Qb(z) : z,
                                    F, I, A;
                                I = {};
                                s = !1;
                                var D, H;
                                if (r)
                                    if (w && M(t))
                                        for (s = new Va([]), A = 0; A < t.length; A++) I[m] = t[A], s.put(w(e, I), t[A]);
                                    else s = new Va(t);
                                for (A = 0; F = E.length, A < F; A++) {
                                    k = A;
                                    if (n) {
                                        k = E[A];
                                        if ("$" === k.charAt(0)) continue;
                                        I[n] = k
                                    }
                                    I[m] = z[k];
                                    d = p(e, I) || "";
                                    (k = a[d]) || (k = a[d] = [], c.push(d));
                                    r ? d = B(s.remove(w ? w(e, I) : q(e, I))) : (w ? (d = {}, d[m] = t, d = w(e, d) === w(e, I)) : d = t === q(e, I), s = s || d);
                                    D = l(e, I);
                                    D = B(D) ? D : "";
                                    k.push({
                                        id: w ? w(e, I) : n ? E[A] : A,
                                        label: D,
                                        selected: d
                                    })
                                }
                                r || (u || null === t ? a[""].unshift({
                                    id: "",
                                    label: "",
                                    selected: !s
                                }) : s || a[""].unshift({
                                    id: "?",
                                    label: "",
                                    selected: !0
                                }));
                                I = 0;
                                for (E = c.length; I < E; I++) {
                                    d = c[I];
                                    k = a[d];
                                    x.length <= I ? (t = {
                                        element: C.clone().attr("label", d),
                                        label: k.label
                                    }, z = [t], x.push(z), f.append(t.element)) : (z = x[I], t = z[0], t.label != d && t.element.attr("label", t.label = d));
                                    D = null;
                                    A = 0;
                                    for (F = k.length; A < F; A++) s = k[A], (d = z[A + 1]) ? (D = d.element, d.label !== s.label && D.text(d.label = s.label), d.id !== s.id && D.val(d.id = s.id), d.selected !== s.selected && D.prop("selected", d.selected = s.selected)) : ("" === s.id && u ? H = u : (H = v.clone()).val(s.id).attr("selected", s.selected).text(s.label), z.push({
                                        element: H,
                                        label: s.label,
                                        id: s.id,
                                        selected: s.selected
                                    }), D ? D.after(H) : t.element.append(H), D = H);
                                    for (A++; z.length > A;) z.pop().element.remove()
                                }
                                for (; x.length > I;) x.pop()[0].element.remove()
                            }
                            var k;
                            if (!(k = t.match(d))) throw Te("iexp", t, ha(f));
                            var l = c(k[2] || k[1]),
                                m = k[4] || k[6],
                                n = k[5],
                                p = c(k[3] || ""),
                                q = c(k[2] ? k[1] : m),
                                y = c(k[7]),
                                w = k[8] ? c(k[8]) : null,
                                x = [
                                    [{
                                        element: f,
                                        label: ""
                                    }]
                                ];
                            u && (a(u)(e), u.removeClass("ng-scope"), u.remove());
                            f.empty();
                            f.on("change", function() {
                                e.$apply(function() {
                                    var a, c = y(e) || [],
                                        d = {}, h, k, l, p, t, v, u;
                                    if (r)
                                        for (k = [], p = 0, v = x.length; p < v; p++)
                                            for (a = x[p], l = 1, t = a.length; l < t; l++) {
                                                if ((h = a[l].element)[0].selected) {
                                                    h = h.val();
                                                    n && (d[n] = h);
                                                    if (w)
                                                        for (u = 0; u < c.length && (d[m] = c[u], w(e, d) != h); u++);
                                                    else d[m] = c[h];
                                                    k.push(q(e, d))
                                                }
                                            } else {
                                        h = f.val();
                                        if ("?" == h) k = s;
                                        else if ("" === h) k = null;
                                        else if (w)
                                            for (u = 0; u < c.length; u++) {
                                                if (d[m] = c[u], w(e, d) == h) {
                                                    k = q(e, d);
                                                    break
                                                }
                                            } else d[m] = c[h], n && (d[n] = h), k = q(e, d);
                                        1 < x[0].length && x[0][1].id !== h && (x[0][1].selected = !1)
                                    }
                                    g.$setViewValue(k)
                                })
                            });
                            g.$render = h;
                            e.$watch(h)
                        }
                        if (l[1]) {
                            var p = l[0];
                            l = l[1];
                            var r = h.multiple,
                                t = h.ngOptions,
                                u = !1,
                                w, v = y(U.createElement("option")),
                                C = y(U.createElement("optgroup")),
                                A = v.clone();
                            h = 0;
                            for (var x = f.children(), D = x.length; h < D; h++)
                                if ("" === x[h].value) {
                                    w = u = x.eq(h);
                                    break
                                }
                            p.init(l, u, A);
                            r && (l.$isEmpty = function(a) {
                                return !a || 0 === a.length
                            });
                            t ? n(e, f, l) : r ? m(e, f, l) : k(e, f, l, p)
                        }
                    }
                }
            }
        ],
        hd = ["$interpolate",
            function(a) {
                var c = {
                    addOption: C,
                    removeOption: C
                };
                return {
                    restrict: "E",
                    priority: 100,
                    compile: function(d, e) {
                        if (E(e.value)) {
                            var g = a(d.text(), !0);
                            g || e.$set("value", d.text())
                        }
                        return function(a, d, e) {
                            var k = d.parent(),
                                m = k.data("$selectController") || k.parent().data("$selectController");
                            m && m.databound ? d.prop("selected", !1) : m = c;
                            g ? a.$watch(g, function(a, c) {
                                e.$set("value", a);
                                a !== c && m.removeOption(c);
                                m.addOption(a)
                            }) : m.addOption(e.value);
                            d.on("$destroy", function() {
                                m.removeOption(e.value)
                            })
                        }
                    }
                }
            }
        ],
        gd = aa({
            restrict: "E",
            terminal: !0
        });
    O.angular.bootstrap ? console.log("WARNING: Tried to load angular more than once.") : ((Ga = O.jQuery) ? (y = Ga, D(Ga.fn, {
        scope: Ja.scope,
        isolateScope: Ja.isolateScope,
        controller: Ja.controller,
        injector: Ja.injector,
        inheritedData: Ja.inheritedData
    }), Ab("remove", !0, !0, !1), Ab("empty", !1, !1, !1), Ab("html", !1, !1, !0)) : y = N, Ea.element = y, Zc(Ea), y(U).ready(function() {
        Wc(U, $b)
    }))
})(window, document);
!angular.$$csp() && angular.element(document).find("head").prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide{display:none !important;}ng\\:form{display:block;}.ng-animate-block-transitions{transition:0s all!important;-webkit-transition:0s all!important;}</style>');
(function(y, w, z) {
    'use strict';

    function u(f, a, c) {
        r.directive(f, ["$parse", "$swipe",
            function(m, p) {
                var q = 75,
                    g = 0.3,
                    e = 30;
                return function(h, n, l) {
                    function k(d) {
                        if (!b) return !1;
                        var s = Math.abs(d.y - b.y);
                        d = (d.x - b.x) * a;
                        return v && s < q && 0 < d && d > e && s / d < g
                    }
                    var s = m(l[f]),
                        b, v;
                    p.bind(n, {
                        start: function(d, s) {
                            b = d;
                            v = !0
                        },
                        cancel: function(b) {
                            v = !1
                        },
                        end: function(b, a) {
                            k(b) && h.$apply(function() {
                                n.triggerHandler(c);
                                s(h, {
                                    $event: a
                                })
                            })
                        }
                    })
                }
            }
        ])
    }
    var r = w.module("ngTouch", []);
    r.factory("$swipe", [
        function() {
            function f(a) {
                var c = a.touches && a.touches.length ? a.touches : [a];
                a = a.changedTouches && a.changedTouches[0] || a.originalEvent && a.originalEvent.changedTouches && a.originalEvent.changedTouches[0] || c[0].originalEvent || c[0];
                return {
                    x: a.clientX,
                    y: a.clientY
                }
            }
            return {
                bind: function(a, c) {
                    var m, p, q, g, e = !1;
                    a.on("touchstart mousedown", function(a) {
                        q = f(a);
                        e = !0;
                        p = m = 0;
                        g = q;
                        c.start && c.start(q, a)
                    });
                    a.on("touchcancel", function(a) {
                        e = !1;
                        c.cancel && c.cancel(a)
                    });
                    a.on("touchmove mousemove", function(a) {
                        if (e && q) {
                            var n = f(a);
                            m += Math.abs(n.x - g.x);
                            p += Math.abs(n.y - g.y);
                            g = n;
                            10 > m && 10 > p || (p > m ? (e = !1, c.cancel && c.cancel(a)) : (a.preventDefault(), c.move && c.move(n, a)))
                        }
                    });
                    a.on("touchend mouseup", function(a) {
                        e && (e = !1, c.end && c.end(f(a), a))
                    })
                }
            }
        }
    ]);
    r.config(["$provide",
        function(f) {
            f.decorator("ngClickDirective", ["$delegate",
                function(a) {
                    a.shift();
                    return a
                }
            ])
        }
    ]);
    r.directive("ngClick", ["$parse", "$timeout", "$rootElement",
        function(f, a, c) {
            function m(a, b, c) {
                for (var d = 0; d < a.length; d += 2)
                    if (Math.abs(a[d] - b) < e && Math.abs(a[d + 1] - c) < e) return a.splice(d, d + 2), !0;
                return !1
            }

            function p(a) {
                if (!(Date.now() - n > g)) {
                    var b = a.touches && a.touches.length ? a.touches : [a],
                        c = b[0].clientX,
                        b = b[0].clientY;
                    1 > c && 1 > b || k && k[0] === c && k[1] === b || (k && (k = null), "label" === a.target.tagName.toLowerCase() && (k = [c, b]), m(l, c, b) || (a.stopPropagation(), a.preventDefault(), a.target && a.target.blur()))
                }
            }

            function q(c) {
                c = c.touches && c.touches.length ? c.touches : [c];
                var b = c[0].clientX,
                    e = c[0].clientY;
                l.push(b, e);
                a(function() {
                    for (var a = 0; a < l.length; a += 2)
                        if (l[a] == b && l[a + 1] == e) {
                            l.splice(a, a + 2);
                            break
                        }
                }, g, !1)
            }
            var g = 2500,
                e = 25,
                h = "ng-click-active",
                n, l, k;
            return function(a, b, e) {
                function d() {
                    k = !1;
                    b.removeClass(h)
                }
                var g = f(e.ngClick),
                    k = !1,
                    t, r, u, x;
                b.on("touchstart", function(a) {
                    k = !0;
                    t = a.target ? a.target : a.srcElement;
                    3 == t.nodeType && (t = t.parentNode);
                    b.addClass(h);
                    r = Date.now();
                    a = a.touches && a.touches.length ? a.touches : [a];
                    a = a[0].originalEvent || a[0];
                    u = a.clientX;
                    x = a.clientY
                });
                b.on("touchmove", function(a) {
                    d()
                });
                b.on("touchcancel", function(a) {
                    d()
                });
                b.on("touchend", function(a) {
                    var g = Date.now() - r,
                        f = a.changedTouches && a.changedTouches.length ? a.changedTouches : a.touches && a.touches.length ? a.touches : [a],
                        h = f[0].originalEvent || f[0],
                        f = h.clientX,
                        h = h.clientY,
                        s = Math.sqrt(Math.pow(f - u, 2) + Math.pow(h - x, 2));
                    k && (750 > g && 12 > s) && (l || (c[0].addEventListener("click", p, !0), c[0].addEventListener("touchstart", q, !0), l = []), n = Date.now(), m(l, f, h), t && t.blur(), w.isDefined(e.disabled) && !1 !== e.disabled || b.triggerHandler("click", [a]));
                    d()
                });
                b.onclick = function(a) {};
                b.on("click", function(b, c) {
                    a.$apply(function() {
                        g(a, {
                            $event: c || b
                        })
                    })
                });
                b.on("mousedown", function(a) {
                    b.addClass(h)
                });
                b.on("mousemove mouseup", function(a) {
                    b.removeClass(h)
                })
            }
        }
    ]);
    u("ngSwipeLeft", -1, "swipeleft");
    u("ngSwipeRight", 1, "swiperight")
})(window, window.angular);
(function(p, h, q) {
    'use strict';

    function E(a) {
        var e = [];
        s(e, h.noop).chars(a);
        return e.join("")
    }

    function k(a) {
        var e = {};
        a = a.split(",");
        var d;
        for (d = 0; d < a.length; d++) e[a[d]] = !0;
        return e
    }

    function F(a, e) {
        function d(a, b, d, g) {
            b = h.lowercase(b);
            if (t[b])
                for (; f.last() && u[f.last()];) c("", f.last());
            v[b] && f.last() == b && c("", b);
            (g = w[b] || !! g) || f.push(b);
            var l = {};
            d.replace(G, function(a, b, e, c, d) {
                l[b] = r(e || c || d || "")
            });
            e.start && e.start(b, l, g)
        }

        function c(a, b) {
            var c = 0,
                d;
            if (b = h.lowercase(b))
                for (c = f.length - 1; 0 <= c && f[c] != b; c--);
            if (0 <= c) {
                for (d = f.length - 1; d >= c; d--) e.end && e.end(f[d]);
                f.length = c
            }
        }
        var b, g, f = [],
            l = a;
        for (f.last = function() {
            return f[f.length - 1]
        }; a;) {
            g = !0;
            if (f.last() && x[f.last()]) a = a.replace(RegExp("(.*)<\\s*\\/\\s*" + f.last() + "[^>]*>", "i"), function(b, a) {
                a = a.replace(H, "$1").replace(I, "$1");
                e.chars && e.chars(r(a));
                return ""
            }), c("", f.last());
            else {
                if (0 === a.indexOf("\x3c!--")) b = a.indexOf("--", 4), 0 <= b && a.lastIndexOf("--\x3e", b) === b && (e.comment && e.comment(a.substring(4, b)), a = a.substring(b + 3), g = !1);
                else if (y.test(a)) {
                    if (b = a.match(y)) a = a.replace(b[0], ""), g = !1
                } else if (J.test(a)) {
                    if (b = a.match(z)) a = a.substring(b[0].length), b[0].replace(z, c), g = !1
                } else K.test(a) && (b = a.match(A)) && (a = a.substring(b[0].length), b[0].replace(A, d), g = !1);
                g && (b = a.indexOf("<"), g = 0 > b ? a : a.substring(0, b), a = 0 > b ? "" : a.substring(b), e.chars && e.chars(r(g)))
            } if (a == l) throw L("badparse", a);
            l = a
        }
        c()
    }

    function r(a) {
        if (!a) return "";
        var e = M.exec(a);
        a = e[1];
        var d = e[3];
        if (e = e[2]) n.innerHTML = e.replace(/</g, "&lt;"), e = "textContent" in n ? n.textContent : n.innerText;
        return a + e + d
    }

    function B(a) {
        return a.replace(/&/g, "&amp;").replace(N, function(a) {
            return "&#" + a.charCodeAt(0) + ";"
        }).replace(/</g, "&lt;").replace(/>/g, "&gt;")
    }

    function s(a, e) {
        var d = !1,
            c = h.bind(a, a.push);
        return {
            start: function(a, g, f) {
                a = h.lowercase(a);
                !d && x[a] && (d = a);
                d || !0 !== C[a] || (c("<"), c(a), h.forEach(g, function(d, f) {
                    var g = h.lowercase(f),
                        k = "img" === a && "src" === g || "background" === g;
                    !0 !== O[g] || !0 === D[g] && !e(d, k) || (c(" "), c(f), c('="'), c(B(d)), c('"'))
                }), c(f ? "/>" : ">"))
            },
            end: function(a) {
                a = h.lowercase(a);
                d || !0 !== C[a] || (c("</"), c(a), c(">"));
                a == d && (d = !1)
            },
            chars: function(a) {
                d || c(B(a))
            }
        }
    }
    var L = h.$$minErr("$sanitize"),
        A = /^<\s*([\w:-]+)((?:\s+[\w:-]+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)\s*>/,
        z = /^<\s*\/\s*([\w:-]+)[^>]*>/,
        G = /([\w:-]+)(?:\s*=\s*(?:(?:"((?:[^"])*)")|(?:'((?:[^'])*)')|([^>\s]+)))?/g,
        K = /^</,
        J = /^<\s*\//,
        H = /\x3c!--(.*?)--\x3e/g,
        y = /<!DOCTYPE([^>]*?)>/i,
        I = /<!\[CDATA\[(.*?)]]\x3e/g,
        N = /([^\#-~| |!])/g,
        w = k("area,br,col,hr,img,wbr");
    p = k("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr");
    q = k("rp,rt");
    var v = h.extend({}, q, p),
        t = h.extend({}, p, k("address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul")),
        u = h.extend({}, q, k("a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var")),
        x = k("script,style"),
        C = h.extend({}, w, t, u, v),
        D = k("background,cite,href,longdesc,src,usemap"),
        O = h.extend({}, D, k("abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,span,start,summary,target,title,type,valign,value,vspace,width")),
        n = document.createElement("pre"),
        M = /^(\s*)([\s\S]*?)(\s*)$/;
    h.module("ngSanitize", []).provider("$sanitize", function() {
        this.$get = ["$$sanitizeUri",
            function(a) {
                return function(e) {
                    var d = [];
                    F(e, s(d, function(c, b) {
                        return !/^unsafe/.test(a(c, b))
                    }));
                    return d.join("")
                }
            }
        ]
    });
    h.module("ngSanitize").filter("linky", ["$sanitize",
        function(a) {
            var e = /((ftp|https?):\/\/|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>]/,
                d = /^mailto:/;
            return function(c, b) {
                function g(a) {
                    a && m.push(E(a))
                }

                function f(a, c) {
                    m.push("<a ");
                    h.isDefined(b) && (m.push('target="'), m.push(b), m.push('" '));
                    m.push('href="');
                    m.push(a);
                    m.push('">');
                    g(c);
                    m.push("</a>")
                }
                if (!c) return c;
                for (var l, k = c, m = [], n, p; l = k.match(e);) n = l[0], l[2] == l[3] && (n = "mailto:" + n), p = l.index, g(k.substr(0, p)), f(n, l[0].replace(d, "")), k = k.substring(p + l[0].length);
                g(k);
                return a(m.join(""))
            }
        }
    ])
})(window, window.angular);
(function(n, e, A) {
    'use strict';

    function x(s, g, k) {
        return {
            restrict: "ECA",
            terminal: !0,
            priority: 400,
            transclude: "element",
            link: function(a, c, b, f, w) {
                function y() {
                    p && (p.remove(), p = null);
                    h && (h.$destroy(), h = null);
                    l && (k.leave(l, function() {
                        p = null
                    }), p = l, l = null)
                }

                function v() {
                    var b = s.current && s.current.locals;
                    if (e.isDefined(b && b.$template)) {
                        var b = a.$new(),
                            d = s.current;
                        l = w(b, function(d) {
                            k.enter(d, null, l || c, function() {
                                !e.isDefined(t) || t && !a.$eval(t) || g()
                            });
                            y()
                        });
                        h = d.scope = b;
                        h.$emit("$viewContentLoaded");
                        h.$eval(u)
                    } else y()
                }
                var h, l, p, t = b.autoscroll,
                    u = b.onload || "";
                a.$on("$routeChangeSuccess", v);
                v()
            }
        }
    }

    function z(e, g, k) {
        return {
            restrict: "ECA",
            priority: -400,
            link: function(a, c) {
                var b = k.current,
                    f = b.locals;
                c.html(f.$template);
                var w = e(c.contents());
                b.controller && (f.$scope = a, f = g(b.controller, f), b.controllerAs && (a[b.controllerAs] = f), c.data("$ngControllerController", f), c.children().data("$ngControllerController", f));
                w(a)
            }
        }
    }
    n = e.module("ngRoute", ["ng"]).provider("$route", function() {
        function s(a, c) {
            return e.extend(new(e.extend(function() {}, {
                prototype: a
            })), c)
        }

        function g(a, e) {
            var b = e.caseInsensitiveMatch,
                f = {
                    originalPath: a,
                    regexp: a
                }, k = f.keys = [];
            a = a.replace(/([().])/g, "\\$1").replace(/(\/)?:(\w+)([\?\*])?/g, function(a, e, b, c) {
                a = "?" === c ? c : null;
                c = "*" === c ? c : null;
                k.push({
                    name: b,
                    optional: !! a
                });
                e = e || "";
                return "" + (a ? "" : e) + "(?:" + (a ? e : "") + (c && "(.+?)" || "([^/]+)") + (a || "") + ")" + (a || "")
            }).replace(/([\/$\*])/g, "\\$1");
            f.regexp = RegExp("^" + a + "$", b ? "i" : "");
            return f
        }
        var k = {};
        this.when = function(a, c) {
            k[a] = e.extend({
                reloadOnSearch: !0
            }, c, a && g(a, c));
            if (a) {
                var b = "/" == a[a.length - 1] ? a.substr(0, a.length - 1) : a + "/";
                k[b] = e.extend({
                    redirectTo: a
                }, g(b, c))
            }
            return this
        };
        this.otherwise = function(a) {
            this.when(null, a);
            return this
        };
        this.$get = ["$rootScope", "$location", "$routeParams", "$q", "$injector", "$http", "$templateCache", "$sce",
            function(a, c, b, f, g, n, v, h) {
                function l() {
                    var d = p(),
                        m = r.current;
                    if (d && m && d.$$route === m.$$route && e.equals(d.pathParams, m.pathParams) && !d.reloadOnSearch && !u) m.params = d.params, e.copy(m.params, b), a.$broadcast("$routeUpdate", m);
                    else if (d || m) u = !1, a.$broadcast("$routeChangeStart", d, m), (r.current = d) && d.redirectTo && (e.isString(d.redirectTo) ? c.path(t(d.redirectTo, d.params)).search(d.params).replace() : c.url(d.redirectTo(d.pathParams, c.path(), c.search())).replace()), f.when(d).then(function() {
                        if (d) {
                            var a = e.extend({}, d.resolve),
                                c, b;
                            e.forEach(a, function(d, c) {
                                a[c] = e.isString(d) ? g.get(d) : g.invoke(d)
                            });
                            e.isDefined(c = d.template) ? e.isFunction(c) && (c = c(d.params)) : e.isDefined(b = d.templateUrl) && (e.isFunction(b) && (b = b(d.params)), b = h.getTrustedResourceUrl(b), e.isDefined(b) && (d.loadedTemplateUrl = b, c = n.get(b, {
                                cache: v
                            }).then(function(a) {
                                    return a.data
                                })));
                            e.isDefined(c) && (a.$template = c);
                            return f.all(a)
                        }
                    }).then(function(c) {
                            d == r.current && (d && (d.locals = c, e.copy(d.params, b)), a.$broadcast("$routeChangeSuccess", d, m))
                        }, function(c) {
                            d == r.current && a.$broadcast("$routeChangeError", d, m, c)
                        })
                }

                function p() {
                    var a, b;
                    e.forEach(k, function(f, k) {
                        var q;
                        if (q = !b) {
                            var g = c.path();
                            q = f.keys;
                            var l = {};
                            if (f.regexp)
                                if (g = f.regexp.exec(g)) {
                                    for (var h = 1, p = g.length; h < p; ++h) {
                                        var n = q[h - 1],
                                            r = "string" == typeof g[h] ? decodeURIComponent(g[h]) : g[h];
                                        n && r && (l[n.name] = r)
                                    }
                                    q = l
                                } else q = null;
                            else q = null;
                            q = a = q
                        }
                        q && (b = s(f, {
                            params: e.extend({}, c.search(), a),
                            pathParams: a
                        }), b.$$route = f)
                    });
                    return b || k[null] && s(k[null], {
                        params: {},
                        pathParams: {}
                    })
                }

                function t(a, c) {
                    var b = [];
                    e.forEach((a || "").split(":"), function(a, d) {
                        if (0 === d) b.push(a);
                        else {
                            var e = a.match(/(\w+)(.*)/),
                                f = e[1];
                            b.push(c[f]);
                            b.push(e[2] || "");
                            delete c[f]
                        }
                    });
                    return b.join("")
                }
                var u = !1,
                    r = {
                        routes: k,
                        reload: function() {
                            u = !0;
                            a.$evalAsync(l)
                        }
                    };
                a.$on("$locationChangeSuccess", l);
                return r
            }
        ]
    });
    n.provider("$routeParams", function() {
        this.$get = function() {
            return {}
        }
    });
    n.directive("ngView", x);
    n.directive("ngView", z);
    x.$inject = ["$route", "$anchorScroll", "$animate"];
    z.$inject = ["$compile", "$controller", "$route"]
})(window, window.angular);
(function(p, f, n) {
    'use strict';
    f.module("ngCookies", ["ng"]).factory("$cookies", ["$rootScope", "$browser",
        function(e, b) {
            var c = {}, g = {}, h, k = !1,
                l = f.copy,
                m = f.isUndefined;
            b.addPollFn(function() {
                var a = b.cookies();
                h != a && (h = a, l(a, g), l(a, c), k && e.$apply())
            })();
            k = !0;
            e.$watch(function() {
                var a, d, e;
                for (a in g) m(c[a]) && b.cookies(a, n);
                for (a in c) d = c[a], f.isString(d) || (d = "" + d, c[a] = d), d !== g[a] && (b.cookies(a, d), e = !0);
                if (e)
                    for (a in d = b.cookies(), c) c[a] !== d[a] && (m(d[a]) ? delete c[a] : c[a] = d[a])
            });
            return c
        }
    ]).factory("$cookieStore", ["$cookies",
        function(e) {
            return {
                get: function(b) {
                    return (b = e[b]) ? f.fromJson(b) : b
                },
                put: function(b, c) {
                    e[b] = f.toJson(c)
                },
                remove: function(b) {
                    delete e[b]
                }
            }
        }
    ])
})(window, window.angular);
(function(s, g, P) {
    'use strict';
    g.module("ngAnimate", ["ng"]).factory("$$animateReflow", ["$$rAF", "$document",
        function(g, s) {
            return function(e) {
                return g(function() {
                    e()
                })
            }
        }
    ]).config(["$provide", "$animateProvider",
        function(ga, G) {
            function e(e) {
                for (var p = 0; p < e.length; p++) {
                    var g = e[p];
                    if (g.nodeType == ba) return g
                }
            }

            function u(p) {
                return g.element(e(p))
            }
            var m = g.noop,
                p = g.forEach,
                Q = G.$$selectors,
                ba = 1,
                h = "$$ngAnimateState",
                J = "ng-animate",
                r = {
                    running: !0
                };
            ga.decorator("$animate", ["$delegate", "$injector", "$sniffer", "$rootElement", "$$asyncCallback", "$rootScope", "$document",
                function(t, s, aa, K, E, H, P) {
                    function R(a) {
                        if (a) {
                            var b = [],
                                c = {};
                            a = a.substr(1).split(".");
                            (aa.transitions || aa.animations) && b.push(s.get(Q[""]));
                            for (var d = 0; d < a.length; d++) {
                                var f = a[d],
                                    e = Q[f];
                                e && !c[f] && (b.push(s.get(e)), c[f] = !0)
                            }
                            return b
                        }
                    }

                    function L(a, b, c) {
                        function d(a, b) {
                            var c = a[b],
                                d = a["before" + b.charAt(0).toUpperCase() + b.substr(1)];
                            if (c || d) return "leave" == b && (d = c, c = null), A.push({
                                event: b,
                                fn: c
                            }), l.push({
                                event: b,
                                fn: d
                            }), !0
                        }

                        function f(b, d, e) {
                            var f = [];
                            p(b, function(a) {
                                a.fn && f.push(a)
                            });
                            var n = 0;
                            p(f, function(b, p) {
                                var C = function() {
                                    a: {
                                        if (d) {
                                            (d[p] || m)();
                                            if (++n < f.length) break a;
                                            d = null
                                        }
                                        e()
                                    }
                                };
                                switch (b.event) {
                                    case "setClass":
                                        d.push(b.fn(a, q, y, C));
                                        break;
                                    case "addClass":
                                        d.push(b.fn(a, q || c, C));
                                        break;
                                    case "removeClass":
                                        d.push(b.fn(a, y || c, C));
                                        break;
                                    default:
                                        d.push(b.fn(a, C))
                                }
                            });
                            d && 0 === d.length && e()
                        }
                        var e = a[0];
                        if (e) {
                            var h = "setClass" == b,
                                r = h || "addClass" == b || "removeClass" == b,
                                q, y;
                            g.isArray(c) && (q = c[0], y = c[1], c = q + " " + y);
                            var z = a.attr("class") + " " + c;
                            if (T(z)) {
                                var v = m,
                                    w = [],
                                    l = [],
                                    x = m,
                                    n = [],
                                    A = [],
                                    z = (" " + z).replace(/\s+/g, ".");
                                p(R(z), function(a) {
                                    !d(a, b) && h && (d(a, "addClass"), d(a, "removeClass"))
                                });
                                return {
                                    node: e,
                                    event: b,
                                    className: c,
                                    isClassBased: r,
                                    isSetClassOperation: h,
                                    before: function(a) {
                                        v = a;
                                        f(l, w, function() {
                                            v = m;
                                            a()
                                        })
                                    },
                                    after: function(a) {
                                        x = a;
                                        f(A, n, function() {
                                            x = m;
                                            a()
                                        })
                                    },
                                    cancel: function() {
                                        w && (p(w, function(a) {
                                            (a || m)(!0)
                                        }), v(!0));
                                        n && (p(n, function(a) {
                                            (a || m)(!0)
                                        }), x(!0))
                                    }
                                }
                            }
                        }
                    }

                    function F(a, b, c, d, f, e, r) {
                        function m(d) {
                            var e = "$animate:" + d;
                            x && (x[e] && 0 < x[e].length) && E(function() {
                                c.triggerHandler(e, {
                                    event: a,
                                    className: b
                                })
                            })
                        }

                        function q() {
                            m("before")
                        }

                        function y() {
                            m("after")
                        }

                        function z() {
                            m("close");
                            r && E(function() {
                                r()
                            })
                        }

                        function v() {
                            v.hasBeenRun || (v.hasBeenRun = !0, e())
                        }

                        function w() {
                            if (!w.hasBeenRun) {
                                w.hasBeenRun = !0;
                                var d = c.data(h);
                                d && (l && l.isClassBased ? B(c, b) : (E(function() {
                                    var d = c.data(h) || {};
                                    t == d.index && B(c, b, a)
                                }), c.data(h, d)));
                                z()
                            }
                        }
                        var l = L(c, a, b);
                        if (l) {
                            b = l.className;
                            var x = g.element._data(l.node),
                                x = x && x.events;
                            d || (d = f ? f.parent() : c.parent());
                            var n = c.data(h) || {};
                            f = n.active || {};
                            var A = n.totalActive || 0,
                                C = n.last;
                            if (l.isClassBased && (n.disabled || C && !C.isClassBased) || N(c, d)) v(), q(), y(), w();
                            else {
                                d = !1;
                                if (0 < A) {
                                    n = [];
                                    if (l.isClassBased) "setClass" == C.event ? (n.push(C), B(c, b)) : f[b] && (s = f[b], s.event == a ? d = !0 : (n.push(s), B(c, b)));
                                    else if ("leave" == a && f["ng-leave"]) d = !0;
                                    else {
                                        for (var s in f) n.push(f[s]), B(c, s);
                                        f = {};
                                        A = 0
                                    }
                                    0 < n.length && p(n, function(a) {
                                        a.cancel()
                                    })
                                }!l.isClassBased || (l.isSetClassOperation || d) || (d = "addClass" == a == c.hasClass(b));
                                if (d) q(), y(), z();
                                else {
                                    if ("leave" == a) c.one("$destroy", function(a) {
                                        a = g.element(this);
                                        var b = a.data(h);
                                        b && (b = b.active["ng-leave"]) && (b.cancel(), B(a, "ng-leave"))
                                    });
                                    c.addClass(J);
                                    var t = O++;
                                    A++;
                                    f[b] = l;
                                    c.data(h, {
                                        last: l,
                                        active: f,
                                        index: t,
                                        totalActive: A
                                    });
                                    q();
                                    l.before(function(d) {
                                        var e = c.data(h);
                                        d = d || !e || !e.active[b] || l.isClassBased && e.active[b].event != a;
                                        v();
                                        !0 === d ? w() : (y(), l.after(w))
                                    })
                                }
                            }
                        } else v(), q(), y(), w()
                    }

                    function U(a) {
                        if (a = e(a)) a = g.isFunction(a.getElementsByClassName) ? a.getElementsByClassName(J) : a.querySelectorAll("." + J), p(a, function(a) {
                            a = g.element(a);
                            (a = a.data(h)) && a.active && p(a.active, function(a) {
                                a.cancel()
                            })
                        })
                    }

                    function B(a, b) {
                        if (e(a) == e(K)) r.disabled || (r.running = !1, r.structural = !1);
                        else if (b) {
                            var c = a.data(h) || {}, d = !0 === b;
                            !d && (c.active && c.active[b]) && (c.totalActive--, delete c.active[b]);
                            if (d || !c.totalActive) a.removeClass(J), a.removeData(h)
                        }
                    }

                    function N(a, b) {
                        if (r.disabled) return !0;
                        if (e(a) == e(K)) return r.disabled || r.running;
                        do {
                            if (0 === b.length) break;
                            var c = e(b) == e(K),
                                d = c ? r : b.data(h),
                                d = d && ( !! d.disabled || d.running || 0 < d.totalActive);
                            if (c || d) return d;
                            if (c) break
                        } while (b = b.parent());
                        return !0
                    }
                    var O = 0;
                    K.data(h, r);
                    H.$$postDigest(function() {
                        H.$$postDigest(function() {
                            r.running = !1
                        })
                    });
                    var V = G.classNameFilter(),
                        T = V ? function(a) {
                            return V.test(a)
                        } : function() {
                            return !0
                        };
                    return {
                        enter: function(a, b, c, d) {
                            this.enabled(!1, a);
                            t.enter(a, b, c);
                            H.$$postDigest(function() {
                                a = u(a);
                                F("enter", "ng-enter", a, b, c, m, d)
                            })
                        },
                        leave: function(a, b) {
                            U(a);
                            this.enabled(!1, a);
                            H.$$postDigest(function() {
                                F("leave", "ng-leave", u(a), null, null, function() {
                                    t.leave(a)
                                }, b)
                            })
                        },
                        move: function(a, b, c, d) {
                            U(a);
                            this.enabled(!1, a);
                            t.move(a, b, c);
                            H.$$postDigest(function() {
                                a = u(a);
                                F("move", "ng-move", a, b, c, m, d)
                            })
                        },
                        addClass: function(a, b, c) {
                            a = u(a);
                            F("addClass", b, a, null, null, function() {
                                t.addClass(a, b)
                            }, c)
                        },
                        removeClass: function(a, b, c) {
                            a = u(a);
                            F("removeClass", b, a, null, null, function() {
                                t.removeClass(a, b)
                            }, c)
                        },
                        setClass: function(a, b, c, d) {
                            a = u(a);
                            F("setClass", [b, c], a, null, null, function() {
                                t.setClass(a, b, c)
                            }, d)
                        },
                        enabled: function(a, b) {
                            switch (arguments.length) {
                                case 2:
                                    if (a) B(b);
                                    else {
                                        var c = b.data(h) || {};
                                        c.disabled = !0;
                                        b.data(h, c)
                                    }
                                    break;
                                case 1:
                                    r.disabled = !a;
                                    break;
                                default:
                                    a = !r.disabled
                            }
                            return !!a
                        }
                    }
                }
            ]);
            G.register("", ["$window", "$sniffer", "$timeout", "$$animateReflow",
                function(h, r, u, K) {
                    function E(a, k) {
                        S && S();
                        W.push(k);
                        S = K(function() {
                            p(W, function(a) {
                                a()
                            });
                            W = [];
                            S = null;
                            M = {}
                        })
                    }

                    function H(a, k) {
                        var b = e(a);
                        a = g.element(b);
                        Y.push(a);
                        b = Date.now() + k;
                        b <= fa || (u.cancel(ea), fa = b, ea = u(function() {
                            J(Y);
                            Y = []
                        }, k, !1))
                    }

                    function J(a) {
                        p(a, function(a) {
                            (a = a.data(n)) && (a.closeAnimationFn || m)()
                        })
                    }

                    function R(a, k) {
                        var b = k ? M[k] : null;
                        if (!b) {
                            var c = 0,
                                d = 0,
                                e = 0,
                                f = 0,
                                n, Z, $, g;
                            p(a, function(a) {
                                if (a.nodeType == ba) {
                                    a = h.getComputedStyle(a) || {};
                                    $ = a[I + z];
                                    c = Math.max(L($), c);
                                    g = a[I + v];
                                    n = a[I + w];
                                    d = Math.max(L(n), d);
                                    Z = a[q + w];
                                    f = Math.max(L(Z), f);
                                    var k = L(a[q + z]);
                                    0 < k && (k *= parseInt(a[q + l], 10) || 1);
                                    e = Math.max(k, e)
                                }
                            });
                            b = {
                                total: 0,
                                transitionPropertyStyle: g,
                                transitionDurationStyle: $,
                                transitionDelayStyle: n,
                                transitionDelay: d,
                                transitionDuration: c,
                                animationDelayStyle: Z,
                                animationDelay: f,
                                animationDuration: e
                            };
                            k && (M[k] = b)
                        }
                        return b
                    }

                    function L(a) {
                        var k = 0;
                        a = g.isString(a) ? a.split(/\s*,\s*/) : [];
                        p(a, function(a) {
                            k = Math.max(parseFloat(a) || 0, k)
                        });
                        return k
                    }

                    function F(a) {
                        var k = a.parent(),
                            b = k.data(x);
                        b || (k.data(x, ++da), b = da);
                        return b + "-" + e(a).getAttribute("class")
                    }

                    function U(a, k, b, c) {
                        var d = F(k),
                            f = d + " " + b,
                            p = M[f] ? ++M[f].total : 0,
                            g = {};
                        if (0 < p) {
                            var h = b + "-stagger",
                                g = d + " " + h;
                            (d = !M[g]) && k.addClass(h);
                            g = R(k, g);
                            d && k.removeClass(h)
                        }
                        c = c || function(a) {
                            return a()
                        };
                        k.addClass(b);
                        var h = k.data(n) || {}, l = c(function() {
                            return R(k, f)
                        });
                        c = l.transitionDuration;
                        d = l.animationDuration;
                        if (0 === c && 0 === d) return k.removeClass(b), !1;
                        k.data(n, {
                            running: h.running || 0,
                            itemIndex: p,
                            stagger: g,
                            timings: l,
                            closeAnimationFn: m
                        });
                        a = 0 < h.running || "setClass" == a;
                        0 < c && B(k, b, a);
                        0 < d && (0 < g.animationDelay && 0 === g.animationDuration) && (e(k).style[q] = "none 0s");
                        return !0
                    }

                    function B(a, b, c) {
                        "ng-enter" != b && ("ng-move" != b && "ng-leave" != b) && c ? a.addClass(A) : e(a).style[I + v] = "none"
                    }

                    function N(a, b) {
                        var c = I + v,
                            d = e(a);
                        d.style[c] && 0 < d.style[c].length && (d.style[c] = "");
                        a.removeClass(A)
                    }

                    function O(a) {
                        var b = q;
                        a = e(a);
                        a.style[b] && 0 < a.style[b].length && (a.style[b] = "")
                    }

                    function V(a, b, c, f) {
                        function g(a) {
                            b.off(z, h);
                            b.removeClass(r);
                            d(b, c);
                            a = e(b);
                            for (var X in u) a.style.removeProperty(u[X])
                        }

                        function h(a) {
                            a.stopPropagation();
                            var b = a.originalEvent || a;
                            a = b.$manualTimeStamp || b.timeStamp || Date.now();
                            b = parseFloat(b.elapsedTime.toFixed(C));
                            Math.max(a - A, 0) >= x && b >= v && f()
                        }
                        var l = e(b);
                        a = b.data(n);
                        if (-1 != l.getAttribute("class").indexOf(c) && a) {
                            var r = "";
                            p(c.split(" "), function(a, b) {
                                r += (0 < b ? " " : "") + a + "-active"
                            });
                            var q = a.stagger,
                                m = a.timings,
                                s = a.itemIndex,
                                v = Math.max(m.transitionDuration, m.animationDuration),
                                w = Math.max(m.transitionDelay, m.animationDelay),
                                x = w * ca,
                                A = Date.now(),
                                z = y + " " + G,
                                t = "",
                                u = [];
                            if (0 < m.transitionDuration) {
                                var B = m.transitionPropertyStyle; - 1 == B.indexOf("all") && (t += D + "transition-property: " + B + ";", t += D + "transition-duration: " + m.transitionDurationStyle + ";", u.push(D + "transition-property"), u.push(D + "transition-duration"))
                            }
                            0 < s && (0 < q.transitionDelay && 0 === q.transitionDuration && (t += D + "transition-delay: " + T(m.transitionDelayStyle, q.transitionDelay, s) + "; ", u.push(D + "transition-delay")), 0 < q.animationDelay && 0 === q.animationDuration && (t += D + "animation-delay: " + T(m.animationDelayStyle, q.animationDelay, s) + "; ", u.push(D + "animation-delay")));
                            0 < u.length && (m = l.getAttribute("style") || "", l.setAttribute("style", m + " " + t));
                            b.on(z, h);
                            b.addClass(r);
                            a.closeAnimationFn = function() {
                                g();
                                f()
                            };
                            l = (s * (Math.max(q.animationDelay, q.transitionDelay) || 0) + (w + v) * Q) * ca;
                            a.running++;
                            H(b, l);
                            return g
                        }
                        f()
                    }

                    function T(a, b, c) {
                        var d = "";
                        p(a.split(","), function(a, X) {
                            d += (0 < X ? "," : "") + (c * b + parseInt(a, 10)) + "s"
                        });
                        return d
                    }

                    function a(a, b, c, e) {
                        if (U(a, b, c, e)) return function(a) {
                            a && d(b, c)
                        }
                    }

                    function b(a, b, c, e) {
                        if (b.data(n)) return V(a, b, c, e);
                        d(b, c);
                        e()
                    }

                    function c(c, d, e, f) {
                        var g = a(c, d, e);
                        if (g) {
                            var h = g;
                            E(d, function() {
                                N(d, e);
                                O(d);
                                h = b(c, d, e, f)
                            });
                            return function(a) {
                                (h || m)(a)
                            }
                        }
                        f()
                    }

                    function d(a, b) {
                        a.removeClass(b);
                        var c = a.data(n);
                        c && (c.running && c.running--, c.running && 0 !== c.running || a.removeData(n))
                    }

                    function f(a, b) {
                        var c = "";
                        a = g.isArray(a) ? a : a.split(/\s+/);
                        p(a, function(a, d) {
                            a && 0 < a.length && (c += (0 < d ? " " : "") + a + b)
                        });
                        return c
                    }
                    var D = "",
                        I, G, q, y;
                    s.ontransitionend === P && s.onwebkittransitionend !== P ? (D = "-webkit-", I = "WebkitTransition", G = "webkitTransitionEnd transitionend") : (I = "transition", G = "transitionend");
                    s.onanimationend === P && s.onwebkitanimationend !== P ? (D = "-webkit-", q = "WebkitAnimation", y = "webkitAnimationEnd animationend") : (q = "animation", y = "animationend");
                    var z = "Duration",
                        v = "Property",
                        w = "Delay",
                        l = "IterationCount",
                        x = "$$ngAnimateKey",
                        n = "$$ngAnimateCSS3Data",
                        A = "ng-animate-block-transitions",
                        C = 3,
                        Q = 1.5,
                        ca = 1E3,
                        M = {}, da = 0,
                        W = [],
                        S, ea = null,
                        fa = 0,
                        Y = [];
                    return {
                        enter: function(a, b) {
                            return c("enter", a, "ng-enter", b)
                        },
                        leave: function(a, b) {
                            return c("leave", a, "ng-leave", b)
                        },
                        move: function(a, b) {
                            return c("move", a, "ng-move", b)
                        },
                        beforeSetClass: function(b, c, d, e) {
                            var g = f(d, "-remove") + " " + f(c, "-add"),
                                h = a("setClass", b, g, function(a) {
                                    var e = b.attr("class");
                                    b.removeClass(d);
                                    b.addClass(c);
                                    a = a();
                                    b.attr("class", e);
                                    return a
                                });
                            if (h) return E(b, function() {
                                N(b, g);
                                O(b);
                                e()
                            }), h;
                            e()
                        },
                        beforeAddClass: function(b, c, d) {
                            var e = a("addClass", b, f(c, "-add"), function(a) {
                                b.addClass(c);
                                a = a();
                                b.removeClass(c);
                                return a
                            });
                            if (e) return E(b, function() {
                                N(b, c);
                                O(b);
                                d()
                            }), e;
                            d()
                        },
                        setClass: function(a, c, d, e) {
                            d = f(d, "-remove");
                            c = f(c, "-add");
                            return b("setClass", a, d + " " + c, e)
                        },
                        addClass: function(a, c, d) {
                            return b("addClass", a, f(c, "-add"), d)
                        },
                        beforeRemoveClass: function(b, c, d) {
                            var e = a("removeClass", b, f(c, "-remove"), function(a) {
                                var d = b.attr("class");
                                b.removeClass(c);
                                a = a();
                                b.attr("class", d);
                                return a
                            });
                            if (e) return E(b, function() {
                                N(b, c);
                                O(b);
                                d()
                            }), e;
                            d()
                        },
                        removeClass: function(a, c, d) {
                            return b("removeClass", a, f(c, "-remove"), d)
                        }
                    }
                }
            ])
        }
    ])
})(window, window.angular);
var swfobject = function() {
    var UNDEF = "undefined",
        OBJECT = "object",
        SHOCKWAVE_FLASH = "Shockwave Flash",
        SHOCKWAVE_FLASH_AX = "ShockwaveFlash.ShockwaveFlash",
        FLASH_MIME_TYPE = "application/x-shockwave-flash",
        EXPRESS_INSTALL_ID = "SWFObjectExprInst",
        ON_READY_STATE_CHANGE = "onreadystatechange",
        win = window,
        doc = document,
        nav = navigator,
        plugin = false,
        domLoadFnArr = [main],
        regObjArr = [],
        objIdArr = [],
        listenersArr = [],
        storedAltContent, storedAltContentId, storedCallbackFn, storedCallbackObj, isDomLoaded = false,
        isExpressInstallActive = false,
        dynamicStylesheet, dynamicStylesheetMedia, autoHideShow = true,
        ua = function() {
            var w3cdom = typeof doc.getElementById != UNDEF && typeof doc.getElementsByTagName != UNDEF && typeof doc.createElement != UNDEF,
                u = nav.userAgent.toLowerCase(),
                p = nav.platform.toLowerCase(),
                windows = p ? /win/.test(p) : /win/.test(u),
                mac = p ? /mac/.test(p) : /mac/.test(u),
                webkit = /webkit/.test(u) ? parseFloat(u.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : false,
                ie = !+"\v1",
                playerVersion = [0, 0, 0],
                d = null;
            if (typeof nav.plugins != UNDEF && typeof nav.plugins[SHOCKWAVE_FLASH] == OBJECT) {
                d = nav.plugins[SHOCKWAVE_FLASH].description;
                if (d && !(typeof nav.mimeTypes != UNDEF && nav.mimeTypes[FLASH_MIME_TYPE] && !nav.mimeTypes[FLASH_MIME_TYPE].enabledPlugin)) {
                    plugin = true;
                    ie = false;
                    d = d.replace(/^.*\s+(\S+\s+\S+$)/, "$1");
                    playerVersion[0] = parseInt(d.replace(/^(.*)\..*$/, "$1"), 10);
                    playerVersion[1] = parseInt(d.replace(/^.*\.(.*)\s.*$/, "$1"), 10);
                    playerVersion[2] = /[a-zA-Z]/.test(d) ? parseInt(d.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0;
                }
            } else if (typeof win.ActiveXObject != UNDEF) {
                try {
                    var a = new ActiveXObject(SHOCKWAVE_FLASH_AX);
                    if (a) {
                        d = a.GetVariable("$version");
                        if (d) {
                            ie = true;
                            d = d.split(" ")[1].split(",");
                            playerVersion = [parseInt(d[0], 10), parseInt(d[1], 10), parseInt(d[2], 10)];
                        }
                    }
                } catch (e) {}
            }
            return {
                w3: w3cdom,
                pv: playerVersion,
                wk: webkit,
                ie: ie,
                win: windows,
                mac: mac
            };
        }(),
        onDomLoad = function() {
            if (!ua.w3) {
                return;
            }
            if ((typeof doc.readyState != UNDEF && doc.readyState == "complete") || (typeof doc.readyState == UNDEF && (doc.getElementsByTagName("body")[0] || doc.body))) {
                callDomLoadFunctions();
            }
            if (!isDomLoaded) {
                if (typeof doc.addEventListener != UNDEF) {
                    doc.addEventListener("DOMContentLoaded", callDomLoadFunctions, false);
                }
                if (ua.ie && ua.win) {
                    doc.attachEvent(ON_READY_STATE_CHANGE, function() {
                        if (doc.readyState == "complete") {
                            doc.detachEvent(ON_READY_STATE_CHANGE, arguments.callee);
                            callDomLoadFunctions();
                        }
                    });
                    if (win == top) {
                        (function() {
                            if (isDomLoaded) {
                                return;
                            }
                            try {
                                doc.documentElement.doScroll("left");
                            } catch (e) {
                                setTimeout(arguments.callee, 0);
                                return;
                            }
                            callDomLoadFunctions();
                        })();
                    }
                }
                if (ua.wk) {
                    (function() {
                        if (isDomLoaded) {
                            return;
                        }
                        if (!/loaded|complete/.test(doc.readyState)) {
                            setTimeout(arguments.callee, 0);
                            return;
                        }
                        callDomLoadFunctions();
                    })();
                }
                addLoadEvent(callDomLoadFunctions);
            }
        }();

    function callDomLoadFunctions() {
        if (isDomLoaded) {
            return;
        }
        try {
            var t = doc.getElementsByTagName("body")[0].appendChild(createElement("span"));
            t.parentNode.removeChild(t);
        } catch (e) {
            return;
        }
        isDomLoaded = true;
        var dl = domLoadFnArr.length;
        for (var i = 0; i < dl; i++) {
            domLoadFnArr[i]();
        }
    }

    function addDomLoadEvent(fn) {
        if (isDomLoaded) {
            fn();
        } else {
            domLoadFnArr[domLoadFnArr.length] = fn;
        }
    }

    function addLoadEvent(fn) {
        if (typeof win.addEventListener != UNDEF) {
            win.addEventListener("load", fn, false);
        } else if (typeof doc.addEventListener != UNDEF) {
            doc.addEventListener("load", fn, false);
        } else if (typeof win.attachEvent != UNDEF) {
            addListener(win, "onload", fn);
        } else if (typeof win.onload == "function") {
            var fnOld = win.onload;
            win.onload = function() {
                fnOld();
                fn();
            };
        } else {
            win.onload = fn;
        }
    }

    function main() {
        if (plugin) {
            testPlayerVersion();
        } else {
            matchVersions();
        }
    }

    function testPlayerVersion() {
        var b = doc.getElementsByTagName("body")[0];
        var o = createElement(OBJECT);
        o.setAttribute("type", FLASH_MIME_TYPE);
        var t = b.appendChild(o);
        if (t) {
            var counter = 0;
            (function() {
                if (typeof t.GetVariable != UNDEF) {
                    var d = t.GetVariable("$version");
                    if (d) {
                        d = d.split(" ")[1].split(",");
                        ua.pv = [parseInt(d[0], 10), parseInt(d[1], 10), parseInt(d[2], 10)];
                    }
                } else if (counter < 10) {
                    counter++;
                    setTimeout(arguments.callee, 10);
                    return;
                }
                b.removeChild(o);
                t = null;
                matchVersions();
            })();
        } else {
            matchVersions();
        }
    }

    function matchVersions() {
        var rl = regObjArr.length;
        if (rl > 0) {
            for (var i = 0; i < rl; i++) {
                var id = regObjArr[i].id;
                var cb = regObjArr[i].callbackFn;
                var cbObj = {
                    success: false,
                    id: id
                };
                if (ua.pv[0] > 0) {
                    var obj = getElementById(id);
                    if (obj) {
                        if (hasPlayerVersion(regObjArr[i].swfVersion) && !(ua.wk && ua.wk < 312)) {
                            setVisibility(id, true);
                            if (cb) {
                                cbObj.success = true;
                                cbObj.ref = getObjectById(id);
                                cb(cbObj);
                            }
                        } else if (regObjArr[i].expressInstall && canExpressInstall()) {
                            var att = {};
                            att.data = regObjArr[i].expressInstall;
                            att.width = obj.getAttribute("width") || "0";
                            att.height = obj.getAttribute("height") || "0";
                            if (obj.getAttribute("class")) {
                                att.styleclass = obj.getAttribute("class");
                            }
                            if (obj.getAttribute("align")) {
                                att.align = obj.getAttribute("align");
                            }
                            var par = {};
                            var p = obj.getElementsByTagName("param");
                            var pl = p.length;
                            for (var j = 0; j < pl; j++) {
                                if (p[j].getAttribute("name").toLowerCase() != "movie") {
                                    par[p[j].getAttribute("name")] = p[j].getAttribute("value");
                                }
                            }
                            showExpressInstall(att, par, id, cb);
                        } else {
                            displayAltContent(obj);
                            if (cb) {
                                cb(cbObj);
                            }
                        }
                    }
                } else {
                    setVisibility(id, true);
                    if (cb) {
                        var o = getObjectById(id);
                        if (o && typeof o.SetVariable != UNDEF) {
                            cbObj.success = true;
                            cbObj.ref = o;
                        }
                        cb(cbObj);
                    }
                }
            }
        }
    }

    function getObjectById(objectIdStr) {
        var r = null;
        var o = getElementById(objectIdStr);
        if (o && o.nodeName == "OBJECT") {
            if (typeof o.SetVariable != UNDEF) {
                r = o;
            } else {
                var n = o.getElementsByTagName(OBJECT)[0];
                if (n) {
                    r = n;
                }
            }
        }
        return r;
    }

    function canExpressInstall() {
        return !isExpressInstallActive && hasPlayerVersion("6.0.65") && (ua.win || ua.mac) && !(ua.wk && ua.wk < 312);
    }

    function showExpressInstall(att, par, replaceElemIdStr, callbackFn) {
        isExpressInstallActive = true;
        storedCallbackFn = callbackFn || null;
        storedCallbackObj = {
            success: false,
            id: replaceElemIdStr
        };
        var obj = getElementById(replaceElemIdStr);
        if (obj) {
            if (obj.nodeName == "OBJECT") {
                storedAltContent = abstractAltContent(obj);
                storedAltContentId = null;
            } else {
                storedAltContent = obj;
                storedAltContentId = replaceElemIdStr;
            }
            att.id = EXPRESS_INSTALL_ID;
            if (typeof att.width == UNDEF || (!/%$/.test(att.width) && parseInt(att.width, 10) < 310)) {
                att.width = "310";
            }
            if (typeof att.height == UNDEF || (!/%$/.test(att.height) && parseInt(att.height, 10) < 137)) {
                att.height = "137";
            }
            doc.title = doc.title.slice(0, 47) + " - Flash Player Installation";
            var pt = ua.ie && ua.win ? "ActiveX" : "PlugIn",
                fv = "MMredirectURL=" + win.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + pt + "&MMdoctitle=" + doc.title;
            if (typeof par.flashvars != UNDEF) {
                par.flashvars += "&" + fv;
            } else {
                par.flashvars = fv;
            }
            if (ua.ie && ua.win && obj.readyState != 4) {
                var newObj = createElement("div");
                replaceElemIdStr += "SWFObjectNew";
                newObj.setAttribute("id", replaceElemIdStr);
                obj.parentNode.insertBefore(newObj, obj);
                obj.style.display = "none";
                (function() {
                    if (obj.readyState == 4) {
                        obj.parentNode.removeChild(obj);
                    } else {
                        setTimeout(arguments.callee, 10);
                    }
                })();
            }
            createSWF(att, par, replaceElemIdStr);
        }
    }

    function displayAltContent(obj) {
        if (ua.ie && ua.win && obj.readyState != 4) {
            var el = createElement("div");
            obj.parentNode.insertBefore(el, obj);
            el.parentNode.replaceChild(abstractAltContent(obj), el);
            obj.style.display = "none";
            (function() {
                if (obj.readyState == 4) {
                    obj.parentNode.removeChild(obj);
                } else {
                    setTimeout(arguments.callee, 10);
                }
            })();
        } else {
            obj.parentNode.replaceChild(abstractAltContent(obj), obj);
        }
    }

    function abstractAltContent(obj) {
        var ac = createElement("div");
        if (ua.win && ua.ie) {
            ac.innerHTML = obj.innerHTML;
        } else {
            var nestedObj = obj.getElementsByTagName(OBJECT)[0];
            if (nestedObj) {
                var c = nestedObj.childNodes;
                if (c) {
                    var cl = c.length;
                    for (var i = 0; i < cl; i++) {
                        if (!(c[i].nodeType == 1 && c[i].nodeName == "PARAM") && !(c[i].nodeType == 8)) {
                            ac.appendChild(c[i].cloneNode(true));
                        }
                    }
                }
            }
        }
        return ac;
    }

    function createSWF(attObj, parObj, id) {
        var r, el = getElementById(id);
        if (ua.wk && ua.wk < 312) {
            return r;
        }
        if (el) {
            if (typeof attObj.id == UNDEF) {
                attObj.id = id;
            }
            if (ua.ie && ua.win) {
                var att = "";
                for (var i in attObj) {
                    if (attObj[i] != Object.prototype[i]) {
                        if (i.toLowerCase() == "data") {
                            parObj.movie = attObj[i];
                        } else if (i.toLowerCase() == "styleclass") {
                            att += ' class="' + attObj[i] + '"';
                        } else if (i.toLowerCase() != "classid") {
                            att += ' ' + i + '="' + attObj[i] + '"';
                        }
                    }
                }
                var par = "";
                for (var j in parObj) {
                    if (parObj[j] != Object.prototype[j]) {
                        par += '<param name="' + j + '" value="' + parObj[j] + '" />';
                    }
                }
                el.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + att + '>' + par + '</object>';
                objIdArr[objIdArr.length] = attObj.id;
                r = getElementById(attObj.id);
            } else {
                var o = createElement(OBJECT);
                o.setAttribute("type", FLASH_MIME_TYPE);
                for (var m in attObj) {
                    if (attObj[m] != Object.prototype[m]) {
                        if (m.toLowerCase() == "styleclass") {
                            o.setAttribute("class", attObj[m]);
                        } else if (m.toLowerCase() != "classid") {
                            o.setAttribute(m, attObj[m]);
                        }
                    }
                }
                for (var n in parObj) {
                    if (parObj[n] != Object.prototype[n] && n.toLowerCase() != "movie") {
                        createObjParam(o, n, parObj[n]);
                    }
                }
                el.parentNode.replaceChild(o, el);
                r = o;
            }
        }
        return r;
    }

    function createObjParam(el, pName, pValue) {
        var p = createElement("param");
        p.setAttribute("name", pName);
        p.setAttribute("value", pValue);
        el.appendChild(p);
    }

    function removeSWF(id) {
        var obj = getElementById(id);
        if (obj && obj.nodeName == "OBJECT") {
            if (ua.ie && ua.win) {
                obj.style.display = "none";
                (function() {
                    if (obj.readyState == 4) {
                        removeObjectInIE(id);
                    } else {
                        setTimeout(arguments.callee, 10);
                    }
                })();
            } else {
                obj.parentNode.removeChild(obj);
            }
        }
    }

    function removeObjectInIE(id) {
        var obj = getElementById(id);
        if (obj) {
            for (var i in obj) {
                if (typeof obj[i] == "function") {
                    obj[i] = null;
                }
            }
            obj.parentNode.removeChild(obj);
        }
    }

    function getElementById(id) {
        var el = null;
        try {
            el = doc.getElementById(id);
        } catch (e) {}
        return el;
    }

    function createElement(el) {
        return doc.createElement(el);
    }

    function addListener(target, eventType, fn) {
        target.attachEvent(eventType, fn);
        listenersArr[listenersArr.length] = [target, eventType, fn];
    }

    function hasPlayerVersion(rv) {
        var pv = ua.pv,
            v = rv.split(".");
        v[0] = parseInt(v[0], 10);
        v[1] = parseInt(v[1], 10) || 0;
        v[2] = parseInt(v[2], 10) || 0;
        return (pv[0] > v[0] || (pv[0] == v[0] && pv[1] > v[1]) || (pv[0] == v[0] && pv[1] == v[1] && pv[2] >= v[2])) ? true : false;
    }

    function createCSS(sel, decl, media, newStyle) {
        if (ua.ie && ua.mac) {
            return;
        }
        var h = doc.getElementsByTagName("head")[0];
        if (!h) {
            return;
        }
        var m = (media && typeof media == "string") ? media : "screen";
        if (newStyle) {
            dynamicStylesheet = null;
            dynamicStylesheetMedia = null;
        }
        if (!dynamicStylesheet || dynamicStylesheetMedia != m) {
            var s = createElement("style");
            s.setAttribute("type", "text/css");
            s.setAttribute("media", m);
            dynamicStylesheet = h.appendChild(s);
            if (ua.ie && ua.win && typeof doc.styleSheets != UNDEF && doc.styleSheets.length > 0) {
                dynamicStylesheet = doc.styleSheets[doc.styleSheets.length - 1];
            }
            dynamicStylesheetMedia = m;
        }
        if (ua.ie && ua.win) {
            if (dynamicStylesheet && typeof dynamicStylesheet.addRule == OBJECT) {
                dynamicStylesheet.addRule(sel, decl);
            }
        } else {
            if (dynamicStylesheet && typeof doc.createTextNode != UNDEF) {
                dynamicStylesheet.appendChild(doc.createTextNode(sel + " {" + decl + "}"));
            }
        }
    }

    function setVisibility(id, isVisible) {
        if (!autoHideShow) {
            return;
        }
        var v = isVisible ? "visible" : "hidden";
        if (isDomLoaded && getElementById(id)) {
            getElementById(id).style.visibility = v;
        } else {
            createCSS("#" + id, "visibility:" + v);
        }
    }

    function urlEncodeIfNecessary(s) {
        var regex = /[\\\"<>\.;]/;
        var hasBadChars = regex.exec(s) != null;
        return hasBadChars && typeof encodeURIComponent != UNDEF ? encodeURIComponent(s) : s;
    }
    var cleanup = function() {
        if (ua.ie && ua.win) {
            window.attachEvent("onunload", function() {
                var ll = listenersArr.length;
                for (var i = 0; i < ll; i++) {
                    listenersArr[i][0].detachEvent(listenersArr[i][1], listenersArr[i][2]);
                }
                var il = objIdArr.length;
                for (var j = 0; j < il; j++) {
                    removeSWF(objIdArr[j]);
                }
                for (var k in ua) {
                    ua[k] = null;
                }
                ua = null;
                for (var l in swfobject) {
                    swfobject[l] = null;
                }
                swfobject = null;
            });
        }
    }();
    return {
        registerObject: function(objectIdStr, swfVersionStr, xiSwfUrlStr, callbackFn) {
            if (ua.w3 && objectIdStr && swfVersionStr) {
                var regObj = {};
                regObj.id = objectIdStr;
                regObj.swfVersion = swfVersionStr;
                regObj.expressInstall = xiSwfUrlStr;
                regObj.callbackFn = callbackFn;
                regObjArr[regObjArr.length] = regObj;
                setVisibility(objectIdStr, false);
            } else if (callbackFn) {
                callbackFn({
                    success: false,
                    id: objectIdStr
                });
            }
        },
        getObjectById: function(objectIdStr) {
            if (ua.w3) {
                return getObjectById(objectIdStr);
            }
        },
        embedSWF: function(swfUrlStr, replaceElemIdStr, widthStr, heightStr, swfVersionStr, xiSwfUrlStr, flashvarsObj, parObj, attObj, callbackFn) {
            var callbackObj = {
                success: false,
                id: replaceElemIdStr
            };
            if (ua.w3 && !(ua.wk && ua.wk < 312) && swfUrlStr && replaceElemIdStr && widthStr && heightStr && swfVersionStr) {
                setVisibility(replaceElemIdStr, false);
                addDomLoadEvent(function() {
                    widthStr += "";
                    heightStr += "";
                    var att = {};
                    if (attObj && typeof attObj === OBJECT) {
                        for (var i in attObj) {
                            att[i] = attObj[i];
                        }
                    }
                    att.data = swfUrlStr;
                    att.width = widthStr;
                    att.height = heightStr;
                    var par = {};
                    if (parObj && typeof parObj === OBJECT) {
                        for (var j in parObj) {
                            par[j] = parObj[j];
                        }
                    }
                    if (flashvarsObj && typeof flashvarsObj === OBJECT) {
                        for (var k in flashvarsObj) {
                            if (typeof par.flashvars != UNDEF) {
                                par.flashvars += "&" + k + "=" + flashvarsObj[k];
                            } else {
                                par.flashvars = k + "=" + flashvarsObj[k];
                            }
                        }
                    }
                    if (hasPlayerVersion(swfVersionStr)) {
                        var obj = createSWF(att, par, replaceElemIdStr);
                        if (att.id == replaceElemIdStr) {
                            setVisibility(replaceElemIdStr, true);
                        }
                        callbackObj.success = true;
                        callbackObj.ref = obj;
                    } else if (xiSwfUrlStr && canExpressInstall()) {
                        att.data = xiSwfUrlStr;
                        showExpressInstall(att, par, replaceElemIdStr, callbackFn);
                        return;
                    } else {
                        setVisibility(replaceElemIdStr, true);
                    }
                    if (callbackFn) {
                        callbackFn(callbackObj);
                    }
                });
            } else if (callbackFn) {
                callbackFn(callbackObj);
            }
        },
        switchOffAutoHideShow: function() {
            autoHideShow = false;
        },
        ua: ua,
        getFlashPlayerVersion: function() {
            return {
                major: ua.pv[0],
                minor: ua.pv[1],
                release: ua.pv[2]
            };
        },
        hasFlashPlayerVersion: hasPlayerVersion,
        createSWF: function(attObj, parObj, replaceElemIdStr) {
            if (ua.w3) {
                return createSWF(attObj, parObj, replaceElemIdStr);
            } else {
                return undefined;
            }
        },
        showExpressInstall: function(att, par, replaceElemIdStr, callbackFn) {
            if (ua.w3 && canExpressInstall()) {
                showExpressInstall(att, par, replaceElemIdStr, callbackFn);
            }
        },
        removeSWF: function(objElemIdStr) {
            if (ua.w3) {
                removeSWF(objElemIdStr);
            }
        },
        createCSS: function(selStr, declStr, mediaStr, newStyleBoolean) {
            if (ua.w3) {
                createCSS(selStr, declStr, mediaStr, newStyleBoolean);
            }
        },
        addDomLoadEvent: addDomLoadEvent,
        addLoadEvent: addLoadEvent,
        getQueryParamValue: function(param) {
            var q = doc.location.search || doc.location.hash;
            if (q) {
                if (/\?/.test(q)) {
                    q = q.split("?")[1];
                }
                if (param == null) {
                    return urlEncodeIfNecessary(q);
                }
                var pairs = q.split("&");
                for (var i = 0; i < pairs.length; i++) {
                    if (pairs[i].substring(0, pairs[i].indexOf("=")) == param) {
                        return urlEncodeIfNecessary(pairs[i].substring((pairs[i].indexOf("=") + 1)));
                    }
                }
            }
            return "";
        },
        expressInstallCallback: function() {
            if (isExpressInstallActive) {
                var obj = getElementById(EXPRESS_INSTALL_ID);
                if (obj && storedAltContent) {
                    obj.parentNode.replaceChild(storedAltContent, obj);
                    if (storedAltContentId) {
                        setVisibility(storedAltContentId, true);
                        if (ua.ie && ua.win) {
                            storedAltContent.style.display = "block";
                        }
                    }
                    if (storedCallbackFn) {
                        storedCallbackFn(storedCallbackObj);
                    }
                }
                isExpressInstallActive = false;
            }
        }
    };
}();
var mejs = mejs || {};
mejs.version = '2.10.3';
mejs.meIndex = 0;
mejs.plugins = {
    silverlight: [{
        version: [3, 0],
        types: ['video/mp4', 'video/m4v', 'video/mov', 'video/wmv', 'audio/wma', 'audio/m4a', 'audio/mp3', 'audio/wav', 'audio/mpeg']
    }],
    flash: [{
        version: [9, 0, 124],
        types: ['video/mp4', 'video/m4v', 'video/mov', 'video/flv', 'video/rtmp', 'video/x-flv', 'audio/flv', 'audio/x-flv', 'audio/mp3', 'audio/m4a', 'audio/mpeg', 'video/youtube', 'video/x-youtube']
    }],
    youtube: [{
        version: null,
        types: ['video/youtube', 'video/x-youtube']
    }],
    vimeo: [{
        version: null,
        types: ['video/vimeo', 'video/x-vimeo']
    }]
};
mejs.Utility = {
    encodeUrl: function(url) {
        return encodeURIComponent(url);
    },
    escapeHTML: function(s) {
        return s.toString().split('&').join('&amp;').split('<').join('&lt;').split('"').join('&quot;');
    },
    absolutizeUrl: function(url) {
        var el = document.createElement('div');
        el.innerHTML = '<a href="' + this.escapeHTML(url) + '">x</a>';
        return el.firstChild.href;
    },
    getScriptPath: function(scriptNames) {
        var
            i = 0,
            j, path = '',
            name = '',
            script, scripts = document.getElementsByTagName('script'),
            il = scripts.length,
            jl = scriptNames.length;
        for (; i < il; i++) {
            script = scripts[i].src;
            for (j = 0; j < jl; j++) {
                name = scriptNames[j];
                if (script.indexOf(name) > -1) {
                    path = script.substring(0, script.indexOf(name));
                    break;
                }
            }
            if (path !== '') {
                break;
            }
        }
        return path;
    },
    secondsToTimeCode: function(time, forceHours, showFrameCount, fps) {
        if (typeof showFrameCount == 'undefined') {
            showFrameCount = false;
        } else if (typeof fps == 'undefined') {
            fps = 25;
        }
        var hours = Math.floor(time / 3600) % 24,
            minutes = Math.floor(time / 60) % 60,
            seconds = Math.floor(time % 60),
            frames = Math.floor(((time % 1) * fps).toFixed(3)),
            result = ((forceHours || hours > 0) ? (hours < 10 ? '0' + hours : hours) + ':' : '') + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds) + ((showFrameCount) ? ':' + (frames < 10 ? '0' + frames : frames) : '');
        return result;
    },
    timeCodeToSeconds: function(hh_mm_ss_ff, forceHours, showFrameCount, fps) {
        if (typeof showFrameCount == 'undefined') {
            showFrameCount = false;
        } else if (typeof fps == 'undefined') {
            fps = 25;
        }
        var tc_array = hh_mm_ss_ff.split(":"),
            tc_hh = parseInt(tc_array[0], 10),
            tc_mm = parseInt(tc_array[1], 10),
            tc_ss = parseInt(tc_array[2], 10),
            tc_ff = 0,
            tc_in_seconds = 0;
        if (showFrameCount) {
            tc_ff = parseInt(tc_array[3]) / fps;
        }
        tc_in_seconds = (tc_hh * 3600) + (tc_mm * 60) + tc_ss + tc_ff;
        return tc_in_seconds;
    },
    convertSMPTEtoSeconds: function(SMPTE) {
        if (typeof SMPTE != 'string')
            return false;
        SMPTE = SMPTE.replace(',', '.');
        var secs = 0,
            decimalLen = (SMPTE.indexOf('.') != -1) ? SMPTE.split('.')[1].length : 0,
            multiplier = 1;
        SMPTE = SMPTE.split(':').reverse();
        for (var i = 0; i < SMPTE.length; i++) {
            multiplier = 1;
            if (i > 0) {
                multiplier = Math.pow(60, i);
            }
            secs += Number(SMPTE[i]) * multiplier;
        }
        return Number(secs.toFixed(decimalLen));
    },
    removeSwf: function(id) {
        var obj = document.getElementById(id);
        if (obj && obj.nodeName == "OBJECT") {
            if (mejs.MediaFeatures.isIE) {
                obj.style.display = "none";
                (function() {
                    if (obj.readyState == 4) {
                        mejs.Utility.removeObjectInIE(id);
                    } else {
                        setTimeout(arguments.callee, 10);
                    }
                })();
            } else {
                obj.parentNode.removeChild(obj);
            }
        }
    },
    removeObjectInIE: function(id) {
        var obj = document.getElementById(id);
        if (obj) {
            for (var i in obj) {
                if (typeof obj[i] == "function") {
                    obj[i] = null;
                }
            }
            obj.parentNode.removeChild(obj);
        }
    }
};
mejs.PluginDetector = {
    hasPluginVersion: function(plugin, v) {
        var pv = this.plugins[plugin];
        v[1] = v[1] || 0;
        v[2] = v[2] || 0;
        return (pv[0] > v[0] || (pv[0] == v[0] && pv[1] > v[1]) || (pv[0] == v[0] && pv[1] == v[1] && pv[2] >= v[2])) ? true : false;
    },
    nav: window.navigator,
    ua: window.navigator.userAgent.toLowerCase(),
    plugins: [],
    addPlugin: function(p, pluginName, mimeType, activeX, axDetect) {
        this.plugins[p] = this.detectPlugin(pluginName, mimeType, activeX, axDetect);
    },
    detectPlugin: function(pluginName, mimeType, activeX, axDetect) {
        var version = [0, 0, 0],
            description, i, ax;
        if (typeof(this.nav.plugins) != 'undefined' && typeof this.nav.plugins[pluginName] == 'object') {
            description = this.nav.plugins[pluginName].description;
            if (description && !(typeof this.nav.mimeTypes != 'undefined' && this.nav.mimeTypes[mimeType] && !this.nav.mimeTypes[mimeType].enabledPlugin)) {
                version = description.replace(pluginName, '').replace(/^\s+/, '').replace(/\sr/gi, '.').split('.');
                for (i = 0; i < version.length; i++) {
                    version[i] = parseInt(version[i].match(/\d+/), 10);
                }
            }
        } else if (typeof(window.ActiveXObject) != 'undefined') {
            try {
                ax = new ActiveXObject(activeX);
                if (ax) {
                    version = axDetect(ax);
                }
            } catch (e) {}
        }
        return version;
    }
};
mejs.PluginDetector.addPlugin('flash', 'Shockwave Flash', 'application/x-shockwave-flash', 'ShockwaveFlash.ShockwaveFlash', function(ax) {
    var version = [],
        d = ax.GetVariable("$version");
    if (d) {
        d = d.split(" ")[1].split(",");
        version = [parseInt(d[0], 10), parseInt(d[1], 10), parseInt(d[2], 10)];
    }
    return version;
});
mejs.PluginDetector.addPlugin('silverlight', 'Silverlight Plug-In', 'application/x-silverlight-2', 'AgControl.AgControl', function(ax) {
    var v = [0, 0, 0, 0],
        loopMatch = function(ax, v, i, n) {
            while (ax.isVersionSupported(v[0] + "." + v[1] + "." + v[2] + "." + v[3])) {
                v[i] += n;
            }
            v[i] -= n;
        };
    loopMatch(ax, v, 0, 1);
    loopMatch(ax, v, 1, 1);
    loopMatch(ax, v, 2, 10000);
    loopMatch(ax, v, 2, 1000);
    loopMatch(ax, v, 2, 100);
    loopMatch(ax, v, 2, 10);
    loopMatch(ax, v, 2, 1);
    loopMatch(ax, v, 3, 1);
    return v;
});
mejs.MediaFeatures = {
    init: function() {
        var
            t = this,
            d = document,
            nav = mejs.PluginDetector.nav,
            ua = mejs.PluginDetector.ua.toLowerCase(),
            i, v, html5Elements = ['source', 'track', 'audio', 'video'];
        t.isiPad = (ua.match(/ipad/i) !== null);
        t.isiPhone = (ua.match(/iphone/i) !== null);
        t.isiOS = t.isiPhone || t.isiPad;
        t.isAndroid = (ua.match(/android/i) !== null);
        t.isBustedAndroid = (ua.match(/android 2\.[12]/) !== null);
        t.isIE = (nav.appName.toLowerCase().indexOf("microsoft") != -1);
        t.isChrome = (ua.match(/chrome/gi) !== null);
        t.isFirefox = (ua.match(/firefox/gi) !== null);
        t.isWebkit = (ua.match(/webkit/gi) !== null);
        t.isGecko = (ua.match(/gecko/gi) !== null) && !t.isWebkit;
        t.isOpera = (ua.match(/opera/gi) !== null);
        t.hasTouch = ('ontouchstart' in window);
        t.svg = !! document.createElementNS && !! document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect;
        for (i = 0; i < html5Elements.length; i++) {
            v = document.createElement(html5Elements[i]);
        }
        t.supportsMediaTag = (typeof v.canPlayType !== 'undefined' || t.isBustedAndroid);
        t.hasSemiNativeFullScreen = (typeof v.webkitEnterFullscreen !== 'undefined');
        t.hasWebkitNativeFullScreen = (typeof v.webkitRequestFullScreen !== 'undefined');
        t.hasMozNativeFullScreen = (typeof v.mozRequestFullScreen !== 'undefined');
        t.hasTrueNativeFullScreen = (t.hasWebkitNativeFullScreen || t.hasMozNativeFullScreen);
        t.nativeFullScreenEnabled = t.hasTrueNativeFullScreen;
        if (t.hasMozNativeFullScreen) {
            t.nativeFullScreenEnabled = v.mozFullScreenEnabled;
        }
        if (this.isChrome) {
            t.hasSemiNativeFullScreen = false;
        }
        if (t.hasTrueNativeFullScreen) {
            t.fullScreenEventName = (t.hasWebkitNativeFullScreen) ? 'webkitfullscreenchange' : 'mozfullscreenchange';
            t.isFullScreen = function() {
                if (v.mozRequestFullScreen) {
                    return d.mozFullScreen;
                } else if (v.webkitRequestFullScreen) {
                    return d.webkitIsFullScreen;
                }
            }
            t.requestFullScreen = function(el) {
                if (t.hasWebkitNativeFullScreen) {
                    el.webkitRequestFullScreen();
                } else if (t.hasMozNativeFullScreen) {
                    el.mozRequestFullScreen();
                }
            }
            t.cancelFullScreen = function() {
                if (t.hasWebkitNativeFullScreen) {
                    document.webkitCancelFullScreen();
                } else if (t.hasMozNativeFullScreen) {
                    document.mozCancelFullScreen();
                }
            }
        }
        if (t.hasSemiNativeFullScreen && ua.match(/mac os x 10_5/i)) {
            t.hasNativeFullScreen = false;
            t.hasSemiNativeFullScreen = false;
        }
    }
};
mejs.MediaFeatures.init();
mejs.HtmlMediaElement = {
    pluginType: 'native',
    isFullScreen: false,
    setCurrentTime: function(time) {
        this.currentTime = time;
    },
    setMuted: function(muted) {
        this.muted = muted;
    },
    setVolume: function(volume) {
        this.volume = volume;
    },
    stop: function() {
        this.pause();
    },
    setSrc: function(url) {
        var
            existingSources = this.getElementsByTagName('source');
        while (existingSources.length > 0) {
            this.removeChild(existingSources[0]);
        }
        if (typeof url == 'string') {
            this.src = url;
        } else {
            var i, media;
            for (i = 0; i < url.length; i++) {
                media = url[i];
                if (this.canPlayType(media.type)) {
                    this.src = media.src;
                    break;
                }
            }
        }
    },
    setVideoSize: function(width, height) {
        this.width = width;
        this.height = height;
    }
};
mejs.PluginMediaElement = function(pluginid, pluginType, mediaUrl) {
    this.id = pluginid;
    this.pluginType = pluginType;
    this.src = mediaUrl;
    this.events = {};
    this.attributes = {};
};
mejs.PluginMediaElement.prototype = {
    pluginElement: null,
    pluginType: '',
    isFullScreen: false,
    playbackRate: -1,
    defaultPlaybackRate: -1,
    seekable: [],
    played: [],
    paused: true,
    ended: false,
    seeking: false,
    duration: 0,
    error: null,
    tagName: '',
    muted: false,
    volume: 1,
    currentTime: 0,
    play: function() {
        if (this.pluginApi != null) {
            if (this.pluginType == 'youtube') {
                this.pluginApi.playVideo();
            } else {
                this.pluginApi.playMedia();
            }
            this.paused = false;
        }
    },
    load: function() {
        if (this.pluginApi != null) {
            if (this.pluginType == 'youtube') {} else {
                this.pluginApi.loadMedia();
            }
            this.paused = false;
        }
    },
    pause: function() {
        if (this.pluginApi != null) {
            if (this.pluginType == 'youtube') {
                this.pluginApi.pauseVideo();
            } else {
                this.pluginApi.pauseMedia();
            }
            this.paused = true;
        }
    },
    stop: function() {
        if (this.pluginApi != null) {
            if (this.pluginType == 'youtube') {
                this.pluginApi.stopVideo();
            } else {
                this.pluginApi.stopMedia();
            }
            this.paused = true;
        }
    },
    canPlayType: function(type) {
        var i, j, pluginInfo, pluginVersions = mejs.plugins[this.pluginType];
        for (i = 0; i < pluginVersions.length; i++) {
            pluginInfo = pluginVersions[i];
            if (mejs.PluginDetector.hasPluginVersion(this.pluginType, pluginInfo.version)) {
                for (j = 0; j < pluginInfo.types.length; j++) {
                    if (type == pluginInfo.types[j]) {
                        return true;
                    }
                }
            }
        }
        return false;
    },
    positionFullscreenButton: function(x, y, visibleAndAbove) {
        if (this.pluginApi != null && this.pluginApi.positionFullscreenButton) {
            this.pluginApi.positionFullscreenButton(x, y, visibleAndAbove);
        }
    },
    hideFullscreenButton: function() {
        if (this.pluginApi != null && this.pluginApi.hideFullscreenButton) {
            this.pluginApi.hideFullscreenButton();
        }
    },
    setSrc: function(url) {
        if (typeof url == 'string') {
            this.pluginApi.setSrc(mejs.Utility.absolutizeUrl(url));
            this.src = mejs.Utility.absolutizeUrl(url);
        } else {
            var i, media;
            for (i = 0; i < url.length; i++) {
                media = url[i];
                if (this.canPlayType(media.type)) {
                    this.pluginApi.setSrc(mejs.Utility.absolutizeUrl(media.src));
                    this.src = mejs.Utility.absolutizeUrl(url);
                    break;
                }
            }
        }
    },
    setCurrentTime: function(time) {
        if (this.pluginApi != null) {
            if (this.pluginType == 'youtube') {
                this.pluginApi.seekTo(time);
            } else {
                this.pluginApi.setCurrentTime(time);
            }
            this.currentTime = time;
        }
    },
    setVolume: function(volume) {
        if (this.pluginApi != null) {
            if (this.pluginType == 'youtube') {
                this.pluginApi.setVolume(volume * 100);
            } else {
                this.pluginApi.setVolume(volume);
            }
            this.volume = volume;
        }
    },
    setMuted: function(muted) {
        if (this.pluginApi != null) {
            if (this.pluginType == 'youtube') {
                if (muted) {
                    this.pluginApi.mute();
                } else {
                    this.pluginApi.unMute();
                }
                this.muted = muted;
                this.dispatchEvent('volumechange');
            } else {
                this.pluginApi.setMuted(muted);
            }
            this.muted = muted;
        }
    },
    setVideoSize: function(width, height) {
        if (this.pluginElement.style) {
            this.pluginElement.style.width = width + 'px';
            this.pluginElement.style.height = height + 'px';
        }
        if (this.pluginApi != null && this.pluginApi.setVideoSize) {
            this.pluginApi.setVideoSize(width, height);
        }
    },
    setFullscreen: function(fullscreen) {
        if (this.pluginApi != null && this.pluginApi.setFullscreen) {
            this.pluginApi.setFullscreen(fullscreen);
        }
    },
    enterFullScreen: function() {
        if (this.pluginApi != null && this.pluginApi.setFullscreen) {
            this.setFullscreen(true);
        }
    },
    exitFullScreen: function() {
        if (this.pluginApi != null && this.pluginApi.setFullscreen) {
            this.setFullscreen(false);
        }
    },
    addEventListener: function(eventName, callback, bubble) {
        this.events[eventName] = this.events[eventName] || [];
        this.events[eventName].push(callback);
    },
    removeEventListener: function(eventName, callback) {
        if (!eventName) {
            this.events = {};
            return true;
        }
        var callbacks = this.events[eventName];
        if (!callbacks) return true;
        if (!callback) {
            this.events[eventName] = [];
            return true;
        }
        for (i = 0; i < callbacks.length; i++) {
            if (callbacks[i] === callback) {
                this.events[eventName].splice(i, 1);
                return true;
            }
        }
        return false;
    },
    dispatchEvent: function(eventName) {
        var i, args, callbacks = this.events[eventName];
        if (callbacks) {
            args = Array.prototype.slice.call(arguments, 1);
            for (i = 0; i < callbacks.length; i++) {
                callbacks[i].apply(null, args);
            }
        }
    },
    hasAttribute: function(name) {
        return (name in this.attributes);
    },
    removeAttribute: function(name) {
        delete this.attributes[name];
    },
    getAttribute: function(name) {
        if (this.hasAttribute(name)) {
            return this.attributes[name];
        }
        return '';
    },
    setAttribute: function(name, value) {
        this.attributes[name] = value;
    },
    remove: function() {
        mejs.Utility.removeSwf(this.pluginElement.id);
    }
};
mejs.MediaPluginBridge = {
    pluginMediaElements: {},
    htmlMediaElements: {},
    registerPluginElement: function(id, pluginMediaElement, htmlMediaElement) {
        this.pluginMediaElements[id] = pluginMediaElement;
        this.htmlMediaElements[id] = htmlMediaElement;
    },
    initPlugin: function(id) {
        var pluginMediaElement = this.pluginMediaElements[id],
            htmlMediaElement = this.htmlMediaElements[id];
        if (pluginMediaElement) {
            switch (pluginMediaElement.pluginType) {
                case "flash":
                    pluginMediaElement.pluginElement = pluginMediaElement.pluginApi = document.getElementById(id);
                    break;
                case "silverlight":
                    pluginMediaElement.pluginElement = document.getElementById(pluginMediaElement.id);
                    pluginMediaElement.pluginApi = pluginMediaElement.pluginElement.Content.MediaElementJS;
                    break;
            }
            if (pluginMediaElement.pluginApi != null && pluginMediaElement.success) {
                pluginMediaElement.success(pluginMediaElement, htmlMediaElement);
            }
        }
    },
    fireEvent: function(id, eventName, values) {
        try {
            var
                e, i, bufferedTime, pluginMediaElement = this.pluginMediaElements[id];
            if (pluginMediaElement) {
                e = {
                    type: eventName,
                    target: pluginMediaElement
                };
                for (i in values) {
                    pluginMediaElement[i] = values[i];
                    e[i] = values[i];
                }
                bufferedTime = values.bufferedTime || 0;
                e.target.buffered = e.buffered = {
                    start: function(index) {
                        return 0;
                    },
                    end: function(index) {
                        return bufferedTime;
                    },
                    length: 1
                };
                pluginMediaElement.dispatchEvent(e.type, e);
            }
        } catch (e) {
            console.log('Error in fireEvent: [' + e + "]");
        }
    }
};
mejs.MediaElementDefaults = {
    mode: 'auto',
    plugins: ['flash', 'silverlight', 'youtube', 'vimeo'],
    enablePluginDebug: false,
    type: '',
    pluginPath: mejs.Utility.getScriptPath(['mediaelement.js', 'mediaelement.min.js', 'mediaelement-and-player.js', 'mediaelement-and-player.min.js']),
    flashName: 'flashmediaelement.swf',
    flashStreamer: '',
    enablePluginSmoothing: false,
    silverlightName: 'silverlightmediaelement.xap',
    defaultVideoWidth: 480,
    defaultVideoHeight: 270,
    pluginWidth: -1,
    pluginHeight: -1,
    pluginVars: [],
    timerRate: 250,
    startVolume: 0.8,
    success: function() {},
    error: function() {}
};
mejs.MediaElement = function(el, o) {
    return mejs.HtmlMediaElementShim.create(el, o);
};
mejs.HtmlMediaElementShim = {
    create: function(el, o) {
        var
            options = mejs.MediaElementDefaults,
            htmlMediaElement = (typeof(el) == 'string') ? document.getElementById(el) : el,
            tagName = htmlMediaElement.tagName.toLowerCase(),
            isMediaTag = (tagName === 'audio' || tagName === 'video'),
            src = (isMediaTag) ? htmlMediaElement.getAttribute('src') : htmlMediaElement.getAttribute('href'),
            poster = htmlMediaElement.getAttribute('poster'),
            autoplay = htmlMediaElement.getAttribute('autoplay'),
            preload = htmlMediaElement.getAttribute('preload'),
            controls = htmlMediaElement.getAttribute('controls'),
            playback, prop;
        for (prop in o) {
            options[prop] = o[prop];
        }
        src = (typeof src == 'undefined' || src === null || src == '') ? null : src;
        poster = (typeof poster == 'undefined' || poster === null) ? '' : poster;
        preload = (typeof preload == 'undefined' || preload === null || preload === 'false') ? 'none' : preload;
        autoplay = !(typeof autoplay == 'undefined' || autoplay === null || autoplay === 'false');
        controls = !(typeof controls == 'undefined' || controls === null || controls === 'false');
        playback = this.determinePlayback(htmlMediaElement, options, mejs.MediaFeatures.supportsMediaTag, isMediaTag, src);
        playback.url = (playback.url !== null) ? mejs.Utility.absolutizeUrl(playback.url) : '';
        if (playback.method == 'native') {
            if (mejs.MediaFeatures.isBustedAndroid) {
                htmlMediaElement.src = playback.url;
                htmlMediaElement.addEventListener('click', function() {
                    htmlMediaElement.play();
                }, false);
            }
            return this.updateNative(playback, options, autoplay, preload);
        } else if (playback.method !== '') {
            return this.createPlugin(playback, options, poster, autoplay, preload, controls);
        } else {
            this.createErrorMessage(playback, options, poster);
            return this;
        }
    },
    determinePlayback: function(htmlMediaElement, options, supportsMediaTag, isMediaTag, src) {
        var
            mediaFiles = [],
            i, j, k, l, n, type, result = {
                method: '',
                url: '',
                htmlMediaElement: htmlMediaElement,
                isVideo: (htmlMediaElement.tagName.toLowerCase() != 'audio')
            }, pluginName, pluginVersions, pluginInfo, dummy, media;
        if (typeof options.type != 'undefined' && options.type !== '') {
            if (typeof options.type == 'string') {
                mediaFiles.push({
                    type: options.type,
                    url: src
                });
            } else {
                for (i = 0; i < options.type.length; i++) {
                    mediaFiles.push({
                        type: options.type[i],
                        url: src
                    });
                }
            }
        } else if (src !== null) {
            type = this.formatType(src, htmlMediaElement.getAttribute('type'));
            mediaFiles.push({
                type: type,
                url: src
            });
        } else {
            for (i = 0; i < htmlMediaElement.childNodes.length; i++) {
                n = htmlMediaElement.childNodes[i];
                if (n.nodeType == 1 && n.tagName.toLowerCase() == 'source') {
                    src = n.getAttribute('src');
                    type = this.formatType(src, n.getAttribute('type'));
                    media = n.getAttribute('media');
                    if (!media || !window.matchMedia || (window.matchMedia && window.matchMedia(media).matches)) {
                        mediaFiles.push({
                            type: type,
                            url: src
                        });
                    }
                }
            }
        }
        if (!isMediaTag && mediaFiles.length > 0 && mediaFiles[0].url !== null && this.getTypeFromFile(mediaFiles[0].url).indexOf('audio') > -1) {
            result.isVideo = false;
        }
        if (mejs.MediaFeatures.isBustedAndroid) {
            htmlMediaElement.canPlayType = function(type) {
                return (type.match(/video\/(mp4|m4v)/gi) !== null) ? 'maybe' : '';
            };
        }
        if (supportsMediaTag && (options.mode === 'auto' || options.mode === 'auto_plugin' || options.mode === 'native')) {
            if (!isMediaTag) {
                dummy = document.createElement(result.isVideo ? 'video' : 'audio');
                htmlMediaElement.parentNode.insertBefore(dummy, htmlMediaElement);
                htmlMediaElement.style.display = 'none';
                result.htmlMediaElement = htmlMediaElement = dummy;
            }
            for (i = 0; i < mediaFiles.length; i++) {
                if (htmlMediaElement.canPlayType(mediaFiles[i].type).replace(/no/, '') !== '' || htmlMediaElement.canPlayType(mediaFiles[i].type.replace(/mp3/, 'mpeg')).replace(/no/, '') !== '') {
                    result.method = 'native';
                    result.url = mediaFiles[i].url;
                    break;
                }
            }
            if (result.method === 'native') {
                if (result.url !== null) {
                    htmlMediaElement.src = result.url;
                }
                if (options.mode !== 'auto_plugin') {
                    return result;
                }
            }
        }
        if (options.mode === 'auto' || options.mode === 'auto_plugin' || options.mode === 'shim') {
            for (i = 0; i < mediaFiles.length; i++) {
                type = mediaFiles[i].type;
                for (j = 0; j < options.plugins.length; j++) {
                    pluginName = options.plugins[j];
                    pluginVersions = mejs.plugins[pluginName];
                    for (k = 0; k < pluginVersions.length; k++) {
                        pluginInfo = pluginVersions[k];
                        if (pluginInfo.version == null || mejs.PluginDetector.hasPluginVersion(pluginName, pluginInfo.version)) {
                            for (l = 0; l < pluginInfo.types.length; l++) {
                                if (type == pluginInfo.types[l]) {
                                    result.method = pluginName;
                                    result.url = mediaFiles[i].url;
                                    return result;
                                }
                            }
                        }
                    }
                }
            }
        }
        if (options.mode === 'auto_plugin' && result.method === 'native') {
            return result;
        }
        if (result.method === '' && mediaFiles.length > 0) {
            result.url = mediaFiles[0].url;
        }
        return result;
    },
    formatType: function(url, type) {
        var ext;
        if (url && !type) {
            return this.getTypeFromFile(url);
        } else {
            if (type && ~type.indexOf(';')) {
                return type.substr(0, type.indexOf(';'));
            } else {
                return type;
            }
        }
    },
    getTypeFromFile: function(url) {
        url = url.split('?')[0];
        var ext = url.substring(url.lastIndexOf('.') + 1);
        return (/(mp4|m4v|ogg|ogv|webm|webmv|flv|wmv|mpeg|mov)/gi.test(ext) ? 'video' : 'audio') + '/' + this.getTypeFromExtension(ext);
    },
    getTypeFromExtension: function(ext) {
        switch (ext) {
            case 'mp4':
            case 'm4v':
                return 'mp4';
            case 'webm':
            case 'webma':
            case 'webmv':
                return 'webm';
            case 'ogg':
            case 'oga':
            case 'ogv':
                return 'ogg';
            default:
                return ext;
        }
    },
    createErrorMessage: function(playback, options, poster) {
        var
            htmlMediaElement = playback.htmlMediaElement,
            errorContainer = document.createElement('div');
        errorContainer.className = 'me-cannotplay';
        try {
            errorContainer.style.width = htmlMediaElement.width + 'px';
            errorContainer.style.height = htmlMediaElement.height + 'px';
        } catch (e) {}
        errorContainer.innerHTML = (poster !== '') ? '<a href="' + playback.url + '"><img src="' + poster + '" width="100%" height="100%" /></a>' : '<a href="' + playback.url + '"><span>' + mejs.i18n.t('Download File') + '</span></a>';
        htmlMediaElement.parentNode.insertBefore(errorContainer, htmlMediaElement);
        htmlMediaElement.style.display = 'none';
        options.error(htmlMediaElement);
    },
    createPlugin: function(playback, options, poster, autoplay, preload, controls) {
        var
            htmlMediaElement = playback.htmlMediaElement,
            width = 1,
            height = 1,
            pluginid = 'me_' + playback.method + '_' + (mejs.meIndex++),
            pluginMediaElement = new mejs.PluginMediaElement(pluginid, playback.method, playback.url),
            container = document.createElement('div'),
            specialIEContainer, node, initVars;
        pluginMediaElement.tagName = htmlMediaElement.tagName
        for (var i = 0; i < htmlMediaElement.attributes.length; i++) {
            var attribute = htmlMediaElement.attributes[i];
            if (attribute.specified == true) {
                pluginMediaElement.setAttribute(attribute.name, attribute.value);
            }
        }
        node = htmlMediaElement.parentNode;
        while (node !== null && node.tagName.toLowerCase() != 'body') {
            if (node.parentNode.tagName.toLowerCase() == 'p') {
                node.parentNode.parentNode.insertBefore(node, node.parentNode);
                break;
            }
            node = node.parentNode;
        }
        if (playback.isVideo) {
            width = (options.videoWidth > 0) ? options.videoWidth : (htmlMediaElement.getAttribute('width') !== null) ? htmlMediaElement.getAttribute('width') : options.defaultVideoWidth;
            height = (options.videoHeight > 0) ? options.videoHeight : (htmlMediaElement.getAttribute('height') !== null) ? htmlMediaElement.getAttribute('height') : options.defaultVideoHeight;
            width = mejs.Utility.encodeUrl(width);
            height = mejs.Utility.encodeUrl(height);
        } else {
            if (options.enablePluginDebug) {
                width = 320;
                height = 240;
            }
        }
        pluginMediaElement.success = options.success;
        mejs.MediaPluginBridge.registerPluginElement(pluginid, pluginMediaElement, htmlMediaElement);
        container.className = 'me-plugin';
        container.id = pluginid + '_container';
        if (playback.isVideo) {
            htmlMediaElement.parentNode.insertBefore(container, htmlMediaElement);
        } else {
            document.body.insertBefore(container, document.body.childNodes[0]);
        }
        initVars = ['id=' + pluginid, 'isvideo=' + ((playback.isVideo) ? "true" : "false"), 'autoplay=' + ((autoplay) ? "true" : "false"), 'preload=' + preload, 'width=' + width, 'startvolume=' + options.startVolume, 'timerrate=' + options.timerRate, 'flashstreamer=' + options.flashStreamer, 'height=' + height];
        if (playback.url !== null) {
            if (playback.method == 'flash') {
                initVars.push('file=' + mejs.Utility.encodeUrl(playback.url));
            } else {
                initVars.push('file=' + playback.url);
            }
        }
        if (options.enablePluginDebug) {
            initVars.push('debug=true');
        }
        if (options.enablePluginSmoothing) {
            initVars.push('smoothing=true');
        }
        if (controls) {
            initVars.push('controls=true');
        }
        if (options.pluginVars) {
            initVars = initVars.concat(options.pluginVars);
        }
        switch (playback.method) {
            case 'silverlight':
                container.innerHTML = '<object data="data:application/x-silverlight-2," type="application/x-silverlight-2" id="' + pluginid + '" name="' + pluginid + '" width="' + width + '" height="' + height + '">' + '<param name="initParams" value="' + initVars.join(',') + '" />' + '<param name="windowless" value="true" />' + '<param name="background" value="black" />' + '<param name="minRuntimeVersion" value="3.0.0.0" />' + '<param name="autoUpgrade" value="true" />' + '<param name="source" value="' + options.pluginPath + options.silverlightName + '" />' + '</object>';
                break;
            case 'flash':
                if (mejs.MediaFeatures.isIE) {
                    specialIEContainer = document.createElement('div');
                    container.appendChild(specialIEContainer);
                    specialIEContainer.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="//download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab" ' + 'id="' + pluginid + '" name="' + pluginid + '" width="' + width + '" height="' + height + '">' + '<param name="movie" value="' + options.pluginPath + options.flashName + '?x=' + (new Date()) + '" />' + '<param name="flashvars" value="' + initVars.join('&amp;') + '" />' + '<param name="quality" value="high" />' + '<param name="bgcolor" value="#000000" />' + '<param name="wmode" value="transparent" />' + '<param name="allowScriptAccess" value="always" />' + '<param name="allowFullScreen" value="true" />' + '</object>';
                } else {
                    container.innerHTML = '<embed id="' + pluginid + '" name="' + pluginid + '" ' + 'play="true" ' + 'loop="false" ' + 'quality="high" ' + 'bgcolor="#000000" ' + 'wmode="transparent" ' + 'allowScriptAccess="always" ' + 'allowFullScreen="true" ' + 'type="application/x-shockwave-flash" pluginspage="//www.macromedia.com/go/getflashplayer" ' + 'src="' + options.pluginPath + options.flashName + '" ' + 'flashvars="' + initVars.join('&') + '" ' + 'width="' + width + '" ' + 'height="' + height + '"></embed>';
                }
                break;
            case 'youtube':
                var
                    videoId = playback.url.substr(playback.url.lastIndexOf('=') + 1);
                youtubeSettings = {
                    container: container,
                    containerId: container.id,
                    pluginMediaElement: pluginMediaElement,
                    pluginId: pluginid,
                    videoId: videoId,
                    height: height,
                    width: width
                };
                if (mejs.PluginDetector.hasPluginVersion('flash', [10, 0, 0])) {
                    mejs.YouTubeApi.createFlash(youtubeSettings);
                } else {
                    mejs.YouTubeApi.enqueueIframe(youtubeSettings);
                }
                break;
            case 'vimeo':
                pluginMediaElement.vimeoid = playback.url.substr(playback.url.lastIndexOf('/') + 1);
                container.innerHTML = '<iframe src="http://player.vimeo.com/video/' + pluginMediaElement.vimeoid + '?portrait=0&byline=0&title=0" width="' + width + '" height="' + height + '" frameborder="0"></iframe>';
                break;
        }
        htmlMediaElement.style.display = 'none';
        return pluginMediaElement;
    },
    updateNative: function(playback, options, autoplay, preload) {
        var htmlMediaElement = playback.htmlMediaElement,
            m;
        for (m in mejs.HtmlMediaElement) {
            htmlMediaElement[m] = mejs.HtmlMediaElement[m];
        }
        options.success(htmlMediaElement, htmlMediaElement);
        return htmlMediaElement;
    }
};
mejs.YouTubeApi = {
    isIframeStarted: false,
    isIframeLoaded: false,
    loadIframeApi: function() {
        if (!this.isIframeStarted) {
            var tag = document.createElement('script');
            tag.src = "http://www.youtube.com/player_api";
            var firstScriptTag = document.getElementsByTagName('script')[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
            this.isIframeStarted = true;
        }
    },
    iframeQueue: [],
    enqueueIframe: function(yt) {
        if (this.isLoaded) {
            this.createIframe(yt);
        } else {
            this.loadIframeApi();
            this.iframeQueue.push(yt);
        }
    },
    createIframe: function(settings) {
        var
            pluginMediaElement = settings.pluginMediaElement,
            player = new YT.Player(settings.containerId, {
                height: settings.height,
                width: settings.width,
                videoId: settings.videoId,
                playerVars: {
                    controls: 0
                },
                events: {
                    'onReady': function() {
                        settings.pluginMediaElement.pluginApi = player;
                        mejs.MediaPluginBridge.initPlugin(settings.pluginId);
                        setInterval(function() {
                            mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'timeupdate');
                        }, 250);
                    },
                    'onStateChange': function(e) {
                        mejs.YouTubeApi.handleStateChange(e.data, player, pluginMediaElement);
                    }
                }
            });
    },
    createEvent: function(player, pluginMediaElement, eventName) {
        var obj = {
            type: eventName,
            target: pluginMediaElement
        };
        if (player && player.getDuration) {
            pluginMediaElement.currentTime = obj.currentTime = player.getCurrentTime();
            pluginMediaElement.duration = obj.duration = player.getDuration();
            obj.paused = pluginMediaElement.paused;
            obj.ended = pluginMediaElement.ended;
            obj.muted = player.isMuted();
            obj.volume = player.getVolume() / 100;
            obj.bytesTotal = player.getVideoBytesTotal();
            obj.bufferedBytes = player.getVideoBytesLoaded();
            var bufferedTime = obj.bufferedBytes / obj.bytesTotal * obj.duration;
            obj.target.buffered = obj.buffered = {
                start: function(index) {
                    return 0;
                },
                end: function(index) {
                    return bufferedTime;
                },
                length: 1
            };
        }
        pluginMediaElement.dispatchEvent(obj.type, obj);
    },
    iFrameReady: function() {
        this.isLoaded = true;
        this.isIframeLoaded = true;
        while (this.iframeQueue.length > 0) {
            var settings = this.iframeQueue.pop();
            this.createIframe(settings);
        }
    },
    flashPlayers: {},
    createFlash: function(settings) {
        this.flashPlayers[settings.pluginId] = settings;
        var specialIEContainer, youtubeUrl = 'http://www.youtube.com/apiplayer?enablejsapi=1&amp;playerapiid=' + settings.pluginId + '&amp;version=3&amp;autoplay=0&amp;controls=0&amp;modestbranding=1&loop=0';
        if (mejs.MediaFeatures.isIE) {
            specialIEContainer = document.createElement('div');
            settings.container.appendChild(specialIEContainer);
            specialIEContainer.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="//download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab" ' + 'id="' + settings.pluginId + '" width="' + settings.width + '" height="' + settings.height + '">' + '<param name="movie" value="' + youtubeUrl + '" />' + '<param name="wmode" value="transparent" />' + '<param name="allowScriptAccess" value="always" />' + '<param name="allowFullScreen" value="true" />' + '</object>';
        } else {
            settings.container.innerHTML = '<object type="application/x-shockwave-flash" id="' + settings.pluginId + '" data="' + youtubeUrl + '" ' + 'width="' + settings.width + '" height="' + settings.height + '" style="visibility: visible; ">' + '<param name="allowScriptAccess" value="always">' + '<param name="wmode" value="transparent">' + '</object>';
        }
    },
    flashReady: function(id) {
        var
            settings = this.flashPlayers[id],
            player = document.getElementById(id),
            pluginMediaElement = settings.pluginMediaElement;
        pluginMediaElement.pluginApi = pluginMediaElement.pluginElement = player;
        mejs.MediaPluginBridge.initPlugin(id);
        player.cueVideoById(settings.videoId);
        var callbackName = settings.containerId + '_callback';
        window[callbackName] = function(e) {
            mejs.YouTubeApi.handleStateChange(e, player, pluginMediaElement);
        }
        player.addEventListener('onStateChange', callbackName);
        setInterval(function() {
            mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'timeupdate');
        }, 250);
    },
    handleStateChange: function(youTubeState, player, pluginMediaElement) {
        switch (youTubeState) {
            case -1:
                pluginMediaElement.paused = true;
                pluginMediaElement.ended = true;
                mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'loadedmetadata');
                break;
            case 0:
                pluginMediaElement.paused = false;
                pluginMediaElement.ended = true;
                mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'ended');
                break;
            case 1:
                pluginMediaElement.paused = false;
                pluginMediaElement.ended = false;
                mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'play');
                mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'playing');
                break;
            case 2:
                pluginMediaElement.paused = true;
                pluginMediaElement.ended = false;
                mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'pause');
                break;
            case 3:
                mejs.YouTubeApi.createEvent(player, pluginMediaElement, 'progress');
                break;
            case 5:
                break;
        }
    }
}

function onYouTubePlayerAPIReady() {
    mejs.YouTubeApi.iFrameReady();
}

function onYouTubePlayerReady(id) {
    mejs.YouTubeApi.flashReady(id);
}
window.mejs = mejs;
window.MediaElement = mejs.MediaElement;;
(function($, context, exports, undefined) {
    "use strict";
    var i18n = {
        "locale": {
            "strings": {}
        },
        "methods": {}
    };
    i18n.locale.getLanguage = function() {
        return {
            "language": navigator.language
        };
    };
    i18n.locale.INIT_LANGUAGE = i18n.locale.getLanguage();
    i18n.methods.checkPlain = function(str) {
        var character, regex, replace = {
            '&': '&amp;',
            '"': '&quot;',
            '<': '&lt;',
            '>': '&gt;'
        };
        str = String(str);
        for (character in replace) {
            if (replace.hasOwnProperty(character)) {
                regex = new RegExp(character, 'g');
                str = str.replace(regex, replace[character]);
            }
        }
        return str;
    };
    i18n.methods.formatString = function(str, args) {
        for (var key in args) {
            switch (key.charAt(0)) {
                case '@':
                    args[key] = i18n.methods.checkPlain(args[key]);
                    break;
                case '!':
                    break;
                case '%':
                default:
                    args[key] = '<em class="placeholder">' + i18n.methods.checkPlain(args[key]) + '</em>';
                    break;
            }
            str = str.replace(key, args[key]);
        }
        return str;
    };
    i18n.methods.t = function(str, args, options) {
        if (i18n.locale.strings && i18n.locale.strings[options.context] && i18n.locale.strings[options.context][str]) {
            str = i18n.locale.strings[options.context][str];
        }
        if (args) {
            str = i18n.methods.formatString(str, args);
        }
        return str;
    };
    i18n.t = function(str, args, options) {
        if (typeof str === 'string' && str.length > 0) {
            var lang = i18n.locale.getLanguage();
            options = options || {
                "context": lang.language
            };
            return i18n.methods.t(str, args, options);
        } else {
            throw {
                "name": 'InvalidArgumentException',
                "message": 'First argument is either not a string or empty.'
            }
        }
    };
    exports.i18n = i18n;
}(jQuery, document, mejs));;
(function(exports, undefined) {
    "use strict";
    exports.de = {
        "Fullscreen": "Vollbild",
        "Go Fullscreen": "Vollbild an",
        "Turn off Fullscreen": "Vollbild aus",
        "Close": "SchlieÃŸen"
    };
}(mejs.i18n.locale.strings));
if (typeof jQuery != 'undefined') {
    mejs.$ = jQuery;
} else if (typeof ender != 'undefined') {
    mejs.$ = ender;
}
(function($) {
    mejs.MepDefaults = {
        poster: '',
        defaultVideoWidth: 480,
        defaultVideoHeight: 270,
        videoWidth: -1,
        videoHeight: -1,
        defaultAudioWidth: 400,
        defaultAudioHeight: 30,
        defaultSeekBackwardInterval: function(media) {
            return (media.duration * 0.05);
        },
        defaultSeekForwardInterval: function(media) {
            return (media.duration * 0.05);
        },
        audioWidth: -1,
        audioHeight: -1,
        startVolume: 0.8,
        loop: false,
        autoRewind: true,
        enableAutosize: true,
        alwaysShowHours: false,
        showTimecodeFrameCount: false,
        framesPerSecond: 25,
        autosizeProgress: true,
        alwaysShowControls: false,
        clickToPlayPause: true,
        iPadUseNativeControls: false,
        iPhoneUseNativeControls: false,
        AndroidUseNativeControls: false,
        features: ['playpause', 'current', 'progress', 'duration', 'tracks', 'volume', 'fullscreen'],
        isVideo: true,
        enableKeyboard: true,
        pauseOtherPlayers: true,
        keyActions: [{
            keys: [32, 179],
            action: function(player, media) {
                if (media.paused || media.ended) {
                    media.play();
                } else {
                    media.pause();
                }
            }
        }, {
            keys: [38],
            action: function(player, media) {
                var newVolume = Math.min(media.volume + 0.1, 1);
                media.setVolume(newVolume);
            }
        }, {
            keys: [40],
            action: function(player, media) {
                var newVolume = Math.max(media.volume - 0.1, 0);
                media.setVolume(newVolume);
            }
        }, {
            keys: [37, 227],
            action: function(player, media) {
                if (!isNaN(media.duration) && media.duration > 0) {
                    if (player.isVideo) {
                        player.showControls();
                        player.startControlsTimer();
                    }
                    var newTime = Math.max(media.currentTime - player.options.defaultSeekBackwardInterval(media), 0);
                    media.setCurrentTime(newTime);
                }
            }
        }, {
            keys: [39, 228],
            action: function(player, media) {
                if (!isNaN(media.duration) && media.duration > 0) {
                    if (player.isVideo) {
                        player.showControls();
                        player.startControlsTimer();
                    }
                    var newTime = Math.min(media.currentTime + player.options.defaultSeekForwardInterval(media), media.duration);
                    media.setCurrentTime(newTime);
                }
            }
        }, ]
    };
    mejs.mepIndex = 0;
    mejs.players = [];
    mejs.MediaElementPlayer = function(node, o) {
        if (!(this instanceof mejs.MediaElementPlayer)) {
            return new mejs.MediaElementPlayer(node, o);
        }
        var t = this;
        t.$media = t.$node = $(node);
        t.node = t.media = t.$media[0];
        if (typeof t.node.player != 'undefined') {
            return t.node.player;
        } else {
            t.node.player = t;
        }
        if (typeof o == 'undefined') {
            o = t.$node.data('mejsoptions');
        }
        t.options = $.extend({}, mejs.MepDefaults, o);
        mejs.players.push(t);
        t.init();
        return t;
    };
    mejs.MediaElementPlayer.prototype = {
        hasFocus: false,
        controlsAreVisible: true,
        init: function() {
            var
                t = this,
                mf = mejs.MediaFeatures,
                meOptions = $.extend(true, {}, t.options, {
                    success: function(media, domNode) {
                        t.meReady(media, domNode);
                    },
                    error: function(e) {
                        t.handleError(e);
                    }
                }),
                tagName = t.media.tagName.toLowerCase();
            t.isDynamic = (tagName !== 'audio' && tagName !== 'video');
            if (t.isDynamic) {
                t.isVideo = t.options.isVideo;
            } else {
                t.isVideo = (tagName !== 'audio' && t.options.isVideo);
            }
            if ((mf.isiPad && t.options.iPadUseNativeControls) || (mf.isiPhone && t.options.iPhoneUseNativeControls)) {
                t.$media.attr('controls', 'controls');
                if (mf.isiPad && t.media.getAttribute('autoplay') !== null) {
                    t.media.load();
                    t.media.play();
                }
            } else if (mf.isAndroid && t.AndroidUseNativeControls) {} else {
                t.$media.removeAttr('controls');
                t.id = 'mep_' + mejs.mepIndex++;
                t.container = $('<div id="' + t.id + '" class="mejs-container ' + (mejs.MediaFeatures.svg ? 'svg' : 'no-svg') + '">' + '<div class="mejs-inner">' + '<div class="mejs-mediaelement"></div>' + '<div class="mejs-layers"></div>' + '<div class="mejs-controls"></div>' + '<div class="mejs-clear"></div>' + '</div>' + '</div>').addClass(t.$media[0].className).insertBefore(t.$media);
                t.container.addClass((mf.isAndroid ? 'mejs-android ' : '') +
                    (mf.isiOS ? 'mejs-ios ' : '') +
                    (mf.isiPad ? 'mejs-ipad ' : '') +
                    (mf.isiPhone ? 'mejs-iphone ' : '') +
                    (t.isVideo ? 'mejs-video ' : 'mejs-audio '));
                if (mf.isiOS) {
                    var $newMedia = t.$media.clone();
                    t.container.find('.mejs-mediaelement').append($newMedia);
                    t.$media.remove();
                    t.$node = t.$media = $newMedia;
                    t.node = t.media = $newMedia[0]
                } else {
                    t.container.find('.mejs-mediaelement').append(t.$media);
                }
                t.controls = t.container.find('.mejs-controls');
                t.layers = t.container.find('.mejs-layers');
                var tagType = (t.isVideo ? 'video' : 'audio'),
                    capsTagName = tagType.substring(0, 1).toUpperCase() + tagType.substring(1);
                if (t.options[tagType + 'Width'] > 0 || t.options[tagType + 'Width'].toString().indexOf('%') > -1) {
                    t.width = t.options[tagType + 'Width'];
                } else if (t.media.style.width !== '' && t.media.style.width !== null) {
                    t.width = t.media.style.width;
                } else if (t.media.getAttribute('width') !== null) {
                    t.width = t.$media.attr('width');
                } else {
                    t.width = t.options['default' + capsTagName + 'Width'];
                }
                if (t.options[tagType + 'Height'] > 0 || t.options[tagType + 'Height'].toString().indexOf('%') > -1) {
                    t.height = t.options[tagType + 'Height'];
                } else if (t.media.style.height !== '' && t.media.style.height !== null) {
                    t.height = t.media.style.height;
                } else if (t.$media[0].getAttribute('height') !== null) {
                    t.height = t.$media.attr('height');
                } else {
                    t.height = t.options['default' + capsTagName + 'Height'];
                }
                t.setPlayerSize(t.width, t.height);
                meOptions.pluginWidth = t.height;
                meOptions.pluginHeight = t.width;
            }
            mejs.MediaElement(t.$media[0], meOptions);
            t.container.trigger('controlsshown');
        },
        showControls: function(doAnimation) {
            var t = this;
            doAnimation = typeof doAnimation == 'undefined' || doAnimation;
            if (t.controlsAreVisible)
                return;
            if (doAnimation) {
                t.controls.css('visibility', 'visible').stop(true, true).fadeIn(200, function() {
                    t.controlsAreVisible = true;
                    t.container.trigger('controlsshown');
                });
                t.container.find('.mejs-control').css('visibility', 'visible').stop(true, true).fadeIn(200, function() {
                    t.controlsAreVisible = true;
                });
            } else {
                t.controls.css('visibility', 'visible').css('display', 'block');
                t.container.find('.mejs-control').css('visibility', 'visible').css('display', 'block');
                t.controlsAreVisible = true;
                t.container.trigger('controlsshown');
            }
            t.setControlsSize();
        },
        hideControls: function(doAnimation) {
            var t = this;
            doAnimation = typeof doAnimation == 'undefined' || doAnimation;
            if (!t.controlsAreVisible)
                return;
            if (doAnimation) {
                t.controls.stop(true, true).fadeOut(200, function() {
                    $(this).css('visibility', 'hidden').css('display', 'block');
                    t.controlsAreVisible = false;
                    t.container.trigger('controlshidden');
                });
                t.container.find('.mejs-control').stop(true, true).fadeOut(200, function() {
                    $(this).css('visibility', 'hidden').css('display', 'block');
                });
            } else {
                t.controls.css('visibility', 'hidden').css('display', 'block');
                t.container.find('.mejs-control').css('visibility', 'hidden').css('display', 'block');
                t.controlsAreVisible = false;
                t.container.trigger('controlshidden');
            }
        },
        controlsTimer: null,
        startControlsTimer: function(timeout) {
            var t = this;
            timeout = typeof timeout != 'undefined' ? timeout : 1500;
            t.killControlsTimer('start');
            t.controlsTimer = setTimeout(function() {
                t.hideControls();
                t.killControlsTimer('hide');
            }, timeout);
        },
        killControlsTimer: function(src) {
            var t = this;
            if (t.controlsTimer !== null) {
                clearTimeout(t.controlsTimer);
                delete t.controlsTimer;
                t.controlsTimer = null;
            }
        },
        controlsEnabled: true,
        disableControls: function() {
            var t = this;
            t.killControlsTimer();
            t.hideControls(false);
            this.controlsEnabled = false;
        },
        enableControls: function() {
            var t = this;
            t.showControls(false);
            t.controlsEnabled = true;
        },
        meReady: function(media, domNode) {
            var t = this,
                mf = mejs.MediaFeatures,
                autoplayAttr = domNode.getAttribute('autoplay'),
                autoplay = !(typeof autoplayAttr == 'undefined' || autoplayAttr === null || autoplayAttr === 'false'),
                featureIndex, feature;
            if (t.created)
                return;
            else
                t.created = true;
            t.media = media;
            t.domNode = domNode;
            if (!(mf.isAndroid && t.options.AndroidUseNativeControls) && !(mf.isiPad && t.options.iPadUseNativeControls) && !(mf.isiPhone && t.options.iPhoneUseNativeControls)) {
                t.buildposter(t, t.controls, t.layers, t.media);
                t.buildkeyboard(t, t.controls, t.layers, t.media);
                t.buildoverlays(t, t.controls, t.layers, t.media);
                t.findTracks();
                for (featureIndex in t.options.features) {
                    feature = t.options.features[featureIndex];
                    if (t['build' + feature]) {
                        try {
                            t['build' + feature](t, t.controls, t.layers, t.media);
                        } catch (e) {}
                    }
                }
                t.container.trigger('controlsready');
                t.setPlayerSize(t.width, t.height);
                t.setControlsSize();
                if (t.isVideo) {
                    if (mejs.MediaFeatures.hasTouch) {
                        t.$media.bind('touchstart', function() {
                            if (t.controlsAreVisible) {
                                t.hideControls(false);
                            } else {
                                if (t.controlsEnabled) {
                                    t.showControls(false);
                                }
                            }
                        });
                    } else {
                        t.media.addEventListener('click', function() {
                            if (t.options.clickToPlayPause) {
                                if (t.media.paused) {
                                    t.media.play();
                                } else {
                                    t.media.pause();
                                }
                            }
                        });
                        t.container.bind('mouseenter mouseover', function() {
                            if (t.controlsEnabled) {
                                if (!t.options.alwaysShowControls) {
                                    t.killControlsTimer('enter');
                                    t.showControls();
                                    t.startControlsTimer(2500);
                                }
                            }
                        }).bind('mousemove', function() {
                                if (t.controlsEnabled) {
                                    if (!t.controlsAreVisible) {
                                        t.showControls();
                                    }
                                    if (!t.options.alwaysShowControls) {
                                        t.startControlsTimer(2500);
                                    }
                                }
                            }).bind('mouseleave', function() {
                                if (t.controlsEnabled) {
                                    if (!t.media.paused && !t.options.alwaysShowControls) {
                                        t.startControlsTimer(1000);
                                    }
                                }
                            });
                    }
                    if (autoplay && !t.options.alwaysShowControls) {
                        t.hideControls();
                    }
                    if (t.options.enableAutosize) {
                        t.media.addEventListener('loadedmetadata', function(e) {
                            if (t.options.videoHeight <= 0 && t.domNode.getAttribute('height') === null && !isNaN(e.target.videoHeight)) {
                                t.setPlayerSize(e.target.videoWidth, e.target.videoHeight);
                                t.setControlsSize();
                                t.media.setVideoSize(e.target.videoWidth, e.target.videoHeight);
                            }
                        }, false);
                    }
                }
                media.addEventListener('play', function() {
                    for (var i = 0, il = mejs.players.length; i < il; i++) {
                        var p = mejs.players[i];
                        if (p.id != t.id && t.options.pauseOtherPlayers && !p.paused && !p.ended) {
                            p.pause();
                        }
                        p.hasFocus = false;
                    }
                    t.hasFocus = true;
                }, false);
                t.media.addEventListener('ended', function(e) {
                    if (t.options.autoRewind) {
                        try {
                            t.media.setCurrentTime(0);
                        } catch (exp) {}
                    }
                    t.media.pause();
                    if (t.setProgressRail)
                        t.setProgressRail();
                    if (t.setCurrentRail)
                        t.setCurrentRail();
                    if (t.options.loop) {
                        t.media.play();
                    } else if (!t.options.alwaysShowControls && t.controlsEnabled) {
                        t.showControls();
                    }
                }, false);
                t.media.addEventListener('loadedmetadata', function(e) {
                    if (t.updateDuration) {
                        t.updateDuration();
                    }
                    if (t.updateCurrent) {
                        t.updateCurrent();
                    }
                    if (!t.isFullScreen) {
                        t.setPlayerSize(t.width, t.height);
                        t.setControlsSize();
                    }
                }, false);
                setTimeout(function() {
                    t.setPlayerSize(t.width, t.height);
                    t.setControlsSize();
                }, 50);
                $(window).resize(function() {
                    if (!(t.isFullScreen || (mejs.MediaFeatures.hasTrueNativeFullScreen && document.webkitIsFullScreen))) {
                        t.setPlayerSize(t.width, t.height);
                    }
                    t.setControlsSize();
                });
                if (t.media.pluginType == 'youtube') {
                    t.container.find('.mejs-overlay-play').hide();
                }
            }
            if (autoplay && media.pluginType == 'native') {
                media.load();
                media.play();
            }
            if (t.options.success) {
                if (typeof t.options.success == 'string') {
                    window[t.options.success](t.media, t.domNode, t);
                } else {
                    t.options.success(t.media, t.domNode, t);
                }
            }
        },
        handleError: function(e) {
            var t = this;
            t.controls.hide();
            if (t.options.error) {
                t.options.error(e);
            }
        },
        setPlayerSize: function(width, height) {
            var t = this;
            if (typeof width != 'undefined')
                t.width = width;
            if (typeof height != 'undefined')
                t.height = height;
            if (t.height.toString().indexOf('%') > 0 || t.$node.css('max-width') === '100%' || (t.$node[0].currentStyle && t.$node[0].currentStyle.maxWidth === '100%')) {
                var
                    nativeWidth = t.isVideo ? ((t.media.videoWidth && t.media.videoWidth > 0) ? t.media.videoWidth : t.options.defaultVideoWidth) : t.options.defaultAudioWidth,
                    nativeHeight = t.isVideo ? ((t.media.videoHeight && t.media.videoHeight > 0) ? t.media.videoHeight : t.options.defaultVideoHeight) : t.options.defaultAudioHeight,
                    parentWidth = t.container.parent().closest(':visible').width(),
                    newHeight = t.isVideo || !t.options.autosizeProgress ? parseInt(parentWidth * nativeHeight / nativeWidth, 10) : nativeHeight;
                if (t.container.parent()[0].tagName.toLowerCase() === 'body') {
                    parentWidth = $(window).width();
                    newHeight = $(window).height();
                }
                if (newHeight != 0 && parentWidth != 0) {
                    t.container.width(parentWidth).height(newHeight);
                    t.$media.width('100%').height('100%');
                    t.container.find('object, embed, iframe').width('100%').height('100%');
                    if (t.isVideo) {
                        if (t.media.setVideoSize) {
                            t.media.setVideoSize(parentWidth, newHeight);
                        }
                    }
                    t.layers.children('.mejs-layer').width('100%').height('100%');
                }
            } else {
                t.container.width(t.width).height(t.height);
                t.layers.children('.mejs-layer').width(t.width).height(t.height);
            }
        },
        setControlsSize: function() {
            var t = this,
                usedWidth = 0,
                railWidth = 0,
                rail = t.controls.find('.mejs-time-rail'),
                total = t.controls.find('.mejs-time-total'),
                current = t.controls.find('.mejs-time-current'),
                loaded = t.controls.find('.mejs-time-loaded'),
                others = rail.siblings();
        },
        buildposter: function(player, controls, layers, media) {
            var t = this,
                poster = $('<div class="mejs-poster mejs-layer">' + '</div>').appendTo(layers),
                posterUrl = player.$media.attr('poster');
            if (player.options.poster !== '') {
                posterUrl = player.options.poster;
            }
            if (posterUrl !== '' && posterUrl != null) {
                t.setPoster(posterUrl);
            } else {
                poster.hide();
            }
            media.addEventListener('play', function() {
                poster.hide();
            }, false);
        },
        setPoster: function(url) {
            var t = this,
                posterDiv = t.container.find('.mejs-poster'),
                posterImg = posterDiv.find('img');
            if (posterImg.length == 0) {
                posterImg = $('<img width="100%" height="100%" />').appendTo(posterDiv);
            }
            posterImg.attr('src', url);
        },
        buildoverlays: function(player, controls, layers, media) {
            var t = this;
            if (!player.isVideo)
                return;
            var
                loading = $('<div class="mejs-overlay mejs-layer">' + '<div class="mejs-overlay-loading"><span></span></div>' + '</div>').hide().appendTo(layers),
                error = $('<div class="mejs-overlay mejs-layer">' + '<div class="mejs-overlay-error"></div>' + '</div>').hide().appendTo(layers),
                bigPlay = $('<div class="mejs-overlay mejs-layer mejs-overlay-play">' + '<div class="mejs-overlay-button"></div>' + '</div>').appendTo(layers).click(function() {
                    if (t.options.clickToPlayPause) {
                        if (media.paused) {
                            media.play();
                        } else {
                            media.pause();
                        }
                    }
                });
            media.addEventListener('play', function() {
                bigPlay.hide();
                loading.hide();
                controls.find('.mejs-time-buffering').hide();
                error.hide();
            }, false);
            media.addEventListener('playing', function() {
                bigPlay.hide();
                loading.hide();
                controls.find('.mejs-time-buffering').hide();
                error.hide();
            }, false);
            media.addEventListener('seeking', function() {
                loading.show();
                controls.find('.mejs-time-buffering').show();
            }, false);
            media.addEventListener('seeked', function() {
                loading.hide();
                controls.find('.mejs-time-buffering').hide();
            }, false);
            media.addEventListener('pause', function() {
                if (!mejs.MediaFeatures.isiPhone) {
                    bigPlay.show();
                }
            }, false);
            media.addEventListener('waiting', function() {
                loading.show();
                controls.find('.mejs-time-buffering').show();
            }, false);
            media.addEventListener('loadeddata', function() {
                loading.show();
                controls.find('.mejs-time-buffering').show();
            }, false);
            media.addEventListener('canplay', function() {
                loading.hide();
                controls.find('.mejs-time-buffering').hide();
            }, false);
            media.addEventListener('error', function() {
                loading.hide();
                controls.find('.mejs-time-buffering').hide();
                error.show();
                error.find('mejs-overlay-error').html("Error loading this resource");
            }, false);
        },
        buildkeyboard: function(player, controls, layers, media) {
            var t = this;
            $(document).keydown(function(e) {
                if (player.hasFocus && player.options.enableKeyboard) {
                    for (var i = 0, il = player.options.keyActions.length; i < il; i++) {
                        var keyAction = player.options.keyActions[i];
                        for (var j = 0, jl = keyAction.keys.length; j < jl; j++) {
                            if (e.keyCode == keyAction.keys[j]) {
                                e.preventDefault();
                                keyAction.action(player, media, e.keyCode);
                                return false;
                            }
                        }
                    }
                }
                return true;
            });
            $(document).click(function(event) {
                if ($(event.target).closest('.mejs-container').length == 0) {
                    player.hasFocus = false;
                }
            });
        },
        findTracks: function() {
            var t = this,
                tracktags = t.$media.find('track');
            t.tracks = [];
            tracktags.each(function(index, track) {
                track = $(track);
                t.tracks.push({
                    srclang: track.attr('srclang').toLowerCase(),
                    src: track.attr('src'),
                    kind: track.attr('kind'),
                    label: track.attr('label') || '',
                    entries: [],
                    isLoaded: false
                });
            });
        },
        changeSkin: function(className) {
            this.container[0].className = 'mejs-container ' + className;
            this.setPlayerSize(this.width, this.height);
            this.setControlsSize();
        },
        play: function() {
            this.media.play();
        },
        pause: function() {
            this.media.pause();
        },
        load: function() {
            this.media.load();
        },
        setMuted: function(muted) {
            this.media.setMuted(muted);
        },
        setCurrentTime: function(time) {
            this.media.setCurrentTime(time);
        },
        getCurrentTime: function() {
            return this.media.currentTime;
        },
        setVolume: function(volume) {
            this.media.setVolume(volume);
        },
        getVolume: function() {
            return this.media.volume;
        },
        setSrc: function(src) {
            this.media.setSrc(src);
        },
        remove: function() {
            var t = this;
            if (t.media.pluginType === 'flash') {
                t.media.remove();
            } else if (t.media.pluginType === 'native') {
                t.$media.prop('controls', true);
            }
            if (!t.isDynamic) {
                t.$node.insertBefore(t.container)
            }
            t.container.remove();
        }
    };
    if (typeof jQuery != 'undefined') {
        jQuery.fn.mediaelementplayer = function(options) {
            return this.each(function() {
                new mejs.MediaElementPlayer(this, options);
            });
        };
    }
    $(document).ready(function() {
        $('.mejs-player').mediaelementplayer();
    });
    window.MediaElementPlayer = mejs.MediaElementPlayer;
})(mejs.$);
(function($) {
    $.extend(mejs.MepDefaults, {
        playpauseText: 'Play/Pause'
    });
    $.extend(MediaElementPlayer.prototype, {
        buildplaypause: function(player, controls, layers, media) {
            var
                t = this,
                play = $('<div class="mejs-button mejs-playpause-button mejs-play" >' + '<button type="button" aria-controls="' + t.id + '" title="' + t.options.playpauseText + '"></button>' + '<span class="tooltip" style="display:none;"><span class="arrow bottom"></span><span>' + t.options.playpauseText + '</span></span></div>').appendTo(controls).click(function(e) {
                    e.preventDefault();
                    if (media.paused) {
                        media.play();
                    } else {
                        media.pause();
                    }
                    return false;
                });
            media.addEventListener('play', function() {
                play.removeClass('mejs-play').addClass('mejs-pause');
            }, false);
            media.addEventListener('playing', function() {
                play.removeClass('mejs-play').addClass('mejs-pause');
            }, false);
            media.addEventListener('pause', function() {
                play.removeClass('mejs-pause').addClass('mejs-play');
            }, false);
            media.addEventListener('paused', function() {
                play.removeClass('mejs-pause').addClass('mejs-play');
            }, false);
        }
    });
})(mejs.$);
(function($) {
    $.extend(mejs.MepDefaults, {
        stopText: 'Stop'
    });
    $.extend(MediaElementPlayer.prototype, {
        buildstop: function(player, controls, layers, media) {
            var t = this,
                stop = $('<div class="mejs-button mejs-stop-button mejs-stop">' + '<button type="button" aria-controls="' + t.id + '" title="' + t.options.stopText + '"></button>' + '</div>').appendTo(controls).click(function() {
                    if (!media.paused) {
                        media.pause();
                    }
                    if (media.currentTime > 0) {
                        media.setCurrentTime(0);
                        media.pause();
                        controls.find('.mejs-time-current').width('0px');
                        controls.find('.mejs-time-handle').css('left', '0px');
                        controls.find('.mejs-time-float-current').html(mejs.Utility.secondsToTimeCode(0));
                        controls.find('.mejs-currenttime').html(mejs.Utility.secondsToTimeCode(0));
                        layers.find('.mejs-poster').show();
                    }
                });
        }
    });
})(mejs.$);
(function($) {
    $.extend(MediaElementPlayer.prototype, {
        buildprogress: function(player, controls, layers, media) {
            $('<div class="mejs-time-rail">' + '<span class="mejs-time-total">' + '<span class="mejs-time-buffering"></span>' + '<span class="mejs-time-loaded"></span>' + '<span class="mejs-time-current"></span>' + '<span class="mejs-time-handle"></span>' + '<span class="tooltip" style="display:none;"><span class="arrow bottom "></span><span class="text">' + '<b class="mejs-time-float-current">00:00</b>' + '</span>' + '</span>' + '</span></div>').appendTo(controls);
            controls.find('.mejs-time-buffering').hide();
            var
                t = this,
                total = controls.find('.mejs-time-total'),
                loaded = controls.find('.mejs-time-loaded'),
                current = controls.find('.mejs-time-current'),
                handle = controls.find('.mejs-time-handle'),
                timefloat = controls.find('.mejs-time-float'),
                timeTooltip = controls.find('.mejs-time-total .tooltip');
            timefloatcurrent = controls.find('.mejs-time-float-current'), handleMouseMove = function(e) {
                var x = e.pageX,
                    offset = total.offset(),
                    width = total.outerWidth(true),
                    percentage = 0,
                    newTime = 0,
                    pos = 0;
                if (media.duration) {
                    if (x < offset.left) {
                        x = offset.left;
                    } else if (x > width + offset.left) {
                        x = width + offset.left;
                    }
                    pos = x - offset.left;
                    percentage = (pos / width);
                    newTime = (percentage <= 0.02) ? 0 : percentage * media.duration;
                    if (mouseIsDown && newTime !== media.currentTime) {
                        media.setCurrentTime(newTime);
                    }
                    if (!mejs.MediaFeatures.hasTouch) {
                        timefloat.css('left', pos);
                        timefloatcurrent.html(mejs.Utility.secondsToTimeCode(newTime));
                        timefloat.show();
                    }
                }
            }, mouseIsDown = false, mouseIsOver = false;
            total.bind('mousedown', function(e) {
                if (e.which === 1) {
                    mouseIsDown = true;
                    handleMouseMove(e);
                    $(document).bind('mousemove.dur', function(e) {
                        handleMouseMove(e);
                    }).bind('mouseup.dur', function(e) {
                            mouseIsDown = false;
                            timefloat.hide();
                            $(document).unbind('.dur');
                        });
                    return false;
                }
            }).bind('mouseenter', function(e) {
                    mouseIsOver = true;
                    $(document).bind('mousemove.dur', function(e) {
                        handleMouseMove(e);
                    });
                    if (!mejs.MediaFeatures.hasTouch) {
                        timefloat.show();
                    }
                }).bind('mouseleave', function(e) {
                    mouseIsOver = false;
                    if (!mouseIsDown) {
                        $(document).unbind('.dur');
                        timefloat.hide();
                    }
                });
            media.addEventListener('progress', function(e) {
                player.setProgressRail(e);
                player.setCurrentRail(e);
            }, false);
            media.addEventListener('timeupdate', function(e) {
                player.setProgressRail(e);
                player.setCurrentRail(e);
            }, false);
            t.loaded = loaded;
            t.total = total;
            t.current = current;
            t.handle = handle;
            t.timetooltip = timeTooltip;
        },
        setProgressRail: function(e) {
            var
                t = this,
                target = (e != undefined) ? e.target : t.media,
                percent = null;
            if (target && target.buffered && target.buffered.length > 0 && target.buffered.end && target.duration) {
                percent = target.buffered.end(0) / target.duration;
            } else if (target && target.bytesTotal != undefined && target.bytesTotal > 0 && target.bufferedBytes != undefined) {
                percent = target.bufferedBytes / target.bytesTotal;
            } else if (e && e.lengthComputable && e.total != 0) {
                percent = e.loaded / e.total;
            }
            if (percent !== null) {
                percent = Math.min(1, Math.max(0, percent));
                if (t.loaded && t.total) {
                    t.loaded.width(t.total.width() * percent);
                }
            }
        },
        setCurrentRail: function() {
            var t = this;
            if (t.media.currentTime != undefined && t.media.duration) {
                if (t.total && t.handle) {
                    var
                        newWidth = t.total.width() * t.media.currentTime / t.media.duration,
                        handlePos = newWidth - (t.handle.outerWidth(true) / 2);
                    t.current.width(newWidth);
                    t.handle.css('left', handlePos + 5);
                    t.timetooltip.css('left', handlePos - 12);
                }
            }
        }
    });
})(mejs.$);
(function($) {
    $.extend(mejs.MepDefaults, {
        duration: -1,
        timeAndDurationSeparator: ' <span> | </span> '
    });
    $.extend(MediaElementPlayer.prototype, {
        buildcurrent: function(player, controls, layers, media) {
            var t = this;
            $('<div class="mejs-time">' + '<span class="mejs-currenttime">' + (player.options.alwaysShowHours ? '00:' : '') + (player.options.showTimecodeFrameCount ? '00:00:00' : '00:00') + '</span>' + '</div>').appendTo(controls);
            t.currenttime = t.controls.find('.mejs-currenttime');
            media.addEventListener('timeupdate', function() {
                player.updateCurrent();
            }, false);
        },
        buildduration: function(player, controls, layers, media) {
            var t = this;
            if (controls.children().last().find('.mejs-currenttime').length > 0) {
                $(t.options.timeAndDurationSeparator + '<span class="mejs-duration">' +
                    (t.options.duration > 0 ? mejs.Utility.secondsToTimeCode(t.options.duration, t.options.alwaysShowHours || t.media.duration > 3600, t.options.showTimecodeFrameCount, t.options.framesPerSecond || 25) : ((player.options.alwaysShowHours ? '00:' : '') + (player.options.showTimecodeFrameCount ? '00:00:00' : '00:00'))) + '</span>').appendTo(controls.find('.mejs-time'));
            } else {
                controls.find('.mejs-currenttime').parent().addClass('mejs-currenttime-container');
                $('<div class="mejs-time mejs-duration-container">' + '<span class="mejs-duration">' +
                    (t.options.duration > 0 ? mejs.Utility.secondsToTimeCode(t.options.duration, t.options.alwaysShowHours || t.media.duration > 3600, t.options.showTimecodeFrameCount, t.options.framesPerSecond || 25) : ((player.options.alwaysShowHours ? '00:' : '') + (player.options.showTimecodeFrameCount ? '00:00:00' : '00:00'))) + '</span>' + '</div>').appendTo(controls);
            }
            t.durationD = t.controls.find('.mejs-duration');
            media.addEventListener('timeupdate', function() {
                player.updateDuration();
            }, false);
        },
        updateCurrent: function() {
            var t = this;
            if (t.currenttime) {
                t.currenttime.html(mejs.Utility.secondsToTimeCode(t.media.currentTime, t.options.alwaysShowHours || t.media.duration > 3600, t.options.showTimecodeFrameCount, t.options.framesPerSecond || 25));
            }
        },
        updateDuration: function() {
            var t = this;
            t.container.toggleClass("mejs-long-video", t.media.duration > 3600);
            if (t.media.duration && t.durationD) {
                t.durationD.html(mejs.Utility.secondsToTimeCode(t.media.duration, t.options.alwaysShowHours, t.options.showTimecodeFrameCount, t.options.framesPerSecond || 25));
            }
        }
    });
})(mejs.$);
(function($) {
    $.extend(mejs.MepDefaults, {
        muteText: 'Mute Toggle',
        hideVolumeOnTouchDevices: true,
        audioVolume: 'horizontal',
        videoVolume: 'vertical'
    });
    $.extend(MediaElementPlayer.prototype, {
        buildvolume: function(player, controls, layers, media) {
            if (mejs.MediaFeatures.hasTouch && this.options.hideVolumeOnTouchDevices)
                return;
            var t = this,
                mode = (t.isVideo) ? t.options.videoVolume : t.options.audioVolume,
                mute = (mode == 'horizontal') ? $('<div class="mejs-button mejs-volume-button mejs-mute">' + '<button type="button" aria-controls="' + t.id + '" title="' + t.options.muteText + '"></button>' + '</div>' + '<div class="mejs-horizontal-volume-slider">' + '<div class="mejs-horizontal-volume-total"></div>' + '<div class="mejs-horizontal-volume-current"></div>' + '<div class="mejs-horizontal-volume-handle"></div>' + '</div>').appendTo(controls) : $('<div class="mejs-button mejs-volume-button mejs-mute">' + '<button type="button" aria-controls="' + t.id + '" title="' + t.options.muteText + '"></button>' + '<div class="mejs-volume-slider">' + '<div class="mejs-volume-total"></div>' + '<div class="mejs-volume-current"></div>' + '<div class="mejs-volume-handle"></div>' + '</div>' + '</div>').appendTo(controls),
                volumeSlider = t.container.find('.mejs-volume-slider, .mejs-horizontal-volume-slider'),
                volumeTotal = t.container.find('.mejs-volume-total, .mejs-horizontal-volume-total'),
                volumeCurrent = t.container.find('.mejs-volume-current, .mejs-horizontal-volume-current'),
                volumeHandle = t.container.find('.mejs-volume-handle, .mejs-horizontal-volume-handle'),
                positionVolumeHandle = function(volume, secondTry) {
                    if (!volumeSlider.is(':visible') && typeof secondTry == 'undefined') {
                        volumeSlider.show();
                        positionVolumeHandle(volume, true);
                        volumeSlider.hide()
                        return;
                    }
                    volume = Math.max(0, volume);
                    volume = Math.min(volume, 1);
                    if (volume == 0) {
                        mute.removeClass('mejs-mute').addClass('mejs-unmute');
                    } else {
                        mute.removeClass('mejs-unmute').addClass('mejs-mute');
                    }
                    if (mode == 'vertical') {
                        var
                            totalHeight = volumeTotal.height(),
                            totalPosition = volumeTotal.position(),
                            newTop = totalHeight - (totalHeight * volume);
                        volumeHandle.css('top', Math.round(totalPosition.top + newTop - (volumeHandle.height() / 2)));
                        volumeCurrent.height(totalHeight - newTop);
                        volumeCurrent.css('top', totalPosition.top + newTop);
                    } else {
                        var
                            totalWidth = volumeTotal.width(),
                            totalPosition = volumeTotal.position(),
                            newLeft = totalWidth * volume;
                        volumeHandle.css('left', Math.round(totalPosition.left + newLeft - (volumeHandle.width() / 2)));
                        volumeCurrent.width(Math.round(newLeft));
                    }
                }, handleVolumeMove = function(e) {
                    var volume = null,
                        totalOffset = volumeTotal.offset();
                    if (mode == 'vertical') {
                        var
                            railHeight = volumeTotal.height(),
                            totalTop = parseInt(volumeTotal.css('top').replace(/px/, ''), 10),
                            newY = e.pageY - totalOffset.top;
                        volume = (railHeight - newY) / railHeight;
                        if (totalOffset.top == 0 || totalOffset.left == 0)
                            return;
                    } else {
                        var
                            railWidth = volumeTotal.width(),
                            newX = e.pageX - totalOffset.left;
                        volume = newX / railWidth;
                    }
                    volume = Math.max(0, volume);
                    volume = Math.min(volume, 1);
                    positionVolumeHandle(volume);
                    if (volume == 0) {
                        media.setMuted(true);
                    } else {
                        media.setMuted(false);
                    }
                    media.setVolume(volume);
                }, mouseIsDown = false,
                mouseIsOver = false;
            mute.hover(function() {
                volumeSlider.show();
                mouseIsOver = true;
            }, function() {
                mouseIsOver = false;
                if (!mouseIsDown && mode == 'vertical') {
                    volumeSlider.hide();
                }
            });
            volumeSlider.bind('mouseover', function() {
                mouseIsOver = true;
            }).bind('mousedown', function(e) {
                    handleVolumeMove(e);
                    $(document).bind('mousemove.vol', function(e) {
                        handleVolumeMove(e);
                    }).bind('mouseup.vol', function() {
                            mouseIsDown = false;
                            $(document).unbind('.vol');
                            if (!mouseIsOver && mode == 'vertical') {
                                volumeSlider.hide();
                            }
                        });
                    mouseIsDown = true;
                    return false;
                });
            mute.find('button').click(function() {
                media.setMuted(!media.muted);
            });
            media.addEventListener('volumechange', function(e) {
                if (!mouseIsDown) {
                    if (media.muted) {
                        positionVolumeHandle(0);
                        mute.removeClass('mejs-mute').addClass('mejs-unmute');
                    } else {
                        positionVolumeHandle(media.volume);
                        mute.removeClass('mejs-unmute').addClass('mejs-mute');
                    }
                }
            }, false);
            if (t.container.is(':visible')) {
                positionVolumeHandle(player.options.startVolume);
                if (media.pluginType === 'native') {
                    media.setVolume(player.options.startVolume);
                }
            }
        }
    });
})(mejs.$);
(function($) {
    $.extend(mejs.MepDefaults, {
        usePluginFullScreen: true,
        newWindowCallback: function() {
            return '';
        },
        fullscreenText: mejs.i18n.t('Fullscreen')
    });
    $.extend(MediaElementPlayer.prototype, {
        isFullScreen: false,
        isNativeFullScreen: false,
        docStyleOverflow: null,
        isInIframe: false,
        buildfullscreen: function(player, controls, layers, media) {
            if (!player.isVideo)
                return;
            player.isInIframe = (window.location != window.parent.location);
            if (mejs.MediaFeatures.hasTrueNativeFullScreen) {
                var target = null;
                if (mejs.MediaFeatures.hasMozNativeFullScreen) {
                    target = $(document);
                } else {
                    target = player.container;
                }
                target.bind(mejs.MediaFeatures.fullScreenEventName, function(e) {
                    if (mejs.MediaFeatures.isFullScreen()) {
                        player.isNativeFullScreen = true;
                        player.setControlsSize();
                    } else {
                        player.isNativeFullScreen = false;
                        player.exitFullScreen();
                    }
                });
            }
            var t = this,
                normalHeight = 0,
                normalWidth = 0,
                container = player.container,
                fullscreenBtn = $('<div class="mejs-button mejs-fullscreen-button">' + '<button type="button" aria-controls="' + t.id + '" title="' + t.options.fullscreenText + '"></button>' + '<span class="tooltip" style="display:none;"><span class="arrow bottom "></span><span>' + t.options.fullscreenText + '</span></span></div>').appendTo(controls);
            if (t.media.pluginType === 'native' || (!t.options.usePluginFullScreen && !mejs.MediaFeatures.isFirefox)) {
                fullscreenBtn.click(function() {
                    var isFullScreen = (mejs.MediaFeatures.hasTrueNativeFullScreen && mejs.MediaFeatures.isFullScreen()) || player.isFullScreen;
                    if (isFullScreen) {
                        player.exitFullScreen();
                    } else {
                        player.enterFullScreen();
                    }
                });
            } else {
                var hideTimeout = null,
                    supportsPointerEvents = (function() {
                        var element = document.createElement('x'),
                            documentElement = document.documentElement,
                            getComputedStyle = window.getComputedStyle,
                            supports;
                        if (!('pointerEvents' in element.style)) {
                            return false;
                        }
                        element.style.pointerEvents = 'auto';
                        element.style.pointerEvents = 'x';
                        documentElement.appendChild(element);
                        supports = getComputedStyle && getComputedStyle(element, '').pointerEvents === 'auto';
                        documentElement.removeChild(element);
                        return !!supports;
                    })();
                if (supportsPointerEvents && !mejs.MediaFeatures.isOpera) {
                    var fullscreenIsDisabled = false,
                        restoreControls = function() {
                            if (fullscreenIsDisabled) {
                                videoHoverDiv.hide();
                                controlsLeftHoverDiv.hide();
                                controlsRightHoverDiv.hide();
                                fullscreenBtn.css('pointer-events', '');
                                t.controls.css('pointer-events', '');
                                fullscreenIsDisabled = false;
                            }
                        }, videoHoverDiv = $('<div class="mejs-fullscreen-hover" />').appendTo(t.container).mouseover(restoreControls),
                        controlsLeftHoverDiv = $('<div class="mejs-fullscreen-hover"  />').appendTo(t.container).mouseover(restoreControls),
                        controlsRightHoverDiv = $('<div class="mejs-fullscreen-hover"  />').appendTo(t.container).mouseover(restoreControls),
                        positionHoverDivs = function() {
                            var style = {
                                position: 'absolute',
                                top: 0,
                                left: 0
                            };
                            videoHoverDiv.css(style);
                            controlsLeftHoverDiv.css(style);
                            controlsRightHoverDiv.css(style);
                            videoHoverDiv.width(t.container.width()).height(t.container.height() - t.controls.height());
                            var fullScreenBtnOffset = fullscreenBtn.offset().left - t.container.offset().left;
                            fullScreenBtnWidth = fullscreenBtn.outerWidth(true);
                            controlsLeftHoverDiv.width(fullScreenBtnOffset).height(t.controls.height()).css({
                                top: t.container.height() - t.controls.height()
                            });
                            controlsRightHoverDiv.width(t.container.width() - fullScreenBtnOffset - fullScreenBtnWidth).height(t.controls.height()).css({
                                top: t.container.height() - t.controls.height(),
                                left: fullScreenBtnOffset + fullScreenBtnWidth
                            });
                        };
                    $(document).resize(function() {
                        positionHoverDivs();
                    });
                    fullscreenBtn.mouseover(function() {
                        if (!t.isFullScreen) {
                            var buttonPos = fullscreenBtn.offset(),
                                containerPos = player.container.offset();
                            media.positionFullscreenButton(buttonPos.left - containerPos.left, buttonPos.top - containerPos.top, false);
                            fullscreenBtn.css('pointer-events', 'none');
                            t.controls.css('pointer-events', 'none');
                            videoHoverDiv.show();
                            controlsRightHoverDiv.show();
                            controlsLeftHoverDiv.show();
                            positionHoverDivs();
                            fullscreenIsDisabled = true;
                        }
                    });
                    media.addEventListener('fullscreenchange', function(e) {
                        restoreControls();
                    });
                    $(document).mousemove(function(e) {
                        if (fullscreenIsDisabled) {
                            var fullscreenBtnPos = fullscreenBtn.offset();
                            if (e.pageY < fullscreenBtnPos.top || e.pageY > fullscreenBtnPos.top + fullscreenBtn.outerHeight(true) || e.pageX < fullscreenBtnPos.left || e.pageX > fullscreenBtnPos.left + fullscreenBtn.outerWidth(true)) {
                                fullscreenBtn.css('pointer-events', '');
                                t.controls.css('pointer-events', '');
                                fullscreenIsDisabled = false;
                            }
                        }
                    });
                } else {
                    fullscreenBtn.mouseover(function() {
                        if (hideTimeout !== null) {
                            clearTimeout(hideTimeout);
                            delete hideTimeout;
                        }
                        var buttonPos = fullscreenBtn.offset(),
                            containerPos = player.container.offset();
                        media.positionFullscreenButton(buttonPos.left - containerPos.left, buttonPos.top - containerPos.top, true);
                    }).mouseout(function() {
                            if (hideTimeout !== null) {
                                clearTimeout(hideTimeout);
                                delete hideTimeout;
                            }
                            hideTimeout = setTimeout(function() {
                                media.hideFullscreenButton();
                            }, 1500);
                        });
                }
            }
            player.fullscreenBtn = fullscreenBtn;
            $(document).bind('keydown', function(e) {
                if (((mejs.MediaFeatures.hasTrueNativeFullScreen && mejs.MediaFeatures.isFullScreen()) || t.isFullScreen) && e.keyCode == 27) {
                    player.exitFullScreen();
                }
            });
        },
        enterFullScreen: function() {
            var t = this;
            if (t.media.pluginType !== 'native' && (mejs.MediaFeatures.isFirefox || t.options.usePluginFullScreen)) {
                return;
            }
            docStyleOverflow = document.documentElement.style.overflow;
            document.documentElement.style.overflow = 'hidden';
            normalHeight = t.container.height();
            normalWidth = t.container.width();
            if (t.media.pluginType === 'native') {
                if (mejs.MediaFeatures.hasTrueNativeFullScreen) {
                    mejs.MediaFeatures.requestFullScreen(t.container[0]);
                    if (t.isInIframe) {
                        setTimeout(function checkFullscreen() {
                            if (t.isNativeFullScreen) {
                                if ($(window).width() !== screen.width) {
                                    t.exitFullScreen();
                                } else {
                                    setTimeout(checkFullscreen, 500);
                                }
                            }
                        }, 500);
                    }
                } else if (mejs.MediaFeatures.hasSemiNativeFullScreen) {
                    t.media.webkitEnterFullscreen();
                    return;
                }
            }
            if (t.isInIframe) {
                var url = t.options.newWindowCallback(this);
                if (url !== '') {
                    if (!mejs.MediaFeatures.hasTrueNativeFullScreen) {
                        t.pause();
                        window.open(url, t.id, 'top=0,left=0,width=' + screen.availWidth + ',height=' + screen.availHeight + ',resizable=yes,scrollbars=no,status=no,toolbar=no');
                        return;
                    } else {
                        setTimeout(function() {
                            if (!t.isNativeFullScreen) {
                                t.pause();
                                window.open(url, t.id, 'top=0,left=0,width=' + screen.availWidth + ',height=' + screen.availHeight + ',resizable=yes,scrollbars=no,status=no,toolbar=no');
                            }
                        }, 250);
                    }
                }
            }
            t.container.addClass('mejs-container-fullscreen').width('100%').height('100%');
            setTimeout(function() {
                t.container.css({
                    width: '100%',
                    height: '100%'
                });
                t.setControlsSize();
            }, 500);
            if (t.pluginType === 'native') {
                t.$media.width('100%').height('100%');
            } else {
                t.container.find('object, embed, iframe').width('100%').height('100%');
                t.media.setVideoSize($(window).width(), $(window).height());
            }
            t.layers.children('div').width('100%').height('100%');
            if (t.fullscreenBtn) {
                t.fullscreenBtn.removeClass('mejs-fullscreen').addClass('mejs-unfullscreen');
            }
            t.setControlsSize();
            t.isFullScreen = true;
        },
        exitFullScreen: function() {
            var t = this;
            if (t.media.pluginType !== 'native' && mejs.MediaFeatures.isFirefox) {
                t.media.setFullscreen(false);
                return;
            }
            if (mejs.MediaFeatures.hasTrueNativeFullScreen && (mejs.MediaFeatures.isFullScreen() || t.isFullScreen)) {
                mejs.MediaFeatures.cancelFullScreen();
            }
            document.documentElement.style.overflow = docStyleOverflow;
            t.container.removeClass('mejs-container-fullscreen').width(normalWidth).height(normalHeight);
            if (t.pluginType === 'native') {
                t.$media.width(normalWidth).height(normalHeight);
            } else {
                t.container.find('object embed').width(normalWidth).height(normalHeight);
                t.media.setVideoSize(normalWidth, normalHeight);
            }
            t.layers.children('div').width(normalWidth).height(normalHeight);
            t.fullscreenBtn.removeClass('mejs-unfullscreen').addClass('mejs-fullscreen');
            t.setControlsSize();
            t.isFullScreen = false;
            t.repositionControls();
        },
        repositionControls: function() {
            var t = this;
            if ($('#overlayBlock').find('.mejs-mediaelement').length) {
                t.getWidth = $('.mejs-container').width();
                t.getHeight = $('.mejs-container').height();
                t.newleftPos = ((t.getWidth - 432) / 2) / t.getWidth;
                t.playBtnPos = (t.getHeight / 2) - 20;
                $('.mejs-controls').css({
                    'left': t.newleftPos * 100 + '%'
                });
                $('.mejs-overlay-button').css({
                    'margin-top': t.playBtnPos
                });
            }
        }
    });
})(mejs.$);
(function($) {
    $.extend(mejs.MepDefaults, {
        startLanguage: '',
        tracksText: 'Captions/Subtitles'
    });
    $.extend(MediaElementPlayer.prototype, {
        hasChapters: false,
        buildtracks: function(player, controls, layers, media) {
            if (!player.isVideo)
                return;
            if (player.tracks.length == 0)
                return;
            var t = this,
                i, options = '';
            player.chapters = $('<div class="mejs-chapters mejs-layer"></div>').prependTo(layers).hide();
            player.captions = $('<div class="mejs-captions-layer mejs-layer visuallyhidden"><div class="mejs-captions-position"><span class="mejs-captions-text"></span></div></div>').prependTo(layers).hide();
            player.captionsText = player.captions.find('.mejs-captions-text');
            player.captionsButton = $('<div class="mejs-button mejs-captions-button visuallyhidden">' + '<button class=" visuallyhidden" type="button" aria-controls="' + t.id + '" title="' + t.options.tracksText + '"></button>' + '<div class="mejs-captions-selector">' + '<ul>' + '<li>' + '<input type="radio" name="' + player.id + '_captions" id="' + player.id + '_captions_none" value="none" checked="checked" />' + '<label for="' + player.id + '_captions_none">None</label>' + '</li>' + '</ul>' + '</div>' + '</div>').appendTo(controls).hover(function() {
                $(this).find('.mejs-captions-selector').css('visibility', 'hidden');
            }, function() {
                $(this).find('.mejs-captions-selector').css('visibility', 'hidden');
            }).delegate('input[type=radio]', 'click', function() {
                    lang = this.value;
                    if (lang == 'none') {
                        player.selectedTrack = null;
                    } else {
                        for (i = 0; i < player.tracks.length; i++) {
                            if (player.tracks[i].srclang == lang) {
                                player.selectedTrack = player.tracks[i];
                                player.captions.attr('lang', player.selectedTrack.srclang);
                                player.displayCaptions();
                                break;
                            }
                        }
                    }
                });
            if (!player.options.alwaysShowControls) {
                player.container.bind('controlsshown', function() {
                    player.container.find('.mejs-captions-position').addClass('mejs-captions-position-hover');
                }).bind('controlshidden', function() {
                        if (!media.paused) {
                            player.container.find('.mejs-captions-position').removeClass('mejs-captions-position-hover');
                        }
                    });
            } else {
                player.container.find('.mejs-captions-position').addClass('mejs-captions-position-hover');
            }
            player.trackToLoad = -1;
            player.selectedTrack = null;
            player.isLoadingTrack = false;
            for (i = 0; i < player.tracks.length; i++) {
                if (player.tracks[i].kind == 'subtitles') {
                    player.addTrackButton(player.tracks[i].srclang, player.tracks[i].label);
                }
            }
            player.loadNextTrack();
            media.addEventListener('timeupdate', function(e) {
                player.displayCaptions();
            }, false);
            media.addEventListener('loadedmetadata', function(e) {
                player.displayChapters();
            }, false);
            player.container.hover(function() {
                if (player.hasChapters) {
                    player.chapters.css('visibility', 'visible');
                    player.chapters.fadeIn(200).height(player.chapters.find('.mejs-chapter').outerHeight());
                }
            }, function() {
                if (player.hasChapters && !media.paused) {
                    player.chapters.fadeOut(200, function() {
                        $(this).css('visibility', 'hidden');
                        $(this).css('display', 'block');
                    });
                }
            });
            if (player.node.getAttribute('autoplay') !== null) {
                player.chapters.css('visibility', 'hidden');
            }
        },
        loadNextTrack: function() {
            var t = this;
            t.trackToLoad++;
            if (t.trackToLoad < t.tracks.length) {
                t.isLoadingTrack = true;
                t.loadTrack(t.trackToLoad);
            } else {
                t.isLoadingTrack = false;
            }
        },
        loadTrack: function(index) {
            var
                t = this,
                track = t.tracks[index],
                after = function() {
                    track.isLoaded = true;
                    t.enableTrackButton(track.srclang, track.label);
                    t.loadNextTrack();
                };
            $.ajax({
                url: track.src,
                dataType: "text",
                success: function(d) {
                    if (typeof d == "string" && (/<tt\s+xml/ig).exec(d)) {
                        track.entries = mejs.TrackFormatParser.dfxp.parse(d);
                    } else {
                        track.entries = mejs.TrackFormatParser.webvvt.parse(d);
                    }
                    after();
                    if (track.kind == 'chapters') {
                        t.media.addEventListener('play', function(e) {
                            if (t.media.duration > 0) {
                                t.displayChapters(track);
                            }
                        }, false);
                    }
                },
                error: function() {
                    t.loadNextTrack();
                }
            });
        },
        enableTrackButton: function(lang, label) {
            var t = this;
            if (label === '') {
                label = mejs.language.codes[lang] || lang;
            }
            t.captionsButton.find('input[value=' + lang + ']').prop('disabled', false).siblings('label').html(label);
            if (t.options.startLanguage == lang) {
                $('#' + t.id + '_captions_' + lang).click();
            }
            t.adjustLanguageBox();
        },
        addTrackButton: function(lang, label) {
            var t = this;
            if (label === '') {
                label = mejs.language.codes[lang] || lang;
            }
            t.captionsButton.find('ul').append($('<li>' + '<input type="radio" name="' + t.id + '_captions" id="' + t.id + '_captions_' + lang + '" value="' + lang + '" disabled="disabled" />' + '<label for="' + t.id + '_captions_' + lang + '">' + label + ' (loading)' + '</label>' + '</li>'));
            t.adjustLanguageBox();
            t.container.find('.mejs-captions-translations option[value=' + lang + ']').remove();
        },
        adjustLanguageBox: function() {
            var t = this;
            t.captionsButton.find('.mejs-captions-selector').height(t.captionsButton.find('.mejs-captions-selector ul').outerHeight(true) +
                t.captionsButton.find('.mejs-captions-translations').outerHeight(true));
        },
        displayCaptions: function() {
            if (typeof this.tracks == 'undefined')
                return;
            var
                t = this,
                i, track = t.selectedTrack;
            if (track != null && track.isLoaded) {
                for (i = 0; i < track.entries.times.length; i++) {
                    if (t.media.currentTime >= track.entries.times[i].start && t.media.currentTime <= track.entries.times[i].stop) {
                        t.captionsText.html(track.entries.text[i]);
                        t.captions.show().height(0);
                        return;
                    }
                }
                t.captions.hide();
            } else {
                t.captions.hide();
            }
        },
        displayChapters: function() {
            var
                t = this,
                i;
            for (i = 0; i < t.tracks.length; i++) {
                if (t.tracks[i].kind == 'chapters' && t.tracks[i].isLoaded) {
                    t.drawChapters(t.tracks[i]);
                    t.hasChapters = true;
                    break;
                }
            }
        },
        drawChapters: function(chapters) {
            var
                t = this,
                i, dur, percent = 0,
                usedPercent = 0;
            t.chapters.empty();
            for (i = 0; i < chapters.entries.times.length; i++) {
                dur = chapters.entries.times[i].stop - chapters.entries.times[i].start;
                percent = Math.floor(dur / t.media.duration * 100);
                if (percent + usedPercent > 100 || i == chapters.entries.times.length - 1 && percent + usedPercent < 100) {
                    percent = 100 - usedPercent;
                }
                t.chapters.append($('<div class="mejs-chapter" rel="' + chapters.entries.times[i].start + '" style="left: ' + usedPercent.toString() + '%;width: ' + percent.toString() + '%;">' + '<div class="mejs-chapter-block' + ((i == chapters.entries.times.length - 1) ? ' mejs-chapter-block-last' : '') + '">' + '<span class="ch-title">' + chapters.entries.text[i] + '</span>' + '<span class="ch-time">' + mejs.Utility.secondsToTimeCode(chapters.entries.times[i].start) + '&ndash;' + mejs.Utility.secondsToTimeCode(chapters.entries.times[i].stop) + '</span>' + '</div>' + '</div>'));
                usedPercent += percent;
            }
            t.chapters.find('div.mejs-chapter').click(function() {
                t.media.setCurrentTime(parseFloat($(this).attr('rel')));
                if (t.media.paused) {
                    t.media.play();
                }
            });
            t.chapters.show();
        }
    });
    mejs.language = {
        codes: {
            af: 'Afrikaans',
            sq: 'Albanian',
            ar: 'Arabic',
            be: 'Belarusian',
            bg: 'Bulgarian',
            ca: 'Catalan',
            zh: 'Chinese',
            'zh-cn': 'Chinese Simplified',
            'zh-tw': 'Chinese Traditional',
            hr: 'Croatian',
            cs: 'Czech',
            da: 'Danish',
            nl: 'Dutch',
            en: 'English',
            et: 'Estonian',
            tl: 'Filipino',
            fi: 'Finnish',
            fr: 'French',
            gl: 'Galician',
            de: 'German',
            el: 'Greek',
            ht: 'Haitian Creole',
            iw: 'Hebrew',
            hi: 'Hindi',
            hu: 'Hungarian',
            is: 'Icelandic',
            id: 'Indonesian',
            ga: 'Irish',
            it: 'Italian',
            ja: 'Japanese',
            ko: 'Korean',
            lv: 'Latvian',
            lt: 'Lithuanian',
            mk: 'Macedonian',
            ms: 'Malay',
            mt: 'Maltese',
            no: 'Norwegian',
            fa: 'Persian',
            pl: 'Polish',
            pt: 'Portuguese',
            ro: 'Romanian',
            ru: 'Russian',
            sr: 'Serbian',
            sk: 'Slovak',
            sl: 'Slovenian',
            es: 'Spanish',
            sw: 'Swahili',
            sv: 'Swedish',
            tl: 'Tagalog',
            th: 'Thai',
            tr: 'Turkish',
            uk: 'Ukrainian',
            vi: 'Vietnamese',
            cy: 'Welsh',
            yi: 'Yiddish'
        }
    };
    mejs.TrackFormatParser = {
        webvvt: {
            pattern_identifier: /^([a-zA-z]+-)?[0-9]+$/,
            pattern_timecode: /^([0-9]{2}:[0-9]{2}:[0-9]{2}([,.][0-9]{1,3})?) --\> ([0-9]{2}:[0-9]{2}:[0-9]{2}([,.][0-9]{3})?)(.*)$/,
            parse: function(trackText) {
                var
                    i = 0,
                    lines = mejs.TrackFormatParser.split2(trackText, /\r?\n/),
                    entries = {
                        text: [],
                        times: []
                    }, timecode, text;
                for (; i < lines.length; i++) {
                    if (this.pattern_identifier.exec(lines[i])) {
                        i++;
                        timecode = this.pattern_timecode.exec(lines[i]);
                        if (timecode && i < lines.length) {
                            i++;
                            text = lines[i];
                            i++;
                            while (lines[i] !== '' && i < lines.length) {
                                text = text + '\n' + lines[i];
                                i++;
                            }
                            text = $.trim(text).replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig, "<a href='$1' target='_blank'>$1</a>");
                            entries.text.push(text);
                            entries.times.push({
                                start: (mejs.Utility.convertSMPTEtoSeconds(timecode[1]) == 0) ? 0.200 : mejs.Utility.convertSMPTEtoSeconds(timecode[1]),
                                stop: mejs.Utility.convertSMPTEtoSeconds(timecode[3]),
                                settings: timecode[5]
                            });
                        }
                    }
                }
                return entries;
            }
        },
        dfxp: {
            parse: function(trackText) {
                trackText = $(trackText).filter("tt");
                var
                    i = 0,
                    container = trackText.children("div").eq(0),
                    lines = container.find("p"),
                    styleNode = trackText.find("#" + container.attr("style")),
                    styles, begin, end, text, entries = {
                        text: [],
                        times: []
                    };
                if (styleNode.length) {
                    var attributes = styleNode.removeAttr("id").get(0).attributes;
                    if (attributes.length) {
                        styles = {};
                        for (i = 0; i < attributes.length; i++) {
                            styles[attributes[i].name.split(":")[1]] = attributes[i].value;
                        }
                    }
                }
                for (i = 0; i < lines.length; i++) {
                    var style;
                    var _temp_times = {
                        start: null,
                        stop: null,
                        style: null
                    };
                    if (lines.eq(i).attr("begin")) _temp_times.start = mejs.Utility.convertSMPTEtoSeconds(lines.eq(i).attr("begin"));
                    if (!_temp_times.start && lines.eq(i - 1).attr("end")) _temp_times.start = mejs.Utility.convertSMPTEtoSeconds(lines.eq(i - 1).attr("end"));
                    if (lines.eq(i).attr("end")) _temp_times.stop = mejs.Utility.convertSMPTEtoSeconds(lines.eq(i).attr("end"));
                    if (!_temp_times.stop && lines.eq(i + 1).attr("begin")) _temp_times.stop = mejs.Utility.convertSMPTEtoSeconds(lines.eq(i + 1).attr("begin"));
                    if (styles) {
                        style = "";
                        for (var _style in styles) {
                            style += _style + ":" + styles[_style] + ";";
                        }
                    }
                    if (style) _temp_times.style = style;
                    if (_temp_times.start == 0) _temp_times.start = 0.200;
                    entries.times.push(_temp_times);
                    text = $.trim(lines.eq(i).html()).replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig, "<a href='$1' target='_blank'>$1</a>");
                    entries.text.push(text);
                    if (entries.times.start == 0) entries.times.start = 2;
                }
                return entries;
            }
        },
        split2: function(text, regex) {
            return text.split(regex);
        }
    };
    if ('x\n\ny'.split(/\n/gi).length != 3) {
        mejs.TrackFormatParser.split2 = function(text, regex) {
            var
                parts = [],
                chunk = '',
                i;
            for (i = 0; i < text.length; i++) {
                chunk += text.substring(i, i + 1);
                if (regex.test(chunk)) {
                    parts.push(chunk.replace(regex, ''));
                    chunk = '';
                }
            }
            parts.push(chunk);
            return parts;
        }
    }
})(mejs.$);
(function($) {
    $.extend(mejs.MepDefaults, {
        'contextMenuItems': [{
            render: function(player) {
                if (typeof player.enterFullScreen == 'undefined')
                    return null;
                if (player.isFullScreen) {
                    return "Turn off Fullscreen";
                } else {
                    return "Go Fullscreen";
                }
            },
            click: function(player) {
                if (player.isFullScreen) {
                    player.exitFullScreen();
                } else {
                    player.enterFullScreen();
                }
            }
        }, {
            render: function(player) {
                if (player.media.muted) {
                    return "Unmute";
                } else {
                    return "Mute";
                }
            },
            click: function(player) {
                if (player.media.muted) {
                    player.setMuted(false);
                } else {
                    player.setMuted(true);
                }
            }
        }, {
            isSeparator: true
        }, {
            render: function(player) {
                return "Download Video";
            },
            click: function(player) {
                window.location.href = player.media.currentSrc;
            }
        }]
    });
    $.extend(MediaElementPlayer.prototype, {
        buildcontextmenu: function(player, controls, layers, media) {
            player.contextMenu = $('<div class="mejs-contextmenu"></div>').appendTo($('body')).hide();
            player.container.bind('contextmenu', function(e) {
                if (player.isContextMenuEnabled) {
                    e.preventDefault();
                    player.renderContextMenu(e.clientX - 1, e.clientY - 1);
                    return false;
                }
            });
            player.container.bind('click', function() {
                player.contextMenu.hide();
            });
            player.contextMenu.bind('mouseleave', function() {
                player.startContextMenuTimer();
            });
        },
        isContextMenuEnabled: true,
        enableContextMenu: function() {
            this.isContextMenuEnabled = true;
        },
        disableContextMenu: function() {
            this.isContextMenuEnabled = false;
        },
        contextMenuTimeout: null,
        startContextMenuTimer: function() {
            var t = this;
            t.killContextMenuTimer();
            t.contextMenuTimer = setTimeout(function() {
                t.hideContextMenu();
                t.killContextMenuTimer();
            }, 750);
        },
        killContextMenuTimer: function() {
            var timer = this.contextMenuTimer;
            if (timer != null) {
                clearTimeout(timer);
                delete timer;
                timer = null;
            }
        },
        hideContextMenu: function() {
            this.contextMenu.hide();
        },
        renderContextMenu: function(x, y) {
            var t = this,
                html = '',
                items = t.options.contextMenuItems;
            for (var i = 0, il = items.length; i < il; i++) {
                if (items[i].isSeparator) {
                    html += '<div class="mejs-contextmenu-separator"></div>';
                } else {
                    var rendered = items[i].render(t);
                    if (rendered != null) {
                        html += '<div class="mejs-contextmenu-item" data-itemindex="' + i + '" id="element-' + (Math.random() * 1000000) + '">' + rendered + '</div>';
                    }
                }
            }
            t.contextMenu.empty().append($(html)).css({
                top: y,
                left: x
            }).show();
            t.contextMenu.find('.mejs-contextmenu-item').each(function() {
                var $dom = $(this),
                    itemIndex = parseInt($dom.data('itemindex'), 10),
                    item = t.options.contextMenuItems[itemIndex];
                if (typeof item.show != 'undefined')
                    item.show($dom, t);
                $dom.click(function() {
                    if (typeof item.click != 'undefined')
                        item.click(t);
                    t.contextMenu.hide();
                });
            });
            setTimeout(function() {
                t.killControlsTimer('rev3');
            }, 100);
        }
    });
})(mejs.$);
(function($) {
    $.extend(mejs.MepDefaults, {
        postrollCloseText: mejs.i18n.t('Close')
    });
    $.extend(MediaElementPlayer.prototype, {
        buildpostroll: function(player, controls, layers, media) {
            var
                t = this,
                postrollLink = t.container.find('link[rel="postroll"]').attr('href');
            if (typeof postrollLink !== 'undefined') {
                player.postroll = $('<div class="mejs-postroll-layer mejs-layer"><a class="mejs-postroll-close" onclick="$(this).parent().hide();return false;">' + t.options.postrollCloseText + '</a><div class="mejs-postroll-layer-content"></div></div>').prependTo(layers).hide();
                t.media.addEventListener('ended', function(e) {
                    $.ajax({
                        dataType: 'html',
                        url: postrollLink,
                        success: function(data, textStatus) {
                            layers.find('.mejs-postroll-layer-content').html(data);
                        }
                    });
                    player.postroll.show();
                }, false);
            }
        }
    });
})(mejs.$);;
(function($, undefined) {
    "use strict";
    var ver = '2.9999.81';

    function debug(s) {
        if ($.fn.cycle.debug)
            log(s);
    }

    function log() {
        if (window.console && console.log)
            console.log('[cycle] ' + Array.prototype.join.call(arguments, ' '));
    }
    $.expr[':'].paused = function(el) {
        return el.cyclePause;
    };
    $.fn.cycle = function(options, arg2) {
        var o = {
            s: this.selector,
            c: this.context
        };
        if (this.length === 0 && options != 'stop') {
            if (!$.isReady && o.s) {
                log('DOM not ready, queuing slideshow');
                $(function() {
                    $(o.s, o.c).cycle(options, arg2);
                });
                return this;
            }
            log('terminating; zero elements found by selector' + ($.isReady ? '' : ' (DOM not ready)'));
            return this;
        }
        return this.each(function() {
            var opts = handleArguments(this, options, arg2);
            if (opts === false)
                return;
            opts.updateActivePagerLink = opts.updateActivePagerLink || $.fn.cycle.updateActivePagerLink;
            if (this.cycleTimeout)
                clearTimeout(this.cycleTimeout);
            this.cycleTimeout = this.cyclePause = 0;
            this.cycleStop = 0;
            var $cont = $(this);
            var $slides = opts.slideExpr ? $(opts.slideExpr, this) : $cont.children();
            var els = $slides.get();
            if (els.length < 2) {
                log('terminating; too few slides: ' + els.length);
                return;
            }
            var opts2 = buildOptions($cont, $slides, els, opts, o);
            if (opts2 === false)
                return;
            var startTime = opts2.continuous ? 10 : getTimeout(els[opts2.currSlide], els[opts2.nextSlide], opts2, !opts2.backwards);
            if (startTime) {
                startTime += (opts2.delay || 0);
                if (startTime < 10)
                    startTime = 10;
                debug('first timeout: ' + startTime);
                this.cycleTimeout = setTimeout(function() {
                    go(els, opts2, 0, !opts.backwards);
                }, startTime);
            }
        });
    };

    function triggerPause(cont, byHover, onPager) {
        var opts = $(cont).data('cycle.opts');
        if (!opts)
            return;
        var paused = !! cont.cyclePause;
        if (paused && opts.paused)
            opts.paused(cont, opts, byHover, onPager);
        else if (!paused && opts.resumed)
            opts.resumed(cont, opts, byHover, onPager);
    }

    function handleArguments(cont, options, arg2) {
        if (cont.cycleStop === undefined)
            cont.cycleStop = 0;
        if (options === undefined || options === null)
            options = {};
        if (options.constructor == String) {
            switch (options) {
                case 'destroy':
                case 'stop':
                    var opts = $(cont).data('cycle.opts');
                    if (!opts)
                        return false;
                    cont.cycleStop++;
                    if (cont.cycleTimeout)
                        clearTimeout(cont.cycleTimeout);
                    cont.cycleTimeout = 0;
                    if (opts.elements)
                        $(opts.elements).stop();
                    $(cont).removeData('cycle.opts');
                    if (options == 'destroy')
                        destroy(cont, opts);
                    return false;
                case 'toggle':
                    cont.cyclePause = (cont.cyclePause === 1) ? 0 : 1;
                    checkInstantResume(cont.cyclePause, arg2, cont);
                    triggerPause(cont);
                    return false;
                case 'pause':
                    cont.cyclePause = 1;
                    triggerPause(cont);
                    return false;
                case 'resume':
                    cont.cyclePause = 0;
                    checkInstantResume(false, arg2, cont);
                    triggerPause(cont);
                    return false;
                case 'prev':
                case 'next':
                    opts = $(cont).data('cycle.opts');
                    if (!opts) {
                        log('options not found, "prev/next" ignored');
                        return false;
                    }
                    $.fn.cycle[options](opts);
                    return false;
                default:
                    options = {
                        fx: options
                    };
            }
            return options;
        } else if (options.constructor == Number) {
            var num = options;
            options = $(cont).data('cycle.opts');
            if (!options) {
                log('options not found, can not advance slide');
                return false;
            }
            if (num < 0 || num >= options.elements.length) {
                log('invalid slide index: ' + num);
                return false;
            }
            options.nextSlide = num;
            if (cont.cycleTimeout) {
                clearTimeout(cont.cycleTimeout);
                cont.cycleTimeout = 0;
            }
            if (typeof arg2 == 'string')
                options.oneTimeFx = arg2;
            go(options.elements, options, 1, num >= options.currSlide);
            return false;
        }
        return options;

        function checkInstantResume(isPaused, arg2, cont) {
            if (!isPaused && arg2 === true) {
                var options = $(cont).data('cycle.opts');
                if (!options) {
                    log('options not found, can not resume');
                    return false;
                }
                if (cont.cycleTimeout) {
                    clearTimeout(cont.cycleTimeout);
                    cont.cycleTimeout = 0;
                }
                go(options.elements, options, 1, !options.backwards);
            }
        }
    }

    function removeFilter(el, opts) {
        if (!$.support.opacity && opts.cleartype && el.style.filter) {
            try {
                el.style.removeAttribute('filter');
            } catch (smother) {}
        }
    }

    function destroy(cont, opts) {
        if (opts.next)
            $(opts.next).unbind(opts.prevNextEvent);
        if (opts.prev)
            $(opts.prev).unbind(opts.prevNextEvent);
        if (opts.pager || opts.pagerAnchorBuilder)
            $.each(opts.pagerAnchors || [], function() {
                this.unbind().remove();
            });
        opts.pagerAnchors = null;
        $(cont).unbind('mouseenter.cycle mouseleave.cycle');
        if (opts.destroy)
            opts.destroy(opts);
    }

    function buildOptions($cont, $slides, els, options, o) {
        var startingSlideSpecified;
        var opts = $.extend({}, $.fn.cycle.defaults, options || {}, $.metadata ? $cont.metadata() : $.meta ? $cont.data() : {});
        var meta = $.isFunction($cont.data) ? $cont.data(opts.metaAttr) : null;
        if (meta)
            opts = $.extend(opts, meta);
        if (opts.autostop)
            opts.countdown = opts.autostopCount || els.length;
        var cont = $cont[0];
        $cont.data('cycle.opts', opts);
        opts.$cont = $cont;
        opts.stopCount = cont.cycleStop;
        opts.elements = els;
        opts.before = opts.before ? [opts.before] : [];
        opts.after = opts.after ? [opts.after] : [];
        if (!$.support.opacity && opts.cleartype)
            opts.after.push(function() {
                removeFilter(this, opts);
            });
        if (opts.continuous)
            opts.after.push(function() {
                go(els, opts, 0, !opts.backwards);
            });
        saveOriginalOpts(opts);
        if (!$.support.opacity && opts.cleartype && !opts.cleartypeNoBg)
            clearTypeFix($slides);
        if ($cont.css('position') == 'static')
            $cont.css('position', 'relative');
        if (opts.width)
            $cont.width(opts.width);
        if (opts.height && opts.height != 'auto')
            $cont.height(opts.height);
        if (opts.startingSlide !== undefined) {
            opts.startingSlide = parseInt(opts.startingSlide, 10);
            if (opts.startingSlide >= els.length || opts.startSlide < 0)
                opts.startingSlide = 0;
            else
                startingSlideSpecified = true;
        } else if (opts.backwards)
            opts.startingSlide = els.length - 1;
        else
            opts.startingSlide = 0; if (opts.random) {
            opts.randomMap = [];
            for (var i = 0; i < els.length; i++)
                opts.randomMap.push(i);
            opts.randomMap.sort(function(a, b) {
                return Math.random() - 0.5;
            });
            if (startingSlideSpecified) {
                for (var cnt = 0; cnt < els.length; cnt++) {
                    if (opts.startingSlide == opts.randomMap[cnt]) {
                        opts.randomIndex = cnt;
                    }
                }
            } else {
                opts.randomIndex = 1;
                opts.startingSlide = opts.randomMap[1];
            }
        } else if (opts.startingSlide >= els.length)
            opts.startingSlide = 0;
        opts.currSlide = opts.startingSlide || 0;
        var first = opts.startingSlide;
        $slides.css({
            position: 'absolute',
            top: 0,
            left: 0
        }).hide().each(function(i) {
                var z;
                if (opts.backwards)
                    z = first ? i <= first ? els.length + (i - first) : first - i : els.length - i;
                else
                    z = first ? i >= first ? els.length - (i - first) : first - i : els.length - i;
                $(this).css('z-index', z);
            });
        $(els[first]).css('opacity', 1).show();
        removeFilter(els[first], opts);
        if (opts.fit) {
            if (!opts.aspect) {
                if (opts.width)
                    $slides.width(opts.width);
                if (opts.height && opts.height != 'auto')
                    $slides.height(opts.height);
            } else {
                $slides.each(function() {
                    var $slide = $(this);
                    var ratio = (opts.aspect === true) ? $slide.width() / $slide.height() : opts.aspect;
                    if (opts.width && $slide.width() != opts.width) {
                        $slide.width(opts.width);
                        $slide.height(opts.width / ratio);
                    }
                    if (opts.height && $slide.height() < opts.height) {
                        $slide.height(opts.height);
                        $slide.width(opts.height * ratio);
                    }
                });
            }
        }
        if (opts.center && ((!opts.fit) || opts.aspect)) {
            $slides.each(function() {
                var $slide = $(this);
                $slide.css({
                    "margin-left": opts.width ? ((opts.width - $slide.width()) / 2) + "px" : 0,
                    "margin-top": opts.height ? ((opts.height - $slide.height()) / 2) + "px" : 0
                });
            });
        }
        if (opts.center && !opts.fit && !opts.slideResize) {
            $slides.each(function() {
                var $slide = $(this);
                $slide.css({
                    "margin-left": opts.width ? ((opts.width - $slide.width()) / 2) + "px" : 0,
                    "margin-top": opts.height ? ((opts.height - $slide.height()) / 2) + "px" : 0
                });
            });
        }
        var reshape = (opts.containerResize || opts.containerResizeHeight) && !$cont.innerHeight();
        if (reshape) {
            var maxw = 0,
                maxh = 0;
            for (var j = 0; j < els.length; j++) {
                var $e = $(els[j]),
                    e = $e[0],
                    w = $e.outerWidth(),
                    h = $e.outerHeight();
                if (!w) w = e.offsetWidth || e.width || $e.attr('width');
                if (!h) h = e.offsetHeight || e.height || $e.attr('height');
                maxw = w > maxw ? w : maxw;
                maxh = h > maxh ? h : maxh;
            }
            if (opts.containerResize && maxw > 0 && maxh > 0)
                $cont.css({
                    width: maxw + 'px',
                    height: maxh + 'px'
                });
            if (opts.containerResizeHeight && maxh > 0)
                $cont.css({
                    height: maxh + 'px'
                });
        }
        var pauseFlag = false;
        if (opts.pause)
            $cont.bind('mouseenter.cycle', function() {
                pauseFlag = true;
                this.cyclePause++;
                triggerPause(cont, true);
            }).bind('mouseleave.cycle', function() {
                    if (pauseFlag)
                        this.cyclePause--;
                    triggerPause(cont, true);
                });
        if (supportMultiTransitions(opts) === false)
            return false;
        var requeue = false;
        options.requeueAttempts = options.requeueAttempts || 0;
        $slides.each(function() {
            var $el = $(this);
            this.cycleH = (opts.fit && opts.height) ? opts.height : ($el.height() || this.offsetHeight || this.height || $el.attr('height') || 0);
            this.cycleW = (opts.fit && opts.width) ? opts.width : ($el.width() || this.offsetWidth || this.width || $el.attr('width') || 0);
            if ($el.is('img')) {
                var loading = (this.cycleH === 0 && this.cycleW === 0 && !this.complete);
                if (loading) {
                    if (o.s && opts.requeueOnImageNotLoaded && ++options.requeueAttempts < 100) {
                        log(options.requeueAttempts, ' - img slide not loaded, requeuing slideshow: ', this.src, this.cycleW, this.cycleH);
                        setTimeout(function() {
                            $(o.s, o.c).cycle(options);
                        }, opts.requeueTimeout);
                        requeue = true;
                        return false;
                    } else {
                        log('could not determine size of image: ' + this.src, this.cycleW, this.cycleH);
                    }
                }
            }
            return true;
        });
        if (requeue)
            return false;
        opts.cssBefore = opts.cssBefore || {};
        opts.cssAfter = opts.cssAfter || {};
        opts.cssFirst = opts.cssFirst || {};
        opts.animIn = opts.animIn || {};
        opts.animOut = opts.animOut || {};
        $slides.not(':eq(' + first + ')').css(opts.cssBefore);
        $($slides[first]).css(opts.cssFirst);
        if (opts.timeout) {
            opts.timeout = parseInt(opts.timeout, 10);
            if (opts.speed.constructor == String)
                opts.speed = $.fx.speeds[opts.speed] || parseInt(opts.speed, 10);
            if (!opts.sync)
                opts.speed = opts.speed / 2;
            var buffer = opts.fx == 'none' ? 0 : opts.fx == 'shuffle' ? 500 : 250;
            while ((opts.timeout - opts.speed) < buffer)
                opts.timeout += opts.speed;
        }
        if (opts.easing)
            opts.easeIn = opts.easeOut = opts.easing;
        if (!opts.speedIn)
            opts.speedIn = opts.speed;
        if (!opts.speedOut)
            opts.speedOut = opts.speed;
        opts.slideCount = els.length;
        opts.currSlide = opts.lastSlide = first;
        if (opts.random) {
            if (++opts.randomIndex == els.length)
                opts.randomIndex = 0;
            opts.nextSlide = opts.randomMap[opts.randomIndex];
        } else if (opts.backwards)
            opts.nextSlide = opts.startingSlide === 0 ? (els.length - 1) : opts.startingSlide - 1;
        else
            opts.nextSlide = opts.startingSlide >= (els.length - 1) ? 0 : opts.startingSlide + 1; if (!opts.multiFx) {
            var init = $.fn.cycle.transitions[opts.fx];
            if ($.isFunction(init))
                init($cont, $slides, opts);
            else if (opts.fx != 'custom' && !opts.multiFx) {
                log('unknown transition: ' + opts.fx, '; slideshow terminating');
                return false;
            }
        }
        var e0 = $slides[first];
        if (!opts.skipInitializationCallbacks) {
            if (opts.before.length)
                opts.before[0].apply(e0, [e0, e0, opts, true]);
            if (opts.after.length)
                opts.after[0].apply(e0, [e0, e0, opts, true]);
        }
        if (opts.next)
            $(opts.next).bind(opts.prevNextEvent, function() {
                return advance(opts, 1);
            });
        if (opts.prev)
            $(opts.prev).bind(opts.prevNextEvent, function() {
                return advance(opts, 0);
            });
        if (opts.pager || opts.pagerAnchorBuilder)
            buildPager(els, opts);
        exposeAddSlide(opts, els);
        return opts;
    }

    function saveOriginalOpts(opts) {
        opts.original = {
            before: [],
            after: []
        };
        opts.original.cssBefore = $.extend({}, opts.cssBefore);
        opts.original.cssAfter = $.extend({}, opts.cssAfter);
        opts.original.animIn = $.extend({}, opts.animIn);
        opts.original.animOut = $.extend({}, opts.animOut);
        $.each(opts.before, function() {
            opts.original.before.push(this);
        });
        $.each(opts.after, function() {
            opts.original.after.push(this);
        });
    }

    function supportMultiTransitions(opts) {
        var i, tx, txs = $.fn.cycle.transitions;
        if (opts.fx.indexOf(',') > 0) {
            opts.multiFx = true;
            opts.fxs = opts.fx.replace(/\s*/g, '').split(',');
            for (i = 0; i < opts.fxs.length; i++) {
                var fx = opts.fxs[i];
                tx = txs[fx];
                if (!tx || !txs.hasOwnProperty(fx) || !$.isFunction(tx)) {
                    log('discarding unknown transition: ', fx);
                    opts.fxs.splice(i, 1);
                    i--;
                }
            }
            if (!opts.fxs.length) {
                log('No valid transitions named; slideshow terminating.');
                return false;
            }
        } else if (opts.fx == 'all') {
            opts.multiFx = true;
            opts.fxs = [];
            for (var p in txs) {
                if (txs.hasOwnProperty(p)) {
                    tx = txs[p];
                    if (txs.hasOwnProperty(p) && $.isFunction(tx))
                        opts.fxs.push(p);
                }
            }
        }
        if (opts.multiFx && opts.randomizeEffects) {
            var r1 = Math.floor(Math.random() * 20) + 30;
            for (i = 0; i < r1; i++) {
                var r2 = Math.floor(Math.random() * opts.fxs.length);
                opts.fxs.push(opts.fxs.splice(r2, 1)[0]);
            }
            debug('randomized fx sequence: ', opts.fxs);
        }
        return true;
    }

    function exposeAddSlide(opts, els) {
        opts.addSlide = function(newSlide, prepend) {
            var $s = $(newSlide),
                s = $s[0];
            if (!opts.autostopCount)
                opts.countdown++;
            els[prepend ? 'unshift' : 'push'](s);
            if (opts.els)
                opts.els[prepend ? 'unshift' : 'push'](s);
            opts.slideCount = els.length;
            if (opts.random) {
                opts.randomMap.push(opts.slideCount - 1);
                opts.randomMap.sort(function(a, b) {
                    return Math.random() - 0.5;
                });
            }
            $s.css('position', 'absolute');
            $s[prepend ? 'prependTo' : 'appendTo'](opts.$cont);
            if (prepend) {
                opts.currSlide++;
                opts.nextSlide++;
            }
            if (!$.support.opacity && opts.cleartype && !opts.cleartypeNoBg)
                clearTypeFix($s);
            if (opts.fit && opts.width)
                $s.width(opts.width);
            if (opts.fit && opts.height && opts.height != 'auto')
                $s.height(opts.height);
            s.cycleH = (opts.fit && opts.height) ? opts.height : $s.height();
            s.cycleW = (opts.fit && opts.width) ? opts.width : $s.width();
            $s.css(opts.cssBefore);
            if (opts.pager || opts.pagerAnchorBuilder)
                $.fn.cycle.createPagerAnchor(els.length - 1, s, $(opts.pager), els, opts);
            if ($.isFunction(opts.onAddSlide))
                opts.onAddSlide($s);
            else
                $s.hide();
        };
    }
    $.fn.cycle.resetState = function(opts, fx) {
        fx = fx || opts.fx;
        opts.before = [];
        opts.after = [];
        opts.cssBefore = $.extend({}, opts.original.cssBefore);
        opts.cssAfter = $.extend({}, opts.original.cssAfter);
        opts.animIn = $.extend({}, opts.original.animIn);
        opts.animOut = $.extend({}, opts.original.animOut);
        opts.fxFn = null;
        $.each(opts.original.before, function() {
            opts.before.push(this);
        });
        $.each(opts.original.after, function() {
            opts.after.push(this);
        });
        var init = $.fn.cycle.transitions[fx];
        if ($.isFunction(init))
            init(opts.$cont, $(opts.elements), opts);
    };

    function go(els, opts, manual, fwd) {
        var p = opts.$cont[0],
            curr = els[opts.currSlide],
            next = els[opts.nextSlide];
        if (manual && opts.busy && opts.manualTrump) {
            debug('manualTrump in go(), stopping active transition');
            $(els).stop(true, true);
            opts.busy = 0;
            clearTimeout(p.cycleTimeout);
        }
        if (opts.busy) {
            debug('transition active, ignoring new tx request');
            return;
        }
        if (p.cycleStop != opts.stopCount || p.cycleTimeout === 0 && !manual)
            return;
        if (!manual && !p.cyclePause && !opts.bounce && ((opts.autostop && (--opts.countdown <= 0)) || (opts.nowrap && !opts.random && opts.nextSlide < opts.currSlide))) {
            if (opts.end)
                opts.end(opts);
            return;
        }
        var changed = false;
        if ((manual || !p.cyclePause) && (opts.nextSlide != opts.currSlide)) {
            changed = true;
            var fx = opts.fx;
            curr.cycleH = curr.cycleH || $(curr).height();
            curr.cycleW = curr.cycleW || $(curr).width();
            next.cycleH = next.cycleH || $(next).height();
            next.cycleW = next.cycleW || $(next).width();
            if (opts.multiFx) {
                if (fwd && (opts.lastFx === undefined || ++opts.lastFx >= opts.fxs.length))
                    opts.lastFx = 0;
                else if (!fwd && (opts.lastFx === undefined || --opts.lastFx < 0))
                    opts.lastFx = opts.fxs.length - 1;
                fx = opts.fxs[opts.lastFx];
            }
            if (opts.oneTimeFx) {
                fx = opts.oneTimeFx;
                opts.oneTimeFx = null;
            }
            $.fn.cycle.resetState(opts, fx);
            if (opts.before.length)
                $.each(opts.before, function(i, o) {
                    if (p.cycleStop != opts.stopCount) return;
                    o.apply(next, [curr, next, opts, fwd]);
                });
            var after = function() {
                opts.busy = 0;
                $.each(opts.after, function(i, o) {
                    if (p.cycleStop != opts.stopCount) return;
                    o.apply(next, [curr, next, opts, fwd]);
                });
                if (!p.cycleStop) {
                    queueNext();
                }
            };
            debug('tx firing(' + fx + '); currSlide: ' + opts.currSlide + '; nextSlide: ' + opts.nextSlide);
            opts.busy = 1;
            if (opts.fxFn)
                opts.fxFn(curr, next, opts, after, fwd, manual && opts.fastOnEvent);
            else if ($.isFunction($.fn.cycle[opts.fx]))
                $.fn.cycle[opts.fx](curr, next, opts, after, fwd, manual && opts.fastOnEvent);
            else
                $.fn.cycle.custom(curr, next, opts, after, fwd, manual && opts.fastOnEvent);
        } else {
            queueNext();
        }
        if (changed || opts.nextSlide == opts.currSlide) {
            var roll;
            opts.lastSlide = opts.currSlide;
            if (opts.random) {
                opts.currSlide = opts.nextSlide;
                if (++opts.randomIndex == els.length) {
                    opts.randomIndex = 0;
                    opts.randomMap.sort(function(a, b) {
                        return Math.random() - 0.5;
                    });
                }
                opts.nextSlide = opts.randomMap[opts.randomIndex];
                if (opts.nextSlide == opts.currSlide)
                    opts.nextSlide = (opts.currSlide == opts.slideCount - 1) ? 0 : opts.currSlide + 1;
            } else if (opts.backwards) {
                roll = (opts.nextSlide - 1) < 0;
                if (roll && opts.bounce) {
                    opts.backwards = !opts.backwards;
                    opts.nextSlide = 1;
                    opts.currSlide = 0;
                } else {
                    opts.nextSlide = roll ? (els.length - 1) : opts.nextSlide - 1;
                    opts.currSlide = roll ? 0 : opts.nextSlide + 1;
                }
            } else {
                roll = (opts.nextSlide + 1) == els.length;
                if (roll && opts.bounce) {
                    opts.backwards = !opts.backwards;
                    opts.nextSlide = els.length - 2;
                    opts.currSlide = els.length - 1;
                } else {
                    opts.nextSlide = roll ? 0 : opts.nextSlide + 1;
                    opts.currSlide = roll ? els.length - 1 : opts.nextSlide - 1;
                }
            }
        }
        if (changed && opts.pager)
            opts.updateActivePagerLink(opts.pager, opts.currSlide, opts.activePagerClass);

        function queueNext() {
            var ms = 0,
                timeout = opts.timeout;
            if (opts.timeout && !opts.continuous) {
                ms = getTimeout(els[opts.currSlide], els[opts.nextSlide], opts, fwd);
                if (opts.fx == 'shuffle')
                    ms -= opts.speedOut;
            } else if (opts.continuous && p.cyclePause)
                ms = 10;
            if (ms > 0)
                p.cycleTimeout = setTimeout(function() {
                    go(els, opts, 0, !opts.backwards);
                }, ms);
        }
    }
    $.fn.cycle.updateActivePagerLink = function(pager, currSlide, clsName) {
        $(pager).each(function() {
            $(this).children().removeClass(clsName).eq(currSlide).addClass(clsName);
        });
    };

    function getTimeout(curr, next, opts, fwd) {
        if (opts.timeoutFn) {
            var t = opts.timeoutFn.call(curr, curr, next, opts, fwd);
            while (opts.fx != 'none' && (t - opts.speed) < 250)
                t += opts.speed;
            debug('calculated timeout: ' + t + '; speed: ' + opts.speed);
            if (t !== false)
                return t;
        }
        return opts.timeout;
    }
    $.fn.cycle.next = function(opts) {
        advance(opts, 1);
    };
    $.fn.cycle.prev = function(opts) {
        advance(opts, 0);
    };

    function advance(opts, moveForward) {
        var val = moveForward ? 1 : -1;
        var els = opts.elements;
        var p = opts.$cont[0],
            timeout = p.cycleTimeout;
        if (timeout) {
            clearTimeout(timeout);
            p.cycleTimeout = 0;
        }
        if (opts.random && val < 0) {
            opts.randomIndex--;
            if (--opts.randomIndex == -2)
                opts.randomIndex = els.length - 2;
            else if (opts.randomIndex == -1)
                opts.randomIndex = els.length - 1;
            opts.nextSlide = opts.randomMap[opts.randomIndex];
        } else if (opts.random) {
            opts.nextSlide = opts.randomMap[opts.randomIndex];
        } else {
            opts.nextSlide = opts.currSlide + val;
            if (opts.nextSlide < 0) {
                if (opts.nowrap) return false;
                opts.nextSlide = els.length - 1;
            } else if (opts.nextSlide >= els.length) {
                if (opts.nowrap) return false;
                opts.nextSlide = 0;
            }
        }
        var cb = opts.onPrevNextEvent || opts.prevNextClick;
        if ($.isFunction(cb))
            cb(val > 0, opts.nextSlide, els[opts.nextSlide]);
        go(els, opts, 1, moveForward);
        return false;
    }

    function buildPager(els, opts) {
        var $p = $(opts.pager);
        $.each(els, function(i, o) {
            $.fn.cycle.createPagerAnchor(i, o, $p, els, opts);
        });
        opts.updateActivePagerLink(opts.pager, opts.startingSlide, opts.activePagerClass);
    }
    $.fn.cycle.createPagerAnchor = function(i, el, $p, els, opts) {
        var a;
        if ($.isFunction(opts.pagerAnchorBuilder)) {
            a = opts.pagerAnchorBuilder(i, el);
            debug('pagerAnchorBuilder(' + i + ', el) returned: ' + a);
        } else
            a = '<a href="#">' + (i + 1) + '</a>'; if (!a)
            return;
        var $a = $(a);
        if ($a.parents('body').length === 0) {
            var arr = [];
            if ($p.length > 1) {
                $p.each(function() {
                    var $clone = $a.clone(true);
                    $(this).append($clone);
                    arr.push($clone[0]);
                });
                $a = $(arr);
            } else {
                $a.appendTo($p);
            }
        }
        opts.pagerAnchors = opts.pagerAnchors || [];
        opts.pagerAnchors.push($a);
        var pagerFn = function(e) {
            e.preventDefault();
            opts.nextSlide = i;
            var p = opts.$cont[0],
                timeout = p.cycleTimeout;
            if (timeout) {
                clearTimeout(timeout);
                p.cycleTimeout = 0;
            }
            var cb = opts.onPagerEvent || opts.pagerClick;
            if ($.isFunction(cb))
                cb(opts.nextSlide, els[opts.nextSlide]);
            go(els, opts, 1, opts.currSlide < i);
        };
        if (/mouseenter|mouseover/i.test(opts.pagerEvent)) {
            $a.hover(pagerFn, function() {});
        } else {
            $a.bind(opts.pagerEvent, pagerFn);
        }
        if (!/^click/.test(opts.pagerEvent) && !opts.allowPagerClickBubble)
            $a.bind('click.cycle', function() {
                return false;
            });
        var cont = opts.$cont[0];
        var pauseFlag = false;
        if (opts.pauseOnPagerHover) {
            $a.hover(function() {
                pauseFlag = true;
                cont.cyclePause++;
                triggerPause(cont, true, true);
            }, function() {
                if (pauseFlag)
                    cont.cyclePause--;
                triggerPause(cont, true, true);
            });
        }
    };
    $.fn.cycle.hopsFromLast = function(opts, fwd) {
        var hops, l = opts.lastSlide,
            c = opts.currSlide;
        if (fwd)
            hops = c > l ? c - l : opts.slideCount - l;
        else
            hops = c < l ? l - c : l + opts.slideCount - c;
        return hops;
    };

    function clearTypeFix($slides) {
        debug('applying clearType background-color hack');

        function hex(s) {
            s = parseInt(s, 10).toString(16);
            return s.length < 2 ? '0' + s : s;
        }

        function getBg(e) {
            for (; e && e.nodeName.toLowerCase() != 'html'; e = e.parentNode) {
                var v = $.css(e, 'background-color');
                if (v && v.indexOf('rgb') >= 0) {
                    var rgb = v.match(/\d+/g);
                    return '#' + hex(rgb[0]) + hex(rgb[1]) + hex(rgb[2]);
                }
                if (v && v != 'transparent')
                    return v;
            }
            return '#ffffff';
        }
        $slides.each(function() {
            $(this).css('background-color', getBg(this));
        });
    }
    $.fn.cycle.commonReset = function(curr, next, opts, w, h, rev) {
        $(opts.elements).not(curr).hide();
        if (typeof opts.cssBefore.opacity == 'undefined')
            opts.cssBefore.opacity = 1;
        opts.cssBefore.display = 'block';
        if (opts.slideResize && w !== false && next.cycleW > 0)
            opts.cssBefore.width = next.cycleW;
        if (opts.slideResize && h !== false && next.cycleH > 0)
            opts.cssBefore.height = next.cycleH;
        opts.cssAfter = opts.cssAfter || {};
        opts.cssAfter.display = 'none';
        $(curr).css('zIndex', opts.slideCount + (rev === true ? 1 : 0));
        $(next).css('zIndex', opts.slideCount + (rev === true ? 0 : 1));
    };
    $.fn.cycle.custom = function(curr, next, opts, cb, fwd, speedOverride) {
        var $l = $(curr),
            $n = $(next);
        var speedIn = opts.speedIn,
            speedOut = opts.speedOut,
            easeIn = opts.easeIn,
            easeOut = opts.easeOut;
        $n.css(opts.cssBefore);
        if (speedOverride) {
            if (typeof speedOverride == 'number')
                speedIn = speedOut = speedOverride;
            else
                speedIn = speedOut = 1;
            easeIn = easeOut = null;
        }
        var fn = function() {
            $n.animate(opts.animIn, speedIn, easeIn, function() {
                cb();
            });
        };
        $l.animate(opts.animOut, speedOut, easeOut, function() {
            $l.css(opts.cssAfter);
            if (!opts.sync)
                fn();
        });
        if (opts.sync) fn();
    };
    $.fn.cycle.transitions = {
        fade: function($cont, $slides, opts) {
            $slides.not(':eq(' + opts.currSlide + ')').css('opacity', 0);
            opts.before.push(function(curr, next, opts) {
                $.fn.cycle.commonReset(curr, next, opts);
                opts.cssBefore.opacity = 0;
            });
            opts.animIn = {
                opacity: 1
            };
            opts.animOut = {
                opacity: 0
            };
            opts.cssBefore = {
                top: 0,
                left: 0
            };
        }
    };
    $.fn.cycle.ver = function() {
        return ver;
    };
    $.fn.cycle.defaults = {
        activePagerClass: 'activeSlide',
        after: null,
        allowPagerClickBubble: false,
        animIn: null,
        animOut: null,
        aspect: false,
        autostop: 0,
        autostopCount: 0,
        backwards: false,
        before: null,
        center: null,
        cleartype: !$.support.opacity,
        cleartypeNoBg: false,
        containerResize: 1,
        containerResizeHeight: 0,
        continuous: 0,
        cssAfter: null,
        cssBefore: null,
        delay: 0,
        easeIn: null,
        easeOut: null,
        easing: null,
        end: null,
        fastOnEvent: 0,
        fit: 0,
        fx: 'fade',
        fxFn: null,
        height: 'auto',
        manualTrump: true,
        metaAttr: 'cycle',
        next: null,
        nowrap: 0,
        onPagerEvent: null,
        onPrevNextEvent: null,
        pager: null,
        pagerAnchorBuilder: null,
        pagerEvent: 'click.cycle',
        pause: 0,
        pauseOnPagerHover: 0,
        prev: null,
        prevNextEvent: 'click.cycle',
        random: 0,
        randomizeEffects: 1,
        requeueOnImageNotLoaded: true,
        requeueTimeout: 250,
        rev: 0,
        shuffle: null,
        skipInitializationCallbacks: false,
        slideExpr: null,
        slideResize: 1,
        speed: 1000,
        speedIn: null,
        speedOut: null,
        startingSlide: undefined,
        sync: 1,
        timeout: 4000,
        timeoutFn: null,
        updateActivePagerLink: null,
        width: null
    };
})(jQuery);
(function($) {
    "use strict";
    $.fn.cycle.transitions.none = function($cont, $slides, opts) {
        opts.fxFn = function(curr, next, opts, after) {
            $(next).show();
            $(curr).hide();
            after();
        };
    };
    $.fn.cycle.transitions.fadeout = function($cont, $slides, opts) {
        $slides.not(':eq(' + opts.currSlide + ')').css({
            display: 'block',
            'opacity': 1
        });
        opts.before.push(function(curr, next, opts, w, h, rev) {
            $(curr).css('zIndex', opts.slideCount + (rev !== true ? 1 : 0));
            $(next).css('zIndex', opts.slideCount + (rev !== true ? 0 : 1));
        });
        opts.animIn.opacity = 1;
        opts.animOut.opacity = 0;
        opts.cssBefore.opacity = 1;
        opts.cssBefore.display = 'block';
        opts.cssAfter.zIndex = 0;
    };
    $.fn.cycle.transitions.scrollUp = function($cont, $slides, opts) {
        $cont.css('overflow', 'hidden');
        opts.before.push($.fn.cycle.commonReset);
        var h = $cont.height();
        opts.cssBefore.top = h;
        opts.cssBefore.left = 0;
        opts.cssFirst.top = 0;
        opts.animIn.top = 0;
        opts.animOut.top = -h;
    };
    $.fn.cycle.transitions.scrollDown = function($cont, $slides, opts) {
        $cont.css('overflow', 'hidden');
        opts.before.push($.fn.cycle.commonReset);
        var h = $cont.height();
        opts.cssFirst.top = 0;
        opts.cssBefore.top = -h;
        opts.cssBefore.left = 0;
        opts.animIn.top = 0;
        opts.animOut.top = h;
    };
    $.fn.cycle.transitions.scrollLeft = function($cont, $slides, opts) {
        $cont.css('overflow', 'hidden');
        opts.before.push($.fn.cycle.commonReset);
        var w = $cont.width();
        opts.cssFirst.left = 0;
        opts.cssBefore.left = w;
        opts.cssBefore.top = 0;
        opts.animIn.left = 0;
        opts.animOut.left = 0 - w;
    };
    $.fn.cycle.transitions.scrollRight = function($cont, $slides, opts) {
        $cont.css('overflow', 'hidden');
        opts.before.push($.fn.cycle.commonReset);
        var w = $cont.width();
        opts.cssFirst.left = 0;
        opts.cssBefore.left = -w;
        opts.cssBefore.top = 0;
        opts.animIn.left = 0;
        opts.animOut.left = w;
    };
    $.fn.cycle.transitions.scrollHorz = function($cont, $slides, opts) {
        $cont.css('overflow', 'hidden').width();
        opts.before.push(function(curr, next, opts, fwd) {
            if (opts.rev)
                fwd = !fwd;
            $.fn.cycle.commonReset(curr, next, opts);
            opts.cssBefore.left = fwd ? (next.cycleW - 1) : (1 - next.cycleW);
            opts.animOut.left = fwd ? -curr.cycleW : curr.cycleW;
        });
        opts.cssFirst.left = 0;
        opts.cssBefore.top = 0;
        opts.animIn.left = 0;
        opts.animOut.top = 0;
    };
    $.fn.cycle.transitions.scrollVert = function($cont, $slides, opts) {
        $cont.css('overflow', 'hidden');
        opts.before.push(function(curr, next, opts, fwd) {
            if (opts.rev)
                fwd = !fwd;
            $.fn.cycle.commonReset(curr, next, opts);
            opts.cssBefore.top = fwd ? (1 - next.cycleH) : (next.cycleH - 1);
            opts.animOut.top = fwd ? curr.cycleH : -curr.cycleH;
        });
        opts.cssFirst.top = 0;
        opts.cssBefore.left = 0;
        opts.animIn.top = 0;
        opts.animOut.left = 0;
    };
    $.fn.cycle.transitions.slideX = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $(opts.elements).not(curr).hide();
            $.fn.cycle.commonReset(curr, next, opts, false, true);
            opts.animIn.width = next.cycleW;
        });
        opts.cssBefore.left = 0;
        opts.cssBefore.top = 0;
        opts.cssBefore.width = 0;
        opts.animIn.width = 'show';
        opts.animOut.width = 0;
    };
    $.fn.cycle.transitions.slideY = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $(opts.elements).not(curr).hide();
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.animIn.height = next.cycleH;
        });
        opts.cssBefore.left = 0;
        opts.cssBefore.top = 0;
        opts.cssBefore.height = 0;
        opts.animIn.height = 'show';
        opts.animOut.height = 0;
    };
    $.fn.cycle.transitions.shuffle = function($cont, $slides, opts) {
        var i, w = $cont.css('overflow', 'visible').width();
        $slides.css({
            left: 0,
            top: 0
        });
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, true, true);
        });
        if (!opts.speedAdjusted) {
            opts.speed = opts.speed / 2;
            opts.speedAdjusted = true;
        }
        opts.random = 0;
        opts.shuffle = opts.shuffle || {
            left: -w,
            top: 15
        };
        opts.els = [];
        for (i = 0; i < $slides.length; i++)
            opts.els.push($slides[i]);
        for (i = 0; i < opts.currSlide; i++)
            opts.els.push(opts.els.shift());
        opts.fxFn = function(curr, next, opts, cb, fwd) {
            if (opts.rev)
                fwd = !fwd;
            var $el = fwd ? $(curr) : $(next);
            $(next).css(opts.cssBefore);
            var count = opts.slideCount;
            $el.animate(opts.shuffle, opts.speedIn, opts.easeIn, function() {
                var hops = $.fn.cycle.hopsFromLast(opts, fwd);
                for (var k = 0; k < hops; k++) {
                    if (fwd)
                        opts.els.push(opts.els.shift());
                    else
                        opts.els.unshift(opts.els.pop());
                }
                if (fwd) {
                    for (var i = 0, len = opts.els.length; i < len; i++)
                        $(opts.els[i]).css('z-index', len - i + count);
                } else {
                    var z = $(curr).css('z-index');
                    $el.css('z-index', parseInt(z, 10) + 1 + count);
                }
                $el.animate({
                    left: 0,
                    top: 0
                }, opts.speedOut, opts.easeOut, function() {
                    $(fwd ? this : curr).hide();
                    if (cb) cb();
                });
            });
        };
        $.extend(opts.cssBefore, {
            display: 'block',
            opacity: 1,
            top: 0,
            left: 0
        });
    };
    $.fn.cycle.transitions.turnUp = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.cssBefore.top = next.cycleH;
            opts.animIn.height = next.cycleH;
            opts.animOut.width = next.cycleW;
        });
        opts.cssFirst.top = 0;
        opts.cssBefore.left = 0;
        opts.cssBefore.height = 0;
        opts.animIn.top = 0;
        opts.animOut.height = 0;
    };
    $.fn.cycle.transitions.turnDown = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.animIn.height = next.cycleH;
            opts.animOut.top = curr.cycleH;
        });
        opts.cssFirst.top = 0;
        opts.cssBefore.left = 0;
        opts.cssBefore.top = 0;
        opts.cssBefore.height = 0;
        opts.animOut.height = 0;
    };
    $.fn.cycle.transitions.turnLeft = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, true);
            opts.cssBefore.left = next.cycleW;
            opts.animIn.width = next.cycleW;
        });
        opts.cssBefore.top = 0;
        opts.cssBefore.width = 0;
        opts.animIn.left = 0;
        opts.animOut.width = 0;
    };
    $.fn.cycle.transitions.turnRight = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, true);
            opts.animIn.width = next.cycleW;
            opts.animOut.left = curr.cycleW;
        });
        $.extend(opts.cssBefore, {
            top: 0,
            left: 0,
            width: 0
        });
        opts.animIn.left = 0;
        opts.animOut.width = 0;
    };
    $.fn.cycle.transitions.zoom = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, false, true);
            opts.cssBefore.top = next.cycleH / 2;
            opts.cssBefore.left = next.cycleW / 2;
            $.extend(opts.animIn, {
                top: 0,
                left: 0,
                width: next.cycleW,
                height: next.cycleH
            });
            $.extend(opts.animOut, {
                width: 0,
                height: 0,
                top: curr.cycleH / 2,
                left: curr.cycleW / 2
            });
        });
        opts.cssFirst.top = 0;
        opts.cssFirst.left = 0;
        opts.cssBefore.width = 0;
        opts.cssBefore.height = 0;
    };
    $.fn.cycle.transitions.fadeZoom = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, false);
            opts.cssBefore.left = next.cycleW / 2;
            opts.cssBefore.top = next.cycleH / 2;
            $.extend(opts.animIn, {
                top: 0,
                left: 0,
                width: next.cycleW,
                height: next.cycleH
            });
        });
        opts.cssBefore.width = 0;
        opts.cssBefore.height = 0;
        opts.animOut.opacity = 0;
    };
    $.fn.cycle.transitions.blindX = function($cont, $slides, opts) {
        var w = $cont.css('overflow', 'hidden').width();
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.animIn.width = next.cycleW;
            opts.animOut.left = curr.cycleW;
        });
        opts.cssBefore.left = w;
        opts.cssBefore.top = 0;
        opts.animIn.left = 0;
        opts.animOut.left = w;
    };
    $.fn.cycle.transitions.blindY = function($cont, $slides, opts) {
        var h = $cont.css('overflow', 'hidden').height();
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.animIn.height = next.cycleH;
            opts.animOut.top = curr.cycleH;
        });
        opts.cssBefore.top = h;
        opts.cssBefore.left = 0;
        opts.animIn.top = 0;
        opts.animOut.top = h;
    };
    $.fn.cycle.transitions.blindZ = function($cont, $slides, opts) {
        var h = $cont.css('overflow', 'hidden').height();
        var w = $cont.width();
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.animIn.height = next.cycleH;
            opts.animOut.top = curr.cycleH;
        });
        opts.cssBefore.top = h;
        opts.cssBefore.left = w;
        opts.animIn.top = 0;
        opts.animIn.left = 0;
        opts.animOut.top = h;
        opts.animOut.left = w;
    };
    $.fn.cycle.transitions.growX = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, true);
            opts.cssBefore.left = this.cycleW / 2;
            opts.animIn.left = 0;
            opts.animIn.width = this.cycleW;
            opts.animOut.left = 0;
        });
        opts.cssBefore.top = 0;
        opts.cssBefore.width = 0;
    };
    $.fn.cycle.transitions.growY = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.cssBefore.top = this.cycleH / 2;
            opts.animIn.top = 0;
            opts.animIn.height = this.cycleH;
            opts.animOut.top = 0;
        });
        opts.cssBefore.height = 0;
        opts.cssBefore.left = 0;
    };
    $.fn.cycle.transitions.curtainX = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, true, true);
            opts.cssBefore.left = next.cycleW / 2;
            opts.animIn.left = 0;
            opts.animIn.width = this.cycleW;
            opts.animOut.left = curr.cycleW / 2;
            opts.animOut.width = 0;
        });
        opts.cssBefore.top = 0;
        opts.cssBefore.width = 0;
    };
    $.fn.cycle.transitions.curtainY = function($cont, $slides, opts) {
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false, true);
            opts.cssBefore.top = next.cycleH / 2;
            opts.animIn.top = 0;
            opts.animIn.height = next.cycleH;
            opts.animOut.top = curr.cycleH / 2;
            opts.animOut.height = 0;
        });
        opts.cssBefore.height = 0;
        opts.cssBefore.left = 0;
    };
    $.fn.cycle.transitions.cover = function($cont, $slides, opts) {
        var d = opts.direction || 'left';
        var w = $cont.css('overflow', 'hidden').width();
        var h = $cont.height();
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.cssAfter.display = '';
            if (d == 'right')
                opts.cssBefore.left = -w;
            else if (d == 'up')
                opts.cssBefore.top = h;
            else if (d == 'down')
                opts.cssBefore.top = -h;
            else
                opts.cssBefore.left = w;
        });
        opts.animIn.left = 0;
        opts.animIn.top = 0;
        opts.cssBefore.top = 0;
        opts.cssBefore.left = 0;
    };
    $.fn.cycle.transitions.uncover = function($cont, $slides, opts) {
        var d = opts.direction || 'left';
        var w = $cont.css('overflow', 'hidden').width();
        var h = $cont.height();
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, true, true);
            if (d == 'right')
                opts.animOut.left = w;
            else if (d == 'up')
                opts.animOut.top = -h;
            else if (d == 'down')
                opts.animOut.top = h;
            else
                opts.animOut.left = -w;
        });
        opts.animIn.left = 0;
        opts.animIn.top = 0;
        opts.cssBefore.top = 0;
        opts.cssBefore.left = 0;
    };
    $.fn.cycle.transitions.toss = function($cont, $slides, opts) {
        var w = $cont.css('overflow', 'visible').width();
        var h = $cont.height();
        opts.before.push(function(curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, true, true);
            if (!opts.animOut.left && !opts.animOut.top)
                $.extend(opts.animOut, {
                    left: w * 2,
                    top: -h / 2,
                    opacity: 0
                });
            else
                opts.animOut.opacity = 0;
        });
        opts.cssBefore.left = 0;
        opts.cssBefore.top = 0;
        opts.animIn.left = 0;
    };
    $.fn.cycle.transitions.wipe = function($cont, $slides, opts) {
        var w = $cont.css('overflow', 'hidden').width();
        var h = $cont.height();
        opts.cssBefore = opts.cssBefore || {};
        var clip;
        if (opts.clip) {
            if (/l2r/.test(opts.clip))
                clip = 'rect(0px 0px ' + h + 'px 0px)';
            else if (/r2l/.test(opts.clip))
                clip = 'rect(0px ' + w + 'px ' + h + 'px ' + w + 'px)';
            else if (/t2b/.test(opts.clip))
                clip = 'rect(0px ' + w + 'px 0px 0px)';
            else if (/b2t/.test(opts.clip))
                clip = 'rect(' + h + 'px ' + w + 'px ' + h + 'px 0px)';
            else if (/zoom/.test(opts.clip)) {
                var top = parseInt(h / 2, 10);
                var left = parseInt(w / 2, 10);
                clip = 'rect(' + top + 'px ' + left + 'px ' + top + 'px ' + left + 'px)';
            }
        }
        opts.cssBefore.clip = opts.cssBefore.clip || clip || 'rect(0px 0px 0px 0px)';
        var d = opts.cssBefore.clip.match(/(\d+)/g);
        var t = parseInt(d[0], 10),
            r = parseInt(d[1], 10),
            b = parseInt(d[2], 10),
            l = parseInt(d[3], 10);
        opts.before.push(function(curr, next, opts) {
            if (curr == next) return;
            var $curr = $(curr),
                $next = $(next);
            $.fn.cycle.commonReset(curr, next, opts, true, true, false);
            opts.cssAfter.display = 'block';
            var step = 1,
                count = parseInt((opts.speedIn / 13), 10) - 1;
            (function f() {
                var tt = t ? t - parseInt(step * (t / count), 10) : 0;
                var ll = l ? l - parseInt(step * (l / count), 10) : 0;
                var bb = b < h ? b + parseInt(step * ((h - b) / count || 1), 10) : h;
                var rr = r < w ? r + parseInt(step * ((w - r) / count || 1), 10) : w;
                $next.css({
                    clip: 'rect(' + tt + 'px ' + rr + 'px ' + bb + 'px ' + ll + 'px)'
                });
                (step++ <= count) ? setTimeout(f, 13) : $curr.css('display', 'none');
            })();
        });
        $.extend(opts.cssBefore, {
            display: 'block',
            opacity: 1,
            top: 0,
            left: 0
        });
        opts.animIn = {
            left: 0
        };
        opts.animOut = {
            left: 0
        };
    };
})(jQuery);
var OM = OM || {};
console = typeof console === 'undefined' ? {} : console;
OM.util = OM.util || {};
OM.util.readEmpty = function(o) {
    if (typeof o == "string") {
        return o;
        return o;
    } else {
        return "";
    }
};
OM.init = function() {
    if (typeof jQuery != 'undefined') {
        OM.bp = OM.bp || {};
        OM.bp = OM.bp || {};
        OM.bp.financeCalc = OM.bp.financeCalc || {};
        OM.bp.financeCalc = function(step, opts) {
            switch (step) {
                case "paymentQuote":
                    var pev2 = parseVars("brand:build:payment quote:estimator:<nameplate>");
                    s.channel = "payment estimator";
                    s.hier1 = parseVars("shopping tools:payment estimator:<vehicle category>:<nameplate>");
                    s.prop5 = "estimate payment quote";
                    omnitureOnClick('o', pev2);
                    break;
                case "details":
                    s.pageName = parseVars("brand:build:payment quote:details:<nameplate>");
                    s.channel = "payment estimator";
                    s.hier1 = parseVars("shopping tools:payment estimator:<vehicle category>:<nameplate>");
                    s.eVar11 = "brand:build:payment quote:details";
                    s.prop11 = s.eVar11;
                    s.eVar48 = "event: payment estimator";
                    s.prop48 = s.eVar48;
                    s.eVar49 = "finance quote details";
                    s.prop49 = s.eVar49;
                    s.events = "event21, event43";
                    s.linkTrackEvents = s.events;
                    s.linkTrackVars += ",eVar48,sProp48";
                    generatePageLoad();
                    s.linkTrackEvents = "";
                    s.eVar48 = "";
                    s.prop48 = "";
                    s.eVar49 = "";
                    s.prop49 = "";
                    s.events = "";
                    break;
                case "apply now":
                    s.pageName = parseVars("brand:build:payment quote:apply now:<nameplate>");
                    s.channel = "payment estimator";
                    s.hier1 = parseVars("shopping tools:payment estimator:<vehicle category>:<nameplate>");
                    s.eVar11 = "brand:build:payment quote:details";
                    s.prop11 = s.eVar11;
                    generatePageLoad();
                    break;
            }
        };
        OM.bp.userjourney = OM.bp.userjourney || {};
        OM.bp.userjourney = function(step, opts) {
            if (step == 'LHMvehicle,pv') {
                step = 'LHMvehicle';
                opts = 'pv';
            }
            isPV = opts == "pv" ? true : false;
            if (isPV) {
                sford.vc = 'cars';
            } else {
                sford.vc = 'trucks';
            }
            s.linkTrackVars = "channel,hier1,eVar4,eVar6,eVar11,eVar14,eVar15,prop4,prop5,prop11,prop14,prop15";
            if (arguments.length > 2 && arguments[3] != null) {
                if (isPV) {
                    var f = arguments[3];
                    sford.vc = f.omvc;
                    s.eVar12 = f.ommy;
                    s.eVar16 = f.omnp;
                    sford.my = f.ommy;
                    sford.np = f.omnp;
                } else {
                    var f = arguments[3];
                    sford.vc = f.omvc;
                    s.eVar12 = f.ommy;
                    s.eVar16 = f.omnp;
                    sford.my = f.ommy;
                    sford.np = f.omnp;
                }
                s.prop12 = s.eVar12;
                s.prop16 = s.eVar16;
                s.linkTrackVars = s.linkTrackVars + ",eVar12,prop12,eVar16,prop16";
            }
            var isOk = false;
            switch (step) {
                case "#infoStage":
                    break;
                case "LHMvehicle":
                    s.pageName = buildPageName() + parseVars(":0:vehicle selection:<vehicle category>");
                    s.hier1 = sford.hier1 + parseVars(":<vehicle category>");
                    s.eVar11 = sford.eVar11 + ":0:vehicle selection";
                    s.prop11 = s.eVar11;
                    isOk = true;
                    break;
                case "Model":
                case "#modelsPanel":
                    if (isPV || EP2._bootstrappedIsConversion) {
                        s.eVar48 = "event: bp start", s.prop48 = s.eVar48;
                        s.events = "event6,event43";
                    }
                    s.linkTrackEvents = s.events;
                    s.linkTrackVars += ",eVar48,sProp48";
                    s.pageName = buildPageName() + parseVars(":2:series:<nameplate>");
                    s.hier1 = sford.hier1 + parseVars(":<vehicle category>:<nameplate>");
                    s.eVar11 = sford.eVar11 + ":2:series";
                    s.prop11 = s.eVar11;
                    if (typeof sford.my == "string")
                        isOk = true;
                    break;
                case "Bodystyle":
                case "#bodystyleLoadspacePayloadPanel":
                case "#carouselBodystyle":
                    if (!isPV) {
                        s.eVar48 = "event: bp start", s.prop48 = s.eVar48;
                        s.events = "event6,event43";
                    }
                    s.pageName = buildPageName() + parseVars(":1:bodystyle:<nameplate>");
                    s.hier1 = sford.hier1 + parseVars(":<vehicle category>:<nameplate>");
                    s.eVar11 = sford.eVar11 + ":1:bodystyle";
                    s.prop11 = s.eVar11;
                    s.prop48 = s.eVar48 = "event: bp start"
                    if (typeof sford.my == "string")
                        isOk = true;
                    break;
                case "EngineTransmission":
                case "#engineTransmissionPanel":
                    s.pageName = buildPageName() + parseVars(":3:engine:<nameplate>");
                    s.hier1 = sford.hier1 + parseVars(":<vehicle category>:<nameplate>");
                    s.eVar11 = sford.eVar11 + ":3:engine";
                    s.prop11 = s.eVar11;
                    if (typeof sford.my == "string")
                        isOk = true;
                    break;
                case "Color":
                case "#colorPanel":
                    s.pageName = buildPageName() + parseVars(":4:colour:<nameplate>");
                    s.hier1 = sford.hier1 + parseVars(":<vehicle category>:<nameplate>");
                    s.eVar11 = sford.eVar11 + ":4:colour";
                    s.prop11 = s.eVar11;
                    if (typeof sford.my == "string")
                        isOk = true;
                    break;
                case "Trim":
                    s.pageName = buildPageName() + parseVars(":5:trim:<nameplate>");
                    s.hier1 = sford.hier1 + parseVars(":<vehicle category>:<nameplate>");
                    s.eVar11 = sford.eVar11 + ":5:trim";
                    s.prop11 = s.eVar11;
                    isOk = true;
                    break;
                case "Extras":
                case "#featuresPanel":
                    s.pageName = buildPageName() + parseVars(":6:options:<nameplate>");
                    s.hier1 = s.hier1 + parseVars(":<vehicle category>:<nameplate>");
                    s.eVar11 = sford.eVar11 + ":6:options";
                    s.prop11 = s.eVar11;
                    if (typeof sford.my == "string")
                        isOk = true;
                    break;
                case "Summary":
                case "#summaryPanel":
                    if (OM.debug) {
                        debugger
                    }
                    if (!isPV) {
                        f = arguments[2];
                        OM.bp.b = f.bodystyle.WERSCode;
                        OM.bp.pl = f.payload.WERSCode;
                        OM.bp.n = EP2._bootstrappedCode + " " + EP2._bootstrappedSGname;
                        OM.bp.c = f.color.WERSCode;
                        OM.bp.s = f.series.WERSCode;
                        OM.bp.e = f.extras.WERSCode;
                        OM.bp.et = f.engineTransDriveAxle.WERSCode;
                        OM.bp.p = f.totalPriceNoVat;
                    } else {
                        f = bp.context;
                        OM.bp.b = f.bodystyle.uscCode;
                        OM.bp.c = f.color.uscCode;
                        OM.bp.s = f.series.uscCode;
                        OM.bp.t = f.trim.uscCode;
                        OM.bp.e = f.extras;
                        OM.bp.et = f.engineTransmission.uscCode;
                        OM.bp.p = f.totalPrice;
                    }
                    s.eVar48 = "event: bp complete", s.prop48 = s.eVar48;
                    s.eVar49 = "full build", s.prop49 = s.eVar49;
                    s.events = "event2,event43";
                    s.linkTrackEvents = s.events;
                    s.pageName = buildPageName() + parseVars(":7:vehicle summary:<nameplate>");
                    s.eVar18 = OM.util.readEmpty(OM.bp.n) + ":" + OM.util.readEmpty(OM.bp.s) + ":" + OM.util.readEmpty(OM.bp.pl);
                    s.eVar19 = OM.util.readEmpty(OM.bp.c) + ":" + OM.util.readEmpty(OM.bp.t);
                    s.eVar20 = "";
                    s.eVar21 = "";
                    if (typeof OM.bp.e == "object" && OM.bp.e.length > 0) {
                        var delim = "";
                        s.eVar23 = "";
                        for (var i = 0; i < OM.bp.e.length; i++) {
                            s.eVar23 += delim + OM.util.readEmpty((OM.bp.e[i].uscCode) ? OM.bp.e[i].uscCode : OM.bp.e[i].code);
                            delim = ":";
                        }
                    }
                    s.hier1 = sford.hier1 + parseVars(":<vehicle category>:<nameplate>");
                    s.eVar11 = sford.eVar11 + ":7:vehicle summary";
                    s.prop11 = sford.eVar11;
                    s.eVar24 = OM.util.readEmpty(OM.bp.et);
                    s.eVar25 = OM.util.readEmpty(OM.bp.p);
                    s.linkTrackVars = "channel,hier1,eVar4,eVar6,eVar11,eVar14,eVar15,eVar18,eVar19,eVar23,eVar48,eVar49,prop4,prop5,prop11,prop14,prop15,prop48,prop49";
                    if (typeof sford.my == "string")
                        isOk = true;
                    break;
            }
            if (isOk) {
                generatePageLoad();
            }
            s.linkTrackEvents = "";
            s.eVar48 = "";
            s.prop48 = "";
            s.eVar49 = "";
            s.prop49 = "";
            s.events = "";
        };
        OM.defaultlinkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop5,prop11,prop12,prop14,prop15,prop16";
        OM.cookie = OM.cookie || {};
        OM.cookie.create = function(name, value, days) {
            var expires;
            if (days) {
                var date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = "" + date.toGMTString();
            } else
                expires = "";
            document.cookie = name + "=" + value + expires + "; path=/";
        };
        OM.cookie.read = function(name) {
            var nameEQ = name + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ')
                    c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) == 0)
                    return c.substring(nameEQ.length, c.length);
            }
            return null;
        };
        OM.cookie.erase = function(name) {
            OM.cookie.create(name, "", -1);
        };
        OM.debug = OM.debug || false;
        OM.debug = OM.cookie.read('omnidebug');
        if (OM.debug) {
            $('[class*="om_"]').bind({
                mouseenter: function() {
                    var classTokens = this.className.split(/\s+/);
                    for (var c = 0; c < classTokens.length; c++) {
                        if (classTokens[c].indexOf("om_") == 0) {
                            var s = classTokens[c];
                            var el = jQuery._data(this, "events");
                            for (e in el) {
                                if (el[e][0].data != null) {
                                    s += "<br>" + e + "|" + el[e][0].data.cls;
                                } else {
                                    s += "<br>" + e;
                                }
                            }
                            $('#omnidiv').html(s);
                        }
                    }
                },
                mouseleave: function() {
                    $('#omnidiv').html("");
                }
            });
        }
        $('[class*="om_"]').each(function() {
            var classTokens = this.className.split(/\s+/);
            for (var c = 0; c < classTokens.length; c++) {
                if (classTokens[c].indexOf("om_") == 0) {
                    if (OM.debug)
                        console.log("BIND:" + this.href + "|" + classTokens[c]);
                    $(this).bind('click', {
                        cls: classTokens[c]
                    }, function(event) {
                        if (OM.debug)
                            console.debug("FIRE:" + event.data.cls);
                        if (OM[event.data.cls] !== undefined) {
                            var _pushV;
                            _pushV = s.linkTrackVars;
                            s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop5,prop11,prop12,prop14,prop15,prop16";
                            s.prop5 = OM[event.data.cls].tag;
                            omnitureOnClick(OM[event.data.cls].clickType, getOmniturePageContext() + ":" + OM[event.data.cls].tag);
                            s.linkTrackVars = _pushV;
                        } else if (OM.debug)
                            console.debug("No onclick defined for " + event.data.cls);
                    });
                }
            }
        });
        $('[class*="omv_"]').each(function() {
            var classTokens = this.className.split(/\s+/);
            for (var c = 0; c < classTokens.length; c++) {
                if (classTokens[c].indexOf("omv_") == 0) {
                    if (OM.debug)
                        console.log("BIND:" + this.href + "|" + classTokens[c]);
                    $(this).bind('click', {
                        cls: classTokens[c]
                    }, function(event) {
                        if (OM.debug)
                            console.debug("FIRE:" + event.data.cls);
                        if (OM[event.data.cls] !== undefined) {
                            omnitureOnClick(eval(event.data.cls).clickType, eval(event.data.cls).tag);
                        } else if (OM.debug)
                            console.debug("No onclick defined for " + event.data.cls);
                    });
                }
            }
        });
        $('[class*="om_mt_ti"]').each(function() {
            var classTokens = this.className.split(/\s+/);
            for (var c = 0; c < classTokens.length; c++) {
                if (classTokens[c].indexOf("om_mt_") == 0) {
                    if (OM.debug)
                        console.log("BIND:" + this.href + "|" + classTokens[c]);
                    $(this).bind('click', {
                        cls: classTokens[c]
                    }, function(event) {
                        if (OM.debug)
                            console.debug("FIRE:" + event.data.cls);
                    });
                }
            }
        });
        $("div.secondary-tabs nav.sub-nav").delegate($('[class*="omt_"]'), "click", function(event) {
            if (event.srcElement.className === "omt_") {
                if (OM.debug) console.debug("FIRE:" + event.srcElement);
                TK.broadcast(document.body, "pageload", {
                    "tabName": event.srcElement.innerHTML
                });
            }
        });
        $('[id*="LHM"]').each(function() {
            $(this).bind('click', function(event) {
                OM.bp.userjourney(this.id);
            });
        });
        if (OM.onPageLoad) {
            if (OM.debug)
                console.log(OM.onPageLoad);
            var _ref = OM.onPageLoad.split(/[|_]/);
            if (_ref.length > 0) {
                var f = _ref[0];
                var p = "";
                for (var i = 1; i < _ref.length; i++) {
                    if (i > 1)
                        p += ',';
                    p += _ref[i];
                }
                var fn = eval("OM." + f);
                if (typeof fn == "function") {
                    fn(p);
                }
            }
        }
    } else {}
};
OM.OSBOV = OM.OSBOV || {};
OM.OSBOV.sn = function(nameplate) {
    sford.setNp = nameplate;
};
OM.OSBOV.price = function(price) {
    sford.setPrice = price;
};
var OSBOVDealerCode = '';
OM.OSBOV.osbovdc = function(dealerCode) {
    OSBOVDealerCode = dealerCode;
};
var OSBOVTotalServcesPrice = '';
OM.OSBOV.osbovtsp = function(totalPrice) {
    OSBOVTotalServcesPrice = totalPrice;
};
var OSBOVBookingID = '';
OM.OSBOV.osbovbid = function(bookingID) {
    OSBOVBookingID = "osbov " + bookingID;
};
OM.OSBOV.pl = function(step, opts) {
    np = function() {
        if ($("#OSBOVNP").length > 0)
            return "ford " + $(OSBOVNP).val();
        return "";
    }
    price = function() {
        if ($("#OSBOVPR").length > 0)
            return $(OSBOVPR).val();
        return "";
    }
    s.hier = sford.hier1;
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop5,prop11,prop12,prop14,prop15,prop16,eVar48,prop48,eVar49,prop49";
    switch (step) {
        case "sve":
            s.pageName = buildPageName() + ":" + parseVars("select vehicle");
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar48 = "event:schedule service start", s.prop48 = s.eVar48;
            s.eVar49 = 'osbov';
            s.prop49 = s.eVar49;
            s.events = "event43,event63";
            s.linkTrackEvents = s.events;
            break;
        case "smy":
            break;
        case "cs":
            s.pageName = buildPageName() + ":" + parseVars("choose service");
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar16 = np();
            s.prop16 = s.eVar16;
            break;
        case "fde":
            s.pageName = buildPageName() + ":" + parseVars("find dealer");
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar16 = np();
            s.prop16 = s.eVar16;
            break;
        case "der":
            s.pageName = buildPageName() + ":" + parseVars("dealer results");
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar16 = np();
            s.prop16 = s.eVar16;
            s.eVar48 = "event:find dealer", s.prop48 = s.eVar48;
            s.eVar49 = 'osbov';
            s.prop49 = s.eVar49;
            s.events = "event1, event43";
            s.linkTrackEvents = s.events;
            break;
        case "dt":
            s.pageName = buildPageName() + ":" + parseVars("choose date time");
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar16 = np();
            s.prop16 = s.eVar16;
            s.eVar1 = OSBOVDealerCode;
            break;
        case "cd":
            s.pageName = buildPageName() + ":" + parseVars("contact details");
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar16 = np();
            s.prop16 = s.eVar16;
            s.eVar1 = OSBOVDealerCode;
            break;
        case "bs":
            s.pageName = buildPageName() + ":" + parseVars("booking summary");
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar16 = np();
            s.prop16 = s.eVar16;
            s.eVar1 = OSBOVDealerCode;
            s.eVar25 = OSBOVTotalServcesPrice;
            s.linkTrackVars += ",eVar25";
            break;
        case "bc":
            s.pageName = buildPageName() + ":" + parseVars("booking confirmation");
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar16 = np();
            s.prop16 = s.eVar16;
            s.eVar48 = "event:find dealer", s.prop48 = s.eVar48;
            s.eVar49 = 'osbov';
            s.prop49 = s.eVar49;
            s.eVar25 = price();
            s.eVar28 = "service appointment scheduled";
            s.prop18 = s.eVar28;
            s.eVar48 = "event:schedule service complete";
            s.prop48 = s.eVar48;
            s.linkTrackVars += ",eVar25,eVar28,sProp18";
            s.events = "event10,event43,event64";
            s.linkTrackEvents = s.events;
            s.eVar1 = OSBOVDealerCode;
            s.eVar17 = OSBOVBookingID;
            break;
        case "bsl":
            s.hier = "owners:ford owner:osb:view existing booking summary";
            s.hier1 = "owners:ford owner:osb:view existing booking";
            sford.pageName = "owner:osbov:view service";
            s.pageName = buildPageName() + ":" + parseVars("booking summary");
            s.eVar11 = "owner:osb:schedule service:existing booking summary";
            s.prop11 = s.eVar11;
            s.eVar16 = np();
            s.prop16 = s.eVar16;
            s.eVar48 = "event:view existing service booking", s.prop48 = s.eVar48;
            s.eVar49 = 'osbov';
            s.prop49 = s.eVar49;
            s.eVar1 = OSBOVDealerCode;
            s.eVar17 = OSBOVBookingID;
            s.eVar25 = OSBOVTotalServcesPrice;
            s.linkTrackVars += ",eVar25,eVar17,eVar1,eVar16";
            break;
        case "ccl":
            s.hier = "owners:ford owner:osb:cancel booking";
            s.hier1 = "owners:ford owner:osb:cancel booking";
            s.pageName = "owner:osbov:view service:cancel confirmation";
            s.eVar11 = "owner:osb:schedule service:cancel confirmation";
            s.prop11 = s.eVar11;
            s.eVar16 = np();
            s.prop16 = s.eVar16;
            s.eVar48 = "event:cancel service booking", s.prop48 = s.eVar48;
            s.eVar49 = 'osbov';
            s.prop49 = s.eVar49;
            s.events = "event65,event43";
            s.linkTrackEvents = s.events;
            s.eVar1 = OSBOVDealerCode;
            s.eVar17 = OSBOVBookingID;
            s.eVar25 = OSBOVTotalServcesPrice;
            s.linkTrackVars += ",eVar25,eVar17,eVar1,eVar16";
            break;
        default:
    }
    generatePageLoad();
    s.linkTrackEvents = "";
    s.eVar48 = "";
    s.prop48 = "";
    s.eVar49 = "";
    s.prop49 = "";
    s.events = "";
};
OM.OSBOV.oc = function(step) {
    var ln = "";
    switch (step) {
        case "smy":
            break;
        case "ccl":
            ln = "owner:osbov:cancel booking";
            s.eVar25 = price();
            s.linkTrackVars += ",eVar25";
            s.eVar17 = OSBOVBookingID;
            s.eVar1 = OSBOVDealerCode;
            s.linkTrackVars += ",eVar1";
            s.prop5 = "cancel booking";
            s.hier1 = "owners:ford owner:osb:cancel booking";
            s.eVar25 = OSBOVTotalServcesPrice;
            s.eVar16 = np();
            s.prop16 = s.eVar16;
            s.linkTrackVars += ",eVar25,eVar17,eVar16";
            break;
        case "cs":
            ln = "owner:osb:choose service";
            s.prop5 = "choose service";
            s.eVar48 = "event:choose service", s.prop48 = s.eVar48;
            s.eVar49 = 'osbov';
            s.prop49 = s.eVar49;
            s.events = "event43";
            s.linkTrackEvents = s.events;
            break;
        case "des":
            ln = "owner:osbov:dealer search";
            s.prop5 = "find dealer";
            break;
        case "ded":
            ln = "owner:osbov:view dealer details";
            s.eVar48 = "event:view dealer details", s.prop48 = s.eVar48;
            s.eVar49 = 'osbov';
            s.prop49 = s.eVar49;
            s.prop5 = "view dealer details";
            s.events = "event43";
            s.linkTrackEvents = s.events;
            s.eVar1 = OSBOVDealerCode;
            s.linkTrackVars += ",eVar1";
            break;
        case "ade":
            ln = "owner:osbov:amend dealer";
            s.channel = "osb";
            s.hier1 = "owners:ford owner:osb:new service";
            s.prop5 = "amend booking details";
            s.eVar1 = OSBOVDealerCode;
            s.linkTrackVars += ",eVar1";
            s.eVar16 = np();
            s.prop16 = s.eVar16;
            s.eVar25 = OSBOVTotalServcesPrice;
            s.linkTrackVars += ",eVar25,eVar1,eVar16";
            break;
        case "acd":
            ln = "owner:osbov:amend contact details";
            s.prop5 = "amend booking details";
            s.eVar1 = OSBOVDealerCode;
            s.linkTrackVars += ",eVar1";
            break;
        case "adt":
            ln = "owner:osbov:amend date";
            s.prop5 = "amend booking details";
            s.eVar1 = OSBOVDealerCode;
            s.linkTrackVars += ",eVar1";
            break;
        case "ave":
            ln = "owner:osbov:amend vehicle info";
            s.prop5 = "amend booking details";
            s.eVar1 = OSBOVDealerCode;
            s.linkTrackVars += ",eVar1";
            break;
        case "as":
            ln = "owner:osbov:amend service";
            s.prop5 = "amend booking details";
            s.eVar1 = OSBOVDealerCode;
            s.linkTrackVars += ",eVar1";
            break;
        case "bn":
            ln = "owner:osbov:schedule service:book now";
            s.prop5 = "confirm service booking";
            s.eVar1 = OSBOVDealerCode;
            s.linkTrackVars += ",eVar1";
            break;
        case "ps":
            ln = "owner:osbov:print summary";
            s.prop5 = "print booking summary";
            s.eVar1 = OSBOVDealerCode;
            s.linkTrackVars += ",eVar1";
            s.eVar28 = "";
            break;
    }
    if (ln != "")
        omnitureOnClick('o', ln);
    s.linkTrackEvents = "";
    s.eVar48 = "";
    s.prop48 = "";
    s.eVar49 = "";
    s.prop49 = "";
    s.events = "";
};

function omnitureOwnerManualsResults() {
    if (typeof sford == "object") {
        s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar14,eVar15,prop4,prop11,prop15";
        s.pageName = buildPageName() + ":results";
        s.linkTrackEvents = "";
        s.eVar11 = s.pageName;
        s.prop11 = s.pageName;
    }
}

function omnitureOwnerManualsNoResults() {
    if (typeof sford == "object") {
        s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar14,eVar15,prop4,prop11,prop15";
        s.pageName = buildPageName() + ":no results";
        s.linkTrackEvents = "";
        s.eVar11 = s.pageName;
        s.prop11 = s.pageName;
    }
}

function getOmniturePageContext() {
    return (sford.pageName.replace("<nameplate>", ""));
}

function parseVars(str) {
    if (typeof sford == "object") {
        if (typeof sford.np != "string") {
            sford.np = "";
        }
        if (typeof sford.my != "string") {
            sford.my = "";
        }
        if (typeof sford.vc != "string") {
            sford.vc = "";
        }
        if (typeof sford.tabName != "string") {
            sford.tabName = "";
        }
        if (typeof sford.pageNumber != "number") {
            sford.pageNumber = "";
        }
    }
    str = str.replace("<nameplate>", sford.np);
    str = str.replace("<model year>", sford.my);
    str = str.replace("<vehicle category>", sford.vc);
    str = str.replace("<page number>", sford.pageNumber);
    if (typeof sford.tabName == "string" && sford.tabName.length > 1) {
        str = str.replace("<tab name>", sford.tabName);
    } else {
        str = str.replace(":<tab name>", "");
    }
    if (typeof sford.action != "string" || sford.action.length == 0) {
        str = str.replace(":<action>", "");
    } else {
        str = str.replace("<action>", sford.action.toLowerCase());
    }
    if (typeof sford.value != "string" || sford.value.length == 0) {
        str = str.replace(":<value>", "");
    } else {
        str = str.replace("<value>", sford.value.toLowerCase());
    }
    if (typeof sford.bodystyle != "string" || sford.bodystyle.length == 0) {
        str = str.replace(":<bodystyle>", "");
    } else {
        str = str.replace("<bodystyle>", sford.bodystyle.toLowerCase());
    }
    if (typeof sford.assetId != "string" || sford.assetId.length == 0) {
        str = str.replace(":<asset id>", "");
    } else {
        str = str.replace("<asset id>", sford.assetId);
    }
    if (typeof sford.itemNumber != "number") {
        str = str.replace(":<item number>", "");
    } else {
        str = str.replace("<item number>", sford.itemNumber);
    }
    str = str.replace("<blank>", "");
    return str;
}

function parseNpVars(str, np, my, vc, pn, tn) {
    str = str.replace("<nameplate>", np);
    str = str.replace("<model year>", my);
    str = str.replace("<vehicle category>", vc);
    str = str.replace("<page number>", pn);
    if (tn.length > 1) {
        str = str.replace("<tab name>", tn);
    } else {
        str = str.replace(":<tab name>", "");
    }
    str.replace("<blank>", "");
    return str;
}

function checkVars(str) {
    return true;
}

function buildPageName() {
    var pageName = parseVars(sford.pageName);
    pageName = pageName.replace(/&(lt|gt);/g, function(s, p) {
        return (p == "lt") ? "<" : ">";
    });
    pageName = pageName.replace(/<\/?[^>]+(>|$)/g, "");
    return pageName;
}

function setOmnitureTabName(tabName) {
    sford.tabName = tabName;
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop11,prop12,prop14,prop15,prop16";
    s.pageName = buildPageName();
    s.eVar11 = s.pageName;
    s.prop11 = s.eVar11;
    generatePageLoad();
}

function setOmnitureSearchResults(pageNumber, nor, searchTerm, norpp) {
    sford.totalSearchResults = nor;
    sford.pageNumber = pageNumber;
    s.eVar22 = searchTerm;
    s.prop22 = searchTerm;
    s.eVar35 = "0:" + nor;
    s.prop21 = "0:" + nor;
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar14,eVar15,prop4,prop5,prop11,prop14,prop15,eVar22,eVar35,prop4,prop21,prop22,prop34";
    s.pageName = buildPageName();
    s.prop11 = s.pageName;
    s.eVar11 = s.pageName;
    s.prop34 = pageNumber;
    onPageLoad();
}

function setOmnitureSearchResult(resultNumber) {
    var num1 = parseInt(resultNumber) + 1;
    var num2 = sford.pageNumber * 1;
    var resultClicked = (num1 + ((num2 - 1) * 10));
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar14,evar15,eVar35,prop4,prop5,prop11,prop14,prop15,prop21,prop34";
    s.eVar35 = resultClicked + ":" + sford.totalSearchResults;
    s.prop21 = resultClicked + ":" + sford.totalSearchResults;
    s.prop34 = sford.pageNumber;
    s.prop11 = s.pageName;
    s.eVar11 = s.pageName;
    s.prop5 = 'site search result:natural';
    omnitureOnClick('o', "brand:site search:search index");
}

function omniturePromoExit(href) {
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar14,evar15,prop4,prop5,prop11,prop14,prop15";
    s.prop5 = "promo box exit:" + s.channel + "-" + href;
    omnitureOnClick('e', "promo box:site exit");
}

function omnitureViewPhoto(assetid) {
    if (typeof sford == "object") {
        if (typeof sford.tagViewPhoto == "string") {
            s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,evar15,evar16,prop4,prop5,prop11,prop12,prop14,prop15,prop16";
            s.prop5 = 'media viewer photo view';
            s.eVar11 = buildPageName();
            s.prop11 = s.eVar11;
            omnitureOnClick('o', parseVars(sford.tagViewPhoto));
        }
    }
}

function omnitureLinkEmailClick(tag, linkType) {
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar14,prop5,prop11,prop14,prop15";
    s.prop5 = 'email start';
    s.eVar11 = buildPageName();
    s.prop11 = buildPageName();
    omnitureOnClick(linkType, tag);
}

function omnitureLinkDownloadClick(tag, events, eVar28, eVar48, eVar49, prop5, prop18, isGlobal, np, my, vc) {
    var linkName = "";
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar14,eVar15,eVar28,eVar48,eVar49,prop4,prop5,prop11,prop14,prop15,prop18,prop48,prop49,events";
    s.linkTrackEvents = events;
    s.eVar11 = s.pageName;
    s.prop11 = s.pageName;
    s.eVar28 = eVar28;
    s.eVar48 = eVar48;
    s.prop48 = s.eVar48;
    s.eVar49 = eVar49;
    s.prop49 = s.eVar49;
    s.prop18 = prop18;
    s.prop5 = prop5;
    s.events = events;
    if (s.channel == "brochure") {
        if (typeof np == "string") {
            tag = parseNpVars(tag, np, my, vc, "", "");
            s.eVar12 = my;
            s.prop12 = my;
            s.eVar16 = np;
            s.prop16 = np;
            s.hier1 = parseNpVars(sford.hier1, np, my, vc, "", "");
            s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
        } else {
            if (typeof np == "string") {
                s.eVar16 = np;
                s.prop16 = np;
                s.eVar12 = my;
                s.prop12 = my;
                s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
            }
        }
    } else {
        if (!isGlobal && (typeof sford.tagDownload == "string") && (sford.tagDownload != "")) {
            linkName = sford.tagDownload.replace("<download>", tag);
        } else {
            linkName = tag;
        }
        if (typeof np == "string") {
            linkName = parseNpVars(linkName, np, my, vc, "", "");
            if (typeof np == "string") {
                s.eVar16 = np;
                s.prop16 = np;
                s.eVar12 = my;
                s.prop12 = my;
                s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
            }
        }
    }
    omnitureOnClick('d', linkName);
}

function setOmnitureFindDealer() {
    sford.pageNumber = 1;
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar14,eVar15,eVar48,eVar49,prop4,prop11,prop14,prop15,prop48,prop49";
    s.linkTrackEvents = "";
    s.pageName = buildPageName();
    s.eVar11 = s.pageName;
    s.prop11 = s.pageName;
    generatePageLoad();
}

function setOmnitureDealerPageNumber(pageNumber) {
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar14,eVar15,eVar48,eVar49,prop4,prop11,prop14,prop15,prop48,prop49";
    s.linkTrackEvents = "";
    s.events = "";
    sford.pageNumber = pageNumber;
    s.pageName = buildPageName();
    s.eVar11 = s.pageName;
    s.prop11 = s.pageName;
    s.eVar48 = "";
    s.prop48 = "";
    console.log("inside dealer results page");
    if ((typeof sford.dlwasSent == "boolean") && (!sford.dlwasSent)) {
        console.log("inside dealer events");
        s.linkTrackVars = s.linkTrackVars + ",events";
        s.events = "event1,event43";
        s.linkTrackEvents = s.events;
        s.eVar48 = "event:find dealer";
        s.prop48 = "event:find dealer";
        sford.dlwasSent = true;
    }
    console.log("before page load");
    generatePageLoad();
    console.log("after page load");
    s.events = "";
    s.eVar48 = "";
    s.prop48 = "";
}

function omnitureDealerExit() {
    s.linkTrackVars = "channel,hier1,eVar4,eVar6,eVar11,eVar14,eVar15,prop4,prop5,prop11,prop14,prop15";
    s.eVar6 = "referral:ford dealer website";
    s.prop5 = s.eVar6;
    s.eVar11 = s.pageName;
    s.prop11 = s.pageName;
    omnitureOnClick('e', 'referral:dealer exit');
}

function omnitureFSCClick() {
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop11,prop12,prop13,prop14,prop15,prop16";
    s.eVar11 = s.pageName;
    s.prop11 = s.pageName;
    omnitureOnClick('o', "brand:vehicle:specs:carousel click:<nameplate>");
}

function setOmnitureTHL() {
    if (typeof sford == "object") {
        if (typeof sford.tagHighlights == "string") {
            s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop11,prop12,prop14,prop15,prop16";
            s.eVar11 = s.pageName;
            s.prop11 = s.pageName;
            omnitureOnClick('o', sford.tagHighlights);
        }
    }
}

function onPageLoad() {
    if (!OM.onPageLoad) {
        var s_code = s.t();
        if (s_code) {
            document.write(s_code);
        }
    }
    OM.init();
}

function attachLoadEvent(myFunc) {
    var fp = window.onload;
    if (typeof window.onload != 'function') {
        window.onload = myFunc;
    } else {
        window.onload = function() {
            if (fp) {
                fp();
            }
            myFunc();
        };
    }
}

function omnitureSetVars(v, val) {
    var va = v.split(',');
    for (i = 0, len = va.length; attribute = va[i], i < len; i++) {
        try {
            eval("s." + attribute + "='" + parseVars(val) + "'");
        } catch (e) {}
    }
}

function generatePageLoad() {
    if (typeof jQuery != 'undefined') {
        OM.webdriver = OM.webdriver || {};
        OM.webdriver.s = jQuery.extend({}, s);
    }
    if (typeof __dOC == "boolean" && __dOC)
        return;
    if (typeof s == "object")
        s.t();
    s.events = "";
    s.linkTrackEvents = "";
}

function omnitureOnClick(clickType, linkName) {
    s.pageName = buildPageName();
    linkName = parseVars(linkName);
    if (typeof __dOC == "boolean" && __dOC)
        return;
    if ((typeof linkName == "string") && (linkName != "")) {
        s.tl(this.window, clickType, linkName);
    } else {
        s.tl(this.window, clickType);
    }
    if (typeof jQuery != 'undefined') {
        OM.webdriver = OM.webdriver || {};
        OM.webdriver.s = jQuery.extend({}, s);
    }
    s.events = "";
    s.linkTrackEvents = "";
}

function fasOmniturePromoExit(href) {
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar14,evar15,prop4,prop5,prop11,prop14,prop15";
    s.prop5 = "promo box exit:" + s.channel + "-" + href;
    s.eVar11 = s.pageName;
    s.prop11 = s.pageName;
    omnitureOnClick('e', "promo box:site exit");
}

function fasOmnitureOnClick(appcode, clickType, linkName) {
    omnitureOnClick(clickType, linkName);
}

function fasOmniturePageLoad(appcode) {
    generatePageLoad();
}

function fasOmnitureSetVars(appcode, v, val) {
    omnitureSetVars(v, val);
}

function fasOmnitureImageZoom() {
    var _pushV;
    _pushV = s.linkTrackVars;
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop5,prop11,prop12,prop14,prop15,prop16";
    s.prop5 = "photo view:zoom";
    omnitureOnClick('o', getOmniturePageContext() + ":image:zoom:<nameplate>");
    s.linkTrackVars = _pushV;
}

function fasOmnitureHPPromo(position) {
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop11,prop12,prop14,prop15,prop16";
    var opt = "";
    switch (position.toLowerCase()) {
        case "left":
            opt = ":left promo";
            break;
        case "center":
            opt = ":center promo";
            break;
        case "right":
            opt = ":right promo";
            break;
    }
    s.pageName = buildPageName() + ":hp promo" + opt;
    s.hier1 = "home" + opt;
    s.eVar11 = s.pageName;
    s.prop11 = s.pageName;
    generatePageLoad();
    s.pageName = sford.pageName;
    s.eVar11 = s.pageName;
    s.prop11 = s.pageName;
}

function fasOmnitureHPTab(itemNumber) {
    var _pushV;
    _pushV = s.linkTrackVars;
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop5,prop11,prop12,prop14,prop15,prop16";
    sford.itemNumber = itemNumber;
    s.prop5 = "home:thumbnail click";
    omnitureOnClick('o', getOmniturePageContext() + ":thumbnail:<item number>");
    s.prop5 = "";
    s.linkTrackVars = _pushV;
}

function fasOmnitureHPCTA() {
    var _pushV;
    _pushV = s.linkTrackVars;
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop5,prop11,prop12,prop14,prop15,prop16";
    s.prop5 = "home:cta click";
    omnitureOnClick('o', getOmniturePageContext() + ":cta");
    s.prop5 = "";
    s.linkTrackVars = _pushV;
}

function fasOmnitureHPCarousel() {
    var _pushV;
    _pushV = s.linkTrackVars;
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop5,prop11,prop12,prop14,prop15,prop16";
    s.prop5 = "home:carousel click";
    omnitureOnClick('o', getOmniturePageContext() + ":thumbnail:carousel");
    s.prop5 = "";
    s.linkTrackVars = _pushV;
}

function fasOmnitureVidMilestone(mediaName, message, t) {
    var _pushV;
    _pushV = s.linkTrackVars;
    if (typeof t == "undefined")
        t = 0;
    switch (message) {
        case "vidStart":
            s.events = "event56";
            s.eVar55 = "1:M:0-25";
            s.eVar56 = mediaName;
            s.eVar57 = mediaName + ":0%";
            s.prop55 = "" + ":" + mediaName;
            s.prop56 = mediaName;
            s.prop57 = s.eVar57;
            break;
        case "vid25":
            s.events = "event58,event61=" + t + ",event62";
            s.eVar55 = "1:M:0-25";
            s.eVar56 = mediaName;
            s.eVar57 = mediaName + ":25%";
            s.prop55 = "" + ":" + mediaName;
            s.prop56 = mediaName;
            s.prop57 = s.eVar57;
            break;
        case "vid50":
            s.events = "event59,event61=" + t + ",event62";
            s.eVar55 = "2:M:25-50";
            s.eVar56 = mediaName;
            s.eVar57 = mediaName + ":50%";
            s.prop55 = "" + ":" + mediaName;
            s.prop56 = mediaName;
            s.prop57 = s.eVar57;
            break;
        case "vid75":
            s.events = "event57,event61=" + t + ",event62";
            s.eVar55 = "3:M:50-75";
            s.eVar56 = mediaName;
            s.eVar57 = mediaName + ":75%";
            s.prop55 = "" + ":" + mediaName;
            s.prop56 = mediaName;
            s.prop57 = s.eVar57;
            break;
        case "vidEnd":
            s.events = "event60,event61=" + t + ",event62";
            s.eVar55 = "4:M:75-100";
            s.eVar56 = mediaName;
            s.eVar57 = mediaName + ":100%";
            s.prop55 = "" + ":" + mediaName;
            s.prop56 = mediaName;
            s.prop57 = s.eVar57;
            break;
    }
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop11,prop12,prop14,prop15,prop16";
    s.linkTrackVars = s.linkTrackVars + ",eVar55,eVar56,eVar57,prop55,prop56,prop57,events";
    s.linkTrackEvents = s.events;
    omnitureOnClick('o', "video");
    s.linkTrackVars = _pushV;
    s.linkTrackEvents = "";
}

function omnitureMDPFullScreen(assetId) {
    var _pushV;
    _pushV = s.linkTrackVars;
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop5,prop11,prop12,prop14,prop15,prop16";
    sford.assetId = assetId;
    s.prop5 = 'photo view:fullscreen';
    omnitureOnClick('o', getOmniturePageContext() + ":image:<asset id>:fullscreen:<nameplate>");
    sford.assetId = "";
    s.prop5 = "";
    s.linkTrackVars = _pushV;
}

function omnitureMDPDownload(assetId) {
    var _pushV;
    _pushV = s.linkTrackVars;
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop5,prop11,prop12,prop14,prop15,prop16";
    sford.assetId = assetId;
    s.prop5 = 'photo view:download';
    omnitureOnClick('o', getOmniturePageContext() + ":image:<asset id>:download:<nameplate>");
    sford.assetId = "";
    s.prop5 = "";
    s.linkTrackVars = _pushV;
}

function fasOmnitureWalkaround360(bodystyle, action, value) {
    var _pushV;
    _pushV = s.linkTrackVars;
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,eVar18,prop4,prop5,prop11,prop12,prop14,prop15,prop16";
    sford.action = action;
    sford.bodystyle = bodystyle;
    sford.value = value;
    s.hier1 = parseVars("vehicle:360:<vehicle category>:<nameplate>");
    s.eVar11 = parseVars("brand:360view:<bodystyle>");
    s.eVar18 = sford.bodystyle;
    s.prop5 = parseVars("360:<bodystyle>:<action>:<value>");
    s.prop11 = s.eVar11;
    omnitureOnClick('o', "brand:vehicle:360:<bodystyle>:<action>:<nameplate>");
    s.linkTrackVars = _pushV;
}

function fasOmniture360Rotate() {
    var _pushV;
    _pushV = s.linkTrackVars;
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop5,prop11,prop12,prop14,prop15,prop16";
    s.hier1 = parseVars("vehicle:360:<vehicle category>:<nameplate>");
    s.prop5 = parseVars("360:vehicle rotate");
    s.prop11 = s.eVar11;
    omnitureOnClick('o', getOmniturePageContext() + "360:rotate:<nameplate>");
    s.linkTrackVars = _pushV;
}

function fasOmnitureSet(o) {}

function ownOmniture(mod, action) {
    switch (mod) {
        case "P010":
            generatePageLoad();
            break;
        case "P020":
            switch (action) {
                case "load":
                    s.eVar2 = "logged in";
                    generatePageLoad();
                    break;
                case "add":
                    s.pageName = buildPageName() + ":add car";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    generatePageLoad();
                    break;
                case "edit":
                    s.pageName = buildPageName() + ":1:edit car";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    generatePageLoad();
                    break;
                case "editconfirm":
                    s.pageName = buildPageName() + ":2:edit car:confirm";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    generatePageLoad();
                    break;
                case "delete":
                    s.pageName = buildPageName() + ":1:delete";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    generatePageLoad();
                    break;
                case "deleteconfirm":
                    s.pageName = buildPageName() + ":2:delete:confirm";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    generatePageLoad();
                    break;
            }
            break;
        case "P110":
            switch (action) {
                case "info":
                    s.pageName = buildPageName() + ":1:info";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    s.eVar48 = "event:myford register-start";
                    s.prop48 = s.eVar48;
                    generatePageLoad();
                    break;
                case "thanks":
                    s.pageName = buildPageName() + "2:thank you";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    s.eVar2 = "logged in";
                    s.eVar3 = "registered";
                    s.eVar28 = "myford register";
                    s.eVar48 = "event:myford register";
                    s.prop18 = "myford register";
                    s.prop48 = s.eVar48;
                    if (typeof sford.ownpermemail == "boolean") {
                        if (sford.ownpermemail) {}
                    }
                    s.events = "event10,event14,event43";
                    s.linkTrackEvents = s.events;
                    generatePageLoad();
                    break;
            }
            break;
        case "P400":
            switch (action) {
                case "load":
                    s.pageName = buildPageName() + ":profile details";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    generatePageLoad();
                    break;
            }
            break;
        case "P410":
            switch (action) {
                case "email":
                    s.pageName = buildPageName() + ":1:edit email";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    generatePageLoad();
                    break;
                case "emailconfirm":
                    s.pageName = buildPageName() + ":2:edit email:confirm";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    generatePageLoad();
                    break;
                case "password":
                    s.pageName = buildPageName() + ":1:edit password";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    generatePageLoad();
                    break;
                case "passwordconfirm":
                    s.pageName = buildPageName() + ":2:edit password:confirm";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    generatePageLoad();
                    break;
            }
            break;
        case "P420":
            switch (action) {
                case "personal":
                    s.pageName = buildPageName() + ":personal:1:edit details";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    generatePageLoad();
                    break;
                case "personalconfirm":
                    s.pageName = buildPageName() + ":personal:2:edit details:confirm";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    generatePageLoad();
                    break;
            }
            break;
        case "P430":
            switch (action) {
                case "contact":
                    s.pageName = buildPageName() + ":contact:1:edit contact";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    generatePageLoad();
                    break;
                case "contactconfirm":
                    s.pageName = buildPageName() + ":contact:2:edit contact:confirm";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    generatePageLoad();
                    break;
            }
            break;
    }
}

function syncOmniture(mod, action) {
    switch (mod) {
        case "P44":
            switch (action) {
                case "initiated":
                    s.pageName = buildPageName() + ":findcar:initiated";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    break;
                case "completed":
                    s.pageName = buildPageName() + ":findcar:completed";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    break;
            }
            break;
        case "P48":
            switch (action) {
                case "vin":
                    s.pageName = buildPageName() + ":result:vin";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    break;
                case "anonymous":
                    s.pageName = buildPageName() + ":result:anonymous";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    break;
            }
            break;
        case "P11":
            switch (action) {
                case "helpfindvin":
                    s.pageName = buildPageName() + ":helpfindvin";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    break;
            }
            break;
        case "P18":
            switch (action) {
                case "vininvalid":
                    s.pageName = buildPageName() + ":error:vininvalid";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    break;
            }
            break;
        case "P19":
            switch (action) {
                case "vinnosystem":
                    s.pageName = buildPageName() + ":error:vinnosystem";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    break;
            }
            break;
    }
}

function syncOmnitureButtonClick(mod, buttonLabel) {
    switch (mod) {
        case "vin":
            var Pagename = buildPageName() + ":result:vin";
            switch (buttonLabel) {
                case "find":
                    s.linkTrackVars = "channel,hier1,eVar11,prop11";
                    s.pageName = Pagename;
                    s.eVar11 = Pagename;
                    s.prop11 = s.eVar11;
                    omnitureOnClick('o', buildPageName() + ":find");
                    break;
                case "comparenow":
                    s.linkTrackVars = "channel,hier1,eVar11,prop11";
                    s.pageName = Pagename;
                    s.eVar11 = Pagename;
                    s.prop11 = s.eVar11;
                    omnitureOnClick('o', buildPageName() + ":comparenow");
                    break;
                case "addtocompare":
                    s.linkTrackVars = "channel,hier1,eVar11,prop11";
                    s.pageName = Pagename;
                    s.eVar11 = Pagename;
                    s.prop11 = s.eVar11;
                    omnitureOnClick('o', buildPageName() + ":addtocompare");
                    break;
                case "print":
                    s.linkTrackVars = "channel,hier1,eVar11,prop11";
                    s.pageName = Pagename;
                    s.eVar11 = Pagename;
                    s.prop11 = s.eVar11;
                    omnitureOnClick('o', buildPageName() + ":print");
                    break;
            }
            break;
        case "anonymous":
            var Pagename = buildPageName() + ":result:anonymous";
            switch (buttonLabel) {
                case "find":
                    s.linkTrackVars = "channel,hier1,eVar11,prop11";
                    s.pageName = Pagename;
                    s.eVar11 = Pagename;
                    s.prop11 = s.eVar11;
                    omnitureOnClick('o', buildPageName() + ":find");
                    break;
                case "comparenow":
                    s.linkTrackVars = "channel,hier1,eVar11,prop11";
                    s.pageName = Pagename;
                    s.eVar11 = Pagename;
                    s.prop11 = s.eVar11;
                    omnitureOnClick('o', buildPageName() + ":comparenow");
                    break;
                case "addtocompare":
                    s.linkTrackVars = "channel,hier1,eVar11,prop11";
                    s.pageName = Pagename;
                    s.eVar11 = Pagename;
                    s.prop11 = s.eVar11;
                    omnitureOnClick('o', buildPageName() + ":addtocompare");
                    break;
                case "print":
                    s.linkTrackVars = "channel,hier1,eVar11,prop11";
                    s.pageName = Pagename;
                    s.eVar11 = Pagename;
                    s.prop11 = s.eVar11;
                    omnitureOnClick('o', buildPageName() + ":print");
                    break;
            }
            break;
    }
}
OM.OSB = OM.OSB || {};
var OSBNamePlate = '';
var OSBModelYear = '';
OM.OSB.np = function(nameplate) {
    OSBNamePlate = "ford " + nameplate;
};
OM.OSB.my = function(modelYear) {
    if (modelYear.length > 4) {
        modelYear = modelYear.substring(0, 4);
    }
    OSBModelYear = modelYear;
};
var OSBBookingID = '';
OM.OSB.bi = function(bookingID) {
    OSBBookingID = bookingID;
};
var OSBTotalPrice = '';
OM.OSB.tp = function(totalPrice) {
    OSBTotalPrice = totalPrice;
};
var OSBDealerCode = '';
OM.OSB.osbdc = function(dealerCode) {
    OSBDealerCode = dealerCode;
};
OM.OSB.pl = function(step, opts) {
    s.hier = sford.hier1;
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop5,prop11,prop12,prop14,prop15,prop16,eVar48,prop48,eVar49,prop49";
    switch (step) {
        case "home":
            s.pageName = buildPageName() + ":home";
            s.hier1 = s.hier + ":home";
            break;
        case "vi":
            s.pageName = buildPageName() + ":vehicle info";
            s.hier1 = "owners:ford owner:osb:new service";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar48 = "event:schedule service start";
            s.prop48 = s.eVar48;
            s.eVar49 = "osb";
            s.prop49 = s.eVar49;
            s.events = "event63,event43";
            s.linkTrackEvents = s.events;
            break;
        case "cs":
            s.pageName = buildPageName() + ":choose service";
            s.eVar11 = s.pageName;
            s.hier1 = "owners:ford owner:osb:new service";
            s.prop11 = s.eVar11;
            s.eVar12 = OSBModelYear;
            s.prop12 = s.eVar12;
            s.eVar16 = OSBNamePlate;
            s.prop16 = s.eVar16;
            s.linkTrackVars += ",eVar12,eVar16";
            break;
        case "fd":
            s.pageName = buildPageName() + ":find dealer";
            s.eVar11 = s.pageName;
            s.hier1 = "owners:ford owner:osb:new service";
            s.prop11 = s.eVar11;
            s.eVar12 = OSBModelYear;
            s.prop12 = s.eVar12;
            s.eVar16 = OSBNamePlate;
            s.prop16 = s.eVar16;
            break;
        case "dr":
            s.pageName = buildPageName() + ":dealer results";
            s.hier1 = "owners:ford owner:osb:new service";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar12 = OSBModelYear;
            s.prop12 = s.eVar12;
            s.eVar16 = OSBNamePlate;
            s.prop16 = s.eVar16;
            s.events = "event1,event43";
            s.linkTrackEvents = s.events;
            s.eVar48 = "event:find dealer";
            s.prop48 = s.eVar48;
            s.eVar49 = "osb";
            s.prop49 = s.eVar49;
            s.linkTrackVars += ",eVar48,eVar49";
            break;
        case "ads":
            s.pageName = buildPageName() + ":additional services";
            s.hier1 = "owners:ford owner:osb:new service";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar12 = OSBModelYear;
            s.prop12 = s.eVar12;
            s.eVar16 = OSBNamePlate;
            s.prop16 = s.eVar16;
            s.eVar1 = OSBDealerCode;
            break;
        case "cdt":
            s.pageName = buildPageName() + ":choose date time";
            s.hier1 = "owners:ford owner:osb:new service";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar12 = OSBModelYear;
            s.prop12 = s.eVar12;
            s.eVar16 = OSBNamePlate;
            s.prop16 = s.eVar16;
            s.eVar1 = OSBDealerCode;
            break;
        case "cd":
            s.pageName = buildPageName() + ":contact details";
            s.hier1 = "owners:ford owner:osb:new service";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar12 = OSBModelYear;
            s.prop12 = s.eVar12;
            s.eVar16 = OSBNamePlate;
            s.prop16 = s.eVar16;
            s.eVar1 = OSBDealerCode;
            break;
        case "bs":
            s.pageName = buildPageName() + ":booking summary";
            s.hier1 = "owners:ford owner:osb:new service";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar12 = OSBModelYear;
            s.prop12 = s.eVar12;
            s.eVar16 = OSBNamePlate;
            s.prop16 = s.eVar16;
            s.eVar1 = OSBDealerCode;
            break;
        case "cc":
            s.pageName = "owner:osb:view service:cancel confirmation";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.hier1 = "owners:ford owner:osb:cancel booking";
            s.eVar48 = "event:cancel service booking";
            s.eVar49 = "osb";
            s.prop48 = s.eVar48;
            s.prop49 = s.eVar49;
            s.events = "event43,event65";
            s.eVar12 = OSBModelYear;
            s.prop12 = s.eVar12;
            s.eVar16 = OSBNamePlate;
            s.prop16 = s.eVar16;
            s.eVar17 = "osb " + OSBBookingID;
            s.eVar25 = OSBTotalPrice;
            s.eVar1 = OSBDealerCode;
            break;
        case "bsp":
            s.pageName = buildPageName() + ":booking summary print";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar12 = OSBModelYear;
            s.prop12 = s.eVar12;
            s.eVar16 = OSBNamePlate;
            s.prop16 = s.eVar16;
            s.eVar1 = OSBDealerCode;
            break;
        case "bc":
            s.pageName = buildPageName() + ":booking confimation";
            s.hier1 = "owners:ford owner:osb:new service";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar12 = OSBModelYear;
            s.prop12 = s.eVar12;
            s.eVar16 = OSBNamePlate;
            s.prop16 = s.eVar16;
            s.eVar17 = "osb " + OSBBookingID;
            s.eVar25 = OSBTotalPrice;
            s.eVar28 = "service appointment scheduled";
            s.eVar48 = "event:schedule service complete";
            s.eVar49 = "osb";
            s.prop18 = "service appointment scheduled";
            s.prop48 = "event:schedule service complete";
            s.prop49 = "osb";
            s.events = "event10,event43,event64";
            s.eVar1 = OSBDealerCode;
            break;
        case "vbs":
            s.pageName = "owner:osb:view service:booking summary";
            s.hier1 = "owners:ford owner:osb:view existing booking";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar12 = OSBModelYear;
            s.prop12 = s.eVar12;
            s.eVar16 = OSBNamePlate;
            s.prop16 = s.eVar16;
            s.eVar17 = "osb " + OSBBookingID;
            s.eVar25 = OSBTotalPrice;
            s.eVar48 = "event:view existing service booking";
            s.eVar49 = "osb";
            s.prop18 = "service appointment scheduled";
            s.prop48 = s.eVar48;
            s.prop49 = s.eVar49;
            s.eVar1 = OSBDealerCode;
            break;
        default:
    }
    generatePageLoad();
    s.linkTrackEvents = "";
    s.eVar48 = "";
    s.prop48 = "";
    s.eVar49 = "";
    s.prop49 = "";
    s.events = "";
};
OM.EUSED = OM.EUSED || {};
var EUSED = EUSED || {};
OM.EUSED.pl = function(step) {
    if (typeof sford != "object") {
        return;
    }
    s.hier1 = sford.hier1;
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,prop4,prop5,prop11,prop12,prop14,prop15,prop16";
    switch (step) {
        case "vso":
            s.pageName = buildPageName() + ":overview";
            s.eVar11 = s.prop11 = s.pageName;
            break;
        case "vsr":
            s.linkTrackVars += ",eVar35,prop21,eVar37,prop37,eVar38,prop38";
            s.linkTrackVars += ",eVar48,prop48,list1,zip";
            s.eVar11 = s.prop11 = buildPageName() + ":results";
            s.pageName = s.eVar11 + ":pg " + EUSED.Tagging.currentPage;
            s.eVar35 = s.prop21 = "0:" + EUSED.Tagging.getTotalResults() + "";
            s.eVar37 = s.prop37 = EUSED.Tagging.getSearchRadius();
            s.list1 = EUSED.Tagging.getSelectedVehicleList();
            s.eVar38 = EUSED.Tagging.getVehicleList();
            s.eVar48 = s.prop48 = "event:search inventory used";
            s.zip = EUSED.Tagging.getLocation();
            if (EUSED.Tagging.currentPage == 1) {
                s.events = "event25, event43";
            }
            break;
        case "vsrr":
            s.linkTrackVars += ",eVar35,prop21,eVar37,prop37,eVar38,prop38";
            s.linkTrackVars += ",eVar48,prop48,eVar49,prop49,list1,zip";
            s.eVar11 = s.prop11 = buildPageName() + ":results:refine";
            s.pageName = s.eVar11 + ":pg " + EUSED.Tagging.currentPage;
            s.eVar35 = s.prop21 = "0:" + EUSED.Tagging.getTotalResults();
            s.eVar37 = s.prop37 = EUSED.Tagging.getSearchRadius();
            s.eVar38 = EUSED.Tagging.getVehicleList();
            s.list1 = EUSED.Tagging.getSelectedVehicleList();
            s.eVar48 = s.prop48 = "event:search inventory used:refine";
            s.eVar49 = s.prop49 = "used:search inventory refine:" + EUSED.Tagging.getLastCategory() + ":" + EUSED.Tagging.getLastValue();
            s.zip = EUSED.Tagging.getLocation();
            if (EUSED.Tagging.currentPage == 1) {
                s.events = "event43";
            }
            break;
        case "vss":
            s.linkTrackVars += ",eVar35,prop21,eVar37,prop37,eVar38,prop38";
            s.linkTrackVars += ",eVar48,prop48,eVar49,prop49,listvar1,zip";
            s.eVar11 = s.prop11 = buildPageName() + ":results:sort";
            s.pageName = s.eVar11 + ":pg " + EUSED.Tagging.currentPage;
            s.eVar35 = s.prop21 = "0:" + EUSED.Tagging.getTotalResults();
            s.eVar37 = s.prop37 = EUSED.Tagging.getSearchRadius();
            s.list1 = EUSED.Tagging.getSelectedVehicleList();
            s.eVar38 = EUSED.Tagging.getVehicleList();
            s.eVar48 = s.prop48 = "event:search inventory used:sort";
            s.eVar49 = s.prop49 = "used:search inventory sort:" + EUSED.Tagging.getLastCategory() + ":" + EUSED.Tagging.getLastValue();
            s.zip = EUSED.Tagging.getLocation();
            if (EUSED.Tagging.currentPage == 1) {
                s.events = "event43";
            }
            break;
        case "vszr":
            s.linkTrackVars += ",eVar35,prop21,eVar37,prop37,eVar38,prop38";
            s.linkTrackVars += ",listvar1,zip,list3";
            s.pageName = buildPageName() + ":zero results";
            s.eVar11 = s.prop11 = s.pageName;
            s.eVar35 = s.prop21 = "0:0";
            s.eVar37 = s.prop37 = EUSED.Tagging.getSearchRadius();
            s.eVar38 = EUSED.Tagging.getVehicleList();
            s.list1 = EUSED.Tagging.getSelectedVehicleList();
            s.list3 = "search results:zero results";
            s.zip = EUSED.Tagging.getLocation();
            s.events = "event22,event43";
            break;
        case "vsle":
            s.linkTrackVars += ",eVar35,prop21,eVar37,prop37,eVar38,prop38";
            s.linkTrackVars += ",list1,zip,list3";
            s.pageName = buildPageName() + ":location error";
            s.eVar11 = s.prop11 = s.pageName;
            s.eVar35 = s.prop21 = "0:0";
            s.eVar37 = s.prop37 = EUSED.Tagging.getSearchRadius();
            s.eVar38 = EUSED.Tagging.getVehicleList();
            s.list1 = EUSED.Tagging.getSelectedVehicleList();
            s.list3 = "search results:location error";
            s.zip = EUSED.Tagging.getLocation();
            s.events = "event22,event43";
            break;
        case "vsld":
            s.linkTrackVars += ",eVar35,prop21,eVar37,prop37,eVar38,prop38";
            s.linkTrackVars += ",list1,zip,list3";
            s.pageName = buildPageName() + ":location disambiguation";
            s.eVar11 = s.prop11 = s.pageName;
            s.eVar35 = s.prop21 = "0:0";
            s.eVar37 = s.prop37 = EUSED.Tagging.getSearchRadius();
            s.eVar38 = EUSED.Tagging.getVehicleList();
            s.list1 = EUSED.Tagging.getSelectedVehicleList();
            s.list3 = "search results:location disambiguation";
            s.zip = EUSED.Tagging.getLocation();
            s.events = "event22,event43";
            break;
        case "vsvv":
            s.hier1 += ":vehicle";
            s.linkTrackVars += ",eVar35,prop21,eVar37,prop37,eVar48,prop48";
            s.linkTrackVars += ",list1,zip,eVar1,eVar12,prop12,eVar16,prop16,eVar18,eVar25,products";
            s.eVar11 = s.prop11 = buildPageName() + ":vehicle view";
            s.pageName = buildPageName() + ":vehicle view:" + EUSED.Tagging.getNameplate();
            s.hier1 = sford.hier1 + ":vehicle";
            s.eVar35 = s.prop21 = EUSED.Tagging.currentItem + ":" + EUSED.Tagging.getTotalResults();
            s.eVar37 = s.prop37 = EUSED.Tagging.getSearchRadius();
            s.eVar38 = EUSED.Tagging.getNameplate();
            s.list1 = s.eVar38;
            s.eVar1 = EUSED.Tagging.getDealer();
            s.eVar12 = s.prop12 = EUSED.Tagging.getModelYear();
            s.eVar16 = s.prop16 = EUSED.Tagging.getNameplate();
            s.eVar18 = EUSED.Tagging.getSeries();
            s.eVar25 = EUSED.Tagging.getPrice();
            s.eVar48 = s.prop48 = "event:used:view used vehicle";
            s.products = EUSED.Tagging.getSingleProduct();
            s.zip = EUSED.Tagging.getLocation();
            s.events = "event43,prodView";
            break;
        case "vsso":
            s.hier1 += ":shortlist";
            s.linkTrackVars += ",list1,zip,eVar48,prop48";
            s.pageName = buildPageName() + ":shortlist:quick view";
            s.eVar11 = s.prop11 = s.pageName;
            s.eVar35 = "";
            s.eVar37 = s.prop37 = "";
            s.eVar16 = "";
            s.eVar18 = "";
            s.eVar25 = "";
            s.prop21 = "";
            s.eVar48 = s.prop48 = "event:used:view shortlist:quick view";
            s.eVar38 = EUSED.Tagging.getShortlistList();
            s.list1 = EUSED.Tagging.getShortlistList();
            s.zip = EUSED.Tagging.getLocation();
            s.eVar37 = s.prop37 = EUSED.Tagging.getSearchRadius();
            s.products = EUSED.Tagging.getShortlistProducts();
            s.events = "event43";
            break;
        case "vssd":
            s.hier1 += ":shortlist";
            s.linkTrackVars += ",list1,zip,eVar48,prop48";
            s.linkTrackVars += ",list1,zip,eVar1,eVar12,prop12,eVar16,prop16,eVar18,eVar25,products";
            s.pageName = buildPageName() + ":shortlist:full view";
            s.eVar37 = s.prop37 = EUSED.Tagging.getSearchRadius();
            s.eVar35 = "";
            s.eVar37 = s.prop37 = "";
            s.eVar16 = "";
            s.eVar18 = "";
            s.eVar25 = "";
            s.prop21 = "";
            s.eVar11 = s.prop11 = s.pageName;
            s.eVar48 = s.prop48 = "event:used:view shortlist:full view";
            s.eVar38 = EUSED.Tagging.getShortlistList();
            s.list1 = EUSED.Tagging.getShortlistList();
            s.zip = EUSED.Tagging.getLocation();
            s.products = EUSED.Tagging.getShortlistProducts();
            s.events = "event43,scView";
            break;
        case "vsco":
            s.hier1 += ":compare";
            s.linkTrackVars += ",list1,zip,eVar37,prop37,eVar48,prop48";
            s.pageName = buildPageName() + ":compare:quick view";
            s.eVar11 = s.prop11 = s.pageName;
            s.eVar37 = s.prop37 = EUSED.Tagging.getSearchRadius();
            s.eVar35 = "";
            s.eVar16 = "";
            s.eVar18 = "";
            s.eVar25 = "";
            s.prop21 = "";
            s.eVar48 = s.prop48 = "event:used:compare vehicles:quick view";
            s.eVar38 = EUSED.Tagging.getCompareList();
            s.list1 = EUSED.Tagging.getCompareList();
            s.zip = EUSED.Tagging.getLocation();
            s.products = EUSED.Tagging.getCompareProducts();
            s.events = "event43";
            break;
        case "vscd":
            s.hier1 += ":compare";
            s.linkTrackVars += ",list1,zip,eVar37,prop37,eVar48,prop48";
            s.linkTrackVars += ",list1,zip,eVar1,eVar12,prop12,eVar16,prop16,eVar18,eVar25,products";
            s.pageName = buildPageName() + ":compare:full view";
            s.eVar11 = s.prop11 = s.pageName;
            s.eVar37 = s.prop37 = EUSED.Tagging.getSearchRadius();
            s.eVar35 = "";
            s.eVar16 = "";
            s.eVar18 = "";
            s.eVar25 = "";
            s.prop21 = "";
            s.eVar48 = s.prop48 = "event:used:compare vehicles:full view";
            s.eVar38 = EUSED.Tagging.getCompareList();
            s.list1 = EUSED.Tagging.getCompareList();
            s.zip = EUSED.Tagging.getLocation();
            s.products = EUSED.Tagging.getCompareProducts();
            s.events = "event12,event43";
            break;
        default:
            console.error("Undefined page" + step);
            break;
    }
    s.linkTrackEvents = s.events;
    generatePageLoad();
    s.linkTrackEvents = "";
    s.list3 = "";
    s.eVar48 = s.prop48 = s.eVar49 = s.prop49 = s.events = "";
    console.log(step);
};
OM.EUSED.oc = function(step) {
    if (typeof sford != "object") {
        return;
    }
    var ln = "";
    s.hier1 = sford.hier1;
    switch (step) {
        case "vvie":
            contentLabel = "";
            if (arguments.length >= 2) {
                contentLabel = arguments[1];
            }
            s.hier1 = sford.hier1 + ":vehicle";
            ln = "used search inventory:view vehicle:expand content:" + contentLabel;
            s.eVar48 = s.prop48 = "event:used:expand content";
            s.events = "event43";
            s.linkTrackVars += ",eVar48,prop48";
            s.prop5 = "expand content";
            break;
        case "vsca":
            s.hier1 = sford.hier1 + ":compare";
            s.linkTrackVars += ",list1,eVar1,eVar12,eVar16,eVar18,eVar25,products";
            ln = "used search inventory:add to compare";
            s.prop5 = "add to compare";
            s.events = "event43";
            s.eVar12 = s.prop12 = EUSED.Tagging.getTargetModelYear();
            s.eVar16 = s.prop16 = EUSED.Tagging.getTargetNameplate();
            s.eVar18 = EUSED.Tagging.getTargetSeries();
            s.eVar25 = EUSED.Tagging.getTargetPrice();
            s.eVar35 = s.prop35 = EUSED.Tagging.lastSelectedItem + ":" + EUSED.Tagging.getTotalResults();
            s.list1 = s.eVar38 = s.eVar16;
            s.products = EUSED.Tagging.getSingleProduct();
            s.eVar48 = s.prop48 = "event:used:add to compare";
            break;
        case "vssa":
            s.linkTrackVars += ",list1,eVar1,eVar12,eVar16,eVar18,eVar25,products";
            s.hier1 = sford.hier1 + ":shortlist";
            ln = "used search inventory:add to shortlist";
            s.eVar48 = s.prop48 = "event:used:add to shortlist";
            s.eVar12 = s.prop12 = EUSED.Tagging.getTargetModelYear();
            s.eVar16 = s.prop16 = EUSED.Tagging.getTargetNameplate();
            s.eVar18 = EUSED.Tagging.getTargetSeries();
            s.eVar25 = EUSED.Tagging.getTargetPrice();
            s.eVar35 = s.prop35 = EUSED.Tagging.lastSelectedItem + ":" + EUSED.Tagging.getTotalResults();
            s.list1 = s.eVar38 = s.eVar16;
            s.events = "event43,scOpen,scAdd";
            s.products = EUSED.Tagging.getSingleProduct();
            s.prop5 = "add to shortlist";
            break;
        case "vssr":
            s.linkTrackVars += ",list1,eVar1,eVar12,eVar16,eVar18,eVar25,products";
            s.hier1 = sford.hier1 + ":shortlist";
            s.events = "event43";
            s.events += ",scRemove";
            ln = "used search inventory:remove from shortlist";
            s.eVar48 = s.prop48 = "event:used:remove from shortlist";
            s.eVar12 = s.prop12 = EUSED.Tagging.getTargetModelYear();
            s.eVar16 = s.prop16 = EUSED.Tagging.getTargetNameplate();
            s.eVar18 = EUSED.Tagging.getTargetSeries();
            s.eVar25 = EUSED.Tagging.getTargetPrice();
            s.list1 = s.eVar38 = s.eVar16;
            s.products = EUSED.Tagging.getSingleProduct();
            s.prop5 = "remove from shortlist";
            break;
        case "vscr":
            s.linkTrackVars += ",list1,eVar1,eVar12,eVar16,eVar18,eVar25,products";
            s.hier1 = sford.hier1 + ":compare";
            ln = "used search inventory:remove from compare";
            s.eVar48 = s.prop48 = "event:used:remove from compare";
            s.events = "event43";
            s.eVar12 = s.prop12 = EUSED.Tagging.getTargetModelYear();
            s.eVar16 = s.prop16 = EUSED.Tagging.getTargetNameplate();
            s.eVar18 = EUSED.Tagging.getTargetSeries();
            s.eVar25 = EUSED.Tagging.getTargetPrice();
            s.list1 = s.eVar38 = s.eVar16;
            s.products = EUSED.Tagging.getSingleProduct();
            s.prop5 = "remove from compare";
            break;
        case "vsde":
            s.hier1 = sford.hier1 + ":contact dealer";
            s.linkTrackVars += ",eVar48,prop48";
            s.linkTrackVars += ",products";
            ln = "used search inventory:email dealer";
            s.prop5 = "email dealer:initiate";
            s.eVar48 = s.prop48 = "event:used:contact dealer:email";
            s.eVar12 = s.prop12 = EUSED.Tagging.getTargetModelYear();
            s.eVar16 = s.prop16 = EUSED.Tagging.getTargetNameplate();
            s.eVar18 = EUSED.Tagging.getTargetSeries();
            s.eVar25 = EUSED.Tagging.getTargetPrice();
            s.list1 = s.eVar38 = s.eVar16;
            s.products = EUSED.Tagging.getSingleProduct();
            s.events = "event26,event43";
            break;
        case "vsdc":
            s.hier1 = sford.hier1 + ":contact dealer";
            s.linkTrackVars += ",eVar48,prop48";
            s.linkTrackVars += ",products";
            ln = "used search inventory:c2c dealer";
            s.prop5 = "c2c dealer:initiate";
            s.eVar48 = s.prop48 = "event:used:contact dealer:c2c";
            s.eVar12 = s.prop12 = EUSED.Tagging.getTargetModelYear();
            s.eVar16 = s.prop16 = EUSED.Tagging.getTargetNameplate();
            s.eVar18 = EUSED.Tagging.getTargetSeries();
            s.eVar25 = EUSED.Tagging.getTargetPrice();
            s.list1 = s.eVar38 = s.eVar16;
            s.products = EUSED.Tagging.getSingleProduct();
            s.events = "event26,event43";
            break;
        default:
            console.error("Undefined click" + step);
            break;
    }
    s.linkTrackEvents = s.events;
    if (ln != "") omnitureOnClick('o', ln);
    s.linkTrackEvents = "";
    s.eVar48 = s.prop48 = s.eVar49 = s.prop49 = s.events = "";
    console.log(step);
};
OM.SURVEY = OM.SURVEY || {};
var SURVEY = SURVEY || {};
OM.SURVEY.pl = function(step) {
    if (typeof sford != "object") {
        console.log("Survey omniture not fired");
        return;
    }
    s.hier1 = "survey:dealer contact survey";
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar12,eVar14,eVar15,eVar16,eVar48,evar49,prop4,prop5,prop11,prop12,prop14,prop15,prop16,prop33,prop39,prop48,prop49";
    s.eVar48 = "";
    switch (step) {
        case "expired":
            s.pageName = buildPageName() + ":dealer contact survey:0:expired";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.events = "";
            break;
        case "previouslyCompleted":
            s.pageName = buildPageName() + ":dealer contact survey:0:previously completed";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.events = "";
            break;
        case "dealerContact":
            s.pageName = buildPageName() + ":dealer contact survey:1";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar48 = "event:dealer contact survey start";
            s.events = "event43";
            break;
        case "confirmContact":
            s.pageName = buildPageName() + ":dealer contact survey:2:confirm:contact";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar48 = "event:dealer contact survey complete:contact";
            s.events = "event43";
            break;
        case "thankyouContactFinal":
            s.pageName = buildPageName() + ":dealer contact survey:3:complete";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar48 = "event:dealer contact survey complete:contact:full survey complete";
            s.events = "event43";
            break;
        case "noContact":
            s.pageName = buildPageName() + ":dealer contact survey:2:confirm:no contact";
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.eVar48 = "event:dealer contact survey complete:no contact";
            s.events = "event43";
            break;
        default:
            console.error("Undefined page" + step);
            break;
    }
    s.linkTrackEvents = s.events;
    s.prop48 = s.eVar48;
    s.prop33 = s.eVar49 = s.prop49 = "";
    s.prop39 = s.pageName;
    generatePageLoad();
};
OM.OSB.oc = function(step) {
    var ln = "";
    switch (step) {
        case "des":
            ln = "owner:osb:dealer search";
            s.pageName = "owner:osb:schedule service";
            s.prop5 = "find dealer";
            break;
        case "ded":
            ln = "owner:osb:view dealer details";
            s.eVar48 = "event:view dealer details", s.prop48 = s.eVar48;
            s.eVar49 = 'osb';
            s.prop49 = s.eVar49;
            s.prop5 = "view dealer details";
            s.eVar1 = OSBDealerCode;
            s.linkTrackVars += ",eVar1";
            s.hier1 = "owners:ford owner:osb:new service";
            s.events = "event43";
            s.linkTrackEvents = s.events;
            break;
        case "acd":
            ln = "owner:osb:amend contact details";
            s.hier1 = "owners:ford owner:osb:new service";
            s.prop5 = "amend booking details";
            s.eVar1 = OSBDealerCode;
            s.linkTrackVars += ",eVar1";
            break;
        case "ave":
            ln = "owner:osb:amend vehicle info";
            s.hier1 = "owners:ford owner:osb:new service";
            s.prop5 = "amend booking details";
            s.eVar1 = OSBDealerCode;
            s.linkTrackVars += ",eVar1";
            break;
        case "adt":
            ln = "owner:osb:amend date";
            s.hier1 = "owners:ford owner:osb:new service";
            s.prop5 = "amend booking details";
            s.eVar1 = OSBDealerCode;
            s.linkTrackVars += ",eVar1";
            break;
        case "as":
            ln = "owner:osb:amend service";
            s.hier1 = "owners:ford owner:osb:new service";
            s.prop5 = "amend booking details";
            s.eVar1 = OSBDealerCode;
            s.linkTrackVars += ",eVar1";
            break;
        case "aas":
            ln = "owner:osb:amend additional service";
            s.hier1 = "owners:ford owner:osb:new service";
            s.prop5 = "amend booking details";
            s.eVar1 = OSBDealerCode;
            s.linkTrackVars += ",eVar1";
            break;
        case "adf":
            ln = "owner:osb:amend dealer";
            s.hier1 = "owners:ford owner:osb:new service";
            s.prop5 = "amend booking details";
            s.eVar1 = OSBDealerCode;
            s.linkTrackVars += ",eVar1";
            break;
        case "ps":
            ln = "owner:osb:amend print summary";
            s.hier1 = "owners:ford owner:osb:new service";
            s.prop5 = "amend booking details";
            s.eVar1 = OSBDealerCode;
            s.linkTrackVars += ",eVar1";
            break;
        case "ccl":
            ln = "owner:osb:cancel booking";
            s.hier1 = "owners:ford owner:osb:cancel booking";
            s.prop5 = "cancel booking";
            s.eVar12 = OSBModelYear;
            s.prop12 = s.eVar12;
            s.eVar16 = OSBNamePlate;
            s.prop16 = s.eVar16;
            s.eVar17 = "osb " + OSBBookingID;
            s.eVar25 = OSBTotalPrice;
            s.eVar1 = OSBDealerCode;
            s.linkTrackVars += ",eVar1,eVar25,eVar17";
            break;
        case "pbs":
            ln = "owner:osb:print summary";
            s.hier1 = "owners:ford owner:osb:new service";
            s.prop5 = "print booking summary";
            s.eVar1 = OSBDealerCode;
            s.eVar12 = OSBModelYear;
            s.prop12 = s.eVar12;
            s.eVar16 = OSBNamePlate;
            s.prop16 = s.eVar16;
            s.linkTrackVars += ",eVar1,eVar12,eVar16";
            break;
        default:
    }
    if (ln != "")
        omnitureOnClick('o', ln);
    s.linkTrackEvents = "";
    s.eVar48 = "";
    s.prop48 = "";
    s.eVar49 = "";
    s.prop49 = "";
    s.events = "";
};

function goFurtherBarrelRecPL(articleName) {
    s.pageName = buildPageName() + ":" + articleName;
    s.prop11 = s.pageName;
    s.eVar11 = "brand:tech:gofurther:" + articleName;
    s.linkTrackVars = "channel,hier1,eVar4,eVar7,eVar8,eVar11,eVar13,eVar14,eVar15,eVar30,eVar33,eVar50,eVar52,prop4,prop5,prop7,prop8,prop10,prop11,prop13,prop14,prop15,prop17,prop19,prop30,prop31,prop33,prop35,prop37,prop39,prop50,prop52";
    s.events = "event17,event52,event53,event54";
    onPageLoad();
};

function goFurtherPhotofeed(articleName) {
    s.prop5 = "photofeed interact";
    s.eVar11 = "brand:tech:gofurther:" + articleName + ":photofeed";
    s.linkTrackVars = "channel,hier1,eVar4,eVar7,eVar8,eVar11,eVar13,eVar14,eVar15,eVar30,eVar33,eVar50,eVar52,prop4,prop5,prop7,prop8,prop10,prop11,prop13,prop14,prop15,prop17,prop19,prop30,prop31,prop33,prop35,prop37,prop39,prop50,prop52";
    s.events = "event17,event52,event53,event54";
    var ln = s.eVar11;
    if (ln != "")
        omnitureOnClick('o', ln);
};
OM.goFurther = OM.goFurther || {};
OM.goFurther.pl = function(step) {
    s.hier = sford.hier1;
    s.linkTrackVars = "channel,hier1,eVar4,eVar7,eVar8,eVar11,eVar13,eVar14,eVar15,eVar30,eVar33,eVar50,eVar52,prop4,prop7,prop8,prop10,prop11,prop13,prop14,prop15,prop17,prop19,prop30,prop31,prop33,prop35,prop37,prop39,prop50,prop52,eVar49";
    s.events = "event17,event52,event53,event54";
    switch (step) {
        case "home":
            s.pageName = buildPageName() + ":overview";
            s.prop11 = s.eVar11 = s.pageName;
            s.events = "event17,event52,event53,event54";
            break;
        default:
    }
    generatePageLoad();
};

function setTabName(tabName) {
    s.pageName = buildPageName() + ":sync applink:" + tabName;
    s.prop11 = s.eVar11 = s.pageName;
    s.linkTrackVars = "channel,hier1,eVar4,eVar7,eVar8,eVar11,eVar13,eVar14,eVar15,eVar30,eVar33,eVar50,eVar52,prop4,prop7,prop8,prop10,prop11,prop13,prop14,prop15,prop17,prop19,prop30,prop31,prop33,prop35,prop37,prop39,prop50,prop52,eVar49";
}
var categorySelected = "";

function appCatalogue(app, category) {
    categSelected = category
    s.prop5 = "sync:refine results";
    var ln = buildPageName() + ":sync applink:" + app + ":" + category;
    if (ln != "")
        omnitureOnClick('o', ln);
    s.linkTrackVars = "channel,hier1,eVar4,eVar7,eVar8,eVar11,eVar13,eVar14,eVar15,eVar30,eVar33,eVar50,eVar52,prop4,prop7,prop8,prop10,prop11,prop13,prop14,prop15,prop17,prop19,prop30,prop31,prop33,prop35,prop37,prop39,prop50,prop52,eVar49";
}

function appLinkOverview(pageDesc) {
    s.pageName = buildPageName() + ":sync applink:" + pageDesc;
    s.prop11 = s.eVar11 = s.pageName;
    generatePageLoad();
}
var appName = "";

function appDetailsOnload(appname) {
    appName = appname;
    s.pageName = buildPageName() + ":sync applink:catalogue:" + appname + ":" + "overview";
    s.evar11 = s.prop11 = s.pageName;
    s.linkTrackVars = "channel,hier1,eVar4,eVar7,eVar8,eVar11,eVar13,eVar14,eVar15,eVar30,eVar33,eVar50,eVar52,prop4,prop7,prop8,prop10,prop11,prop13,prop14,prop15,prop17,prop19,prop30,prop31,prop33,prop35,prop37,prop39,prop50,prop52,eVar49";
    generatePageLoad();
}

function appDetailsOnTabClick(tabid) {
    var tabname = "";
    if (tabid == 'linkapptabs0') {
        tabname = "overview";
    } else if (tabid == 'linkapptabs1') {
        tabname = "instructions";
    }
    s.pageName = buildPageName() + ":sync applink:catalogue:" + appName + ":" + tabname;
    s.evar11 = s.prop11 = s.pageName;
    s.linkTrackVars = "channel,hier1,eVar4,eVar7,eVar8,eVar11,eVar13,eVar14,eVar15,eVar30,eVar33,eVar50,eVar52,prop4,prop7,prop8,prop10,prop11,prop13,prop14,prop15,prop17,prop19,prop30,prop31,prop33,prop35,prop37,prop39,prop50,prop52,eVar49";
    generatePageLoad();
}

function appStore() {}
OM.MYFORD = OM.MYFORD || {};
var MYFORD = MYFORD || {};
OM.MYFORD.pl = function(page, action, obj) {
    if (typeof sford != "object") {
        console.log("MyFord omniture not fired");
        return;
    }
    var fired = false;
    s.linkTrackVars = "channel,hier1,eVar4,eVar11,eVar14,eVar15,eVar17,eVar28,eVar31,eVar48,eVar49,prop4,prop5,prop11,prop14,prop15,prop31,prop33,prop39,prop48,prop49,list3";
    var iseVar12Enabled = false;
    s.eVar48 = "";
    switch (page) {
        case "landingPage":
            s.hier1 = "owners:myford:home";
            s.pageName = "owner:myford:overview";
            MYFORD.previousPage = s.pageName;
            s.eVar11 = s.pageName;
            s.prop11 = s.eVar11;
            s.prop42 = "logged in:Owner";
            s.prop42 = "Registered:Owner";
            s.events = "";
            break;
        case "register":
            switch (action) {
                case "register1":
                    s.hier1 = "owners:myford:register";
                    s.pageName = "owner:myford:register:1:contact";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    s.eVar48 = "event: myford:register-start";
                    s.events = "event43";
                    MYFORD.previousPage = s.pageName;
                    s.list3 = "";
                    break;
                case "error":
                    s.hier1 = "owners:myford:register";
                    s.pageName = "owner:myford:register:1:contact:error";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    s.events = "event22";
                    s.list3 = "myford:register:" + obj.error;
                    break;
                case "vinHelp":
                    s.hier1 = "owners:myford:register";
                    s.pageName = MYFORD.previousPage;
                    s.eVar11 = MYFORD.previousPage;
                    s.prop11 = s.eVar11;
                    s.events = "";
                    s.linkTrackEvents = s.events;
                    s.prop48 = s.eVar48;
                    s.prop33 = s.eVar49 = s.prop49 = "";
                    s.prop39 = s.pageName;
                    s.prop5 = "myford:vin help";
                    s.list3 = "";
                    omnitureOnClick('o', "owner:myford:register:vin help");
                    fired = true;
                    break;
                case "confirm":
                    s.hier1 = "owners:myford:register";
                    s.pageName = "owner:myford:register:2:confirm";
                    s.eVar11 = s.pageName;
                    s.eVar17 = "myFord register" + obj.id.toString();
                    s.eVar28 = "registered:owner";
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "event: myford:register-complete";
                    s.prop11 = s.eVar11;
                    s.prop18 = "registered:owner";
                    if (obj.optIn) {
                        s.prop20 = "email opt-in full";
                        s.events = "event13," + s.events;
                    }
                    s.events = s.events + "event10,event14,event43";
                    s.list3 = "";
                    break;
                default:
                    break;
            }
            break;
        case "login":
            switch (action) {
                case "login":
                    s.hier1 = "owners:myford:login";
                    s.pageName = buildPageName() + ":login:1:start";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    s.eVar48 = "event: myford:login-start";
                    s.events = "event43";
                    s.eVar31 = "";
                    s.eVar42 = "logged in: owner";
                    s.eVar43 = "registered:owner";
                    MYFORD.previousPage = s.pageName;
                    break;
                case "loginError":
                    s.hier1 = "owners:myford:login";
                    s.pageName = buildPageName() + ":login:start:error";
                    s.eVar11 = s.pageName;
                    s.eVar31 = "";
                    s.eVar42 = "logged in: owner";
                    s.eVar43 = "registered:owner";
                    s.prop11 = s.eVar11;
                    s.events = "event22";
                    s.list3 = "myford:login:" + obj.error;
                    break;
                case "loginSuccess":
                    s.hier1 = "owners:myford:login";
                    s.pageName = buildPageName() + ":login:2:success";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.eVar48 = "event: myford:login-complete";
                    s.prop11 = s.eVar11;
                    s.events = "event43,event47";
                    break;
                case "forgotPass":
                    s.hier1 = "owners:myford:login:password reset";
                    s.pageName = buildPageName() + ":login:forgot password:1:request reset:start";
                    s.eVar11 = s.pageName;
                    s.eVar17 = "myFord register";
                    s.eVar31 = "";
                    s.eVar48 = "event: myford:request password reset-start";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "";
                    MYFORD.previousPage = s.pageName;
                    break;
                case "forgotPassError":
                    s.hier1 = "owners:myford:login:password reset";
                    s.pageName = buildPageName() + ":login:forgot password:1a:request reset:error";
                    s.eVar11 = s.pageName;
                    s.eVar31 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop48 = s.eVar48 = "";
                    s.events = "event22";
                    s.list3 = "myford:password request reset:" + obj.error;
                    break;
                case "forgotPassComplete":
                    s.hier1 = "owners:myford:login:password reset";
                    s.pageName = buildPageName() + ":login:forgot password:2:request reset:complete";
                    s.eVar11 = s.pageName;
                    s.eVar31 = "";
                    s.eVar48 = "event: myford:request password reset-complete";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "";
                    break;
                case "resetPassStart":
                    s.hier1 = "owners:myford:login:password reset";
                    s.pageName = buildPageName() + ":login:forgot password:1:reset password:start";
                    s.eVar11 = s.pageName;
                    s.eVar31 = "";
                    s.eVar48 = "event: myford:reset password-start";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "";
                    MYFORD.previousPage = s.pageName;
                    break;
                case "resetPassError":
                    s.hier1 = "owners:myford:login:password reset";
                    s.pageName = buildPageName() + ":login:forgot password:1a:reset password:error";
                    s.eVar11 = s.pageName;
                    s.eVar31 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop48 = s.eVar48 = "";
                    s.events = "event22";
                    s.list3 = "myford:reset password:" + obj.error;
                    break;
                case "resetPassComplete":
                    s.hier1 = "owners:myford:login:password reset";
                    s.pageName = buildPageName() + ":login:forgot password:1:reset password:complete";
                    s.eVar11 = s.pageName;
                    s.eVar31 = "";
                    s.eVar48 = "event: myford:reset password-complete";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "";
                    break;
                case "logoutClick":
                    s.hier1 = "owners:myford:logout";
                    s.pageName = MYFORD.previousPage;
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "";
                    s.linkTrackEvents = s.events;
                    s.prop48 = s.eVar48 = "";
                    s.prop33 = s.eVar49 = s.prop49 = "";
                    s.prop39 = s.pageName;
                    s.prop5 = "myford:logout";
                    omnitureOnClick('o', "owner:myford:logout");
                    fired = true;
                    break;
                case "logout":
                    s.hier1 = "owners:myford:logout";
                    s.pageName = buildPageName() + ":logout:success";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "event: myford:logout-complete";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "event43";
                    break;
                default:
                    break;
            }
            break;
        case "profile":
            switch (action) {
                case "profile":
                    s.hier1 = "owners:myford:profile:overview";
                    s.pageName = "owner:myford:profile:profile details";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    s.eVar48 = "";
                    s.events = "";
                    s.eVar31 = obj.id.toString();
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop42 = s.eVar43 = "registered:owner";
                    MYFORD.previousPage = s.pageName;
                    break;
                case "editEmail":
                    s.hier1 = "owners:myford:profile:edit profile:email";
                    s.pageName = "owner:myford:profile:1:edit email";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop42 = s.eVar43 = "registered:owner";
                    s.prop11 = s.eVar11;
                    s.events = "";
                    break;
                case "editEmailError":
                    s.hier1 = "owners:myford:profile:edit profile:email";
                    s.pageName = "owner:myford:profile:1:edit email:error";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.list3 = "myford:edit profile:email:" + obj.error;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop11 = s.eVar11;
                    s.events = "event22";
                    break;
                case "editEmailConfirm":
                    s.hier1 = "owners:myford:profile:edit profile:email";
                    s.pageName = "owner:myford:profile:2:edit email:confirm";
                    s.eVar11 = s.pageName;
                    s.eVar17 = "myFord register" + obj.id.toString();
                    s.eVar31 = obj.id.toString();
                    s.prop48 = s.eVar48 = "owner: profile edit";
                    s.prop49 = s.eVar49 = "email";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop18 = "myford:edit profile:get updates";
                    s.events = "event43";
                    break;
                case "editPassword":
                    s.hier1 = "owners:myford:profile:edit profile:password";
                    s.pageName = "owner:myford:profile:1:edit password";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop48 = s.eVar48 = "";
                    s.events = "";
                    MYFORD.previousPage = s.pageName;
                    break;
                case "editPasswordError":
                    s.hier1 = "owners:myford:profile:edit profile:password";
                    s.pageName = "owner:myford:profile:1:edit password:error";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.list3 = "myford:edit profile:password:" + obj.error;
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "event22";
                    break;
                case "passwordHelp":
                    s.hier1 = "owners:myford:profile:edit profile:password";
                    s.pageName = MYFORD.previousPage;
                    s.eVar11 = s.pageName;
                    s.eVar31 = MYFORD.cusId;
                    s.eVar48 = "";
                    s.prop5 = "myford:password help";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "";
                    s.linkTrackEvents = s.events;
                    s.prop48 = s.eVar48;
                    s.prop33 = s.eVar49 = s.prop49 = "";
                    s.prop39 = s.pageName;
                    s.list3 = "";
                    omnitureOnClick('o', "owner:myford:profile:password help ");
                    fired = true;
                    break;
                case "editPasswordConfirm":
                    s.hier1 = "owners:myford:profile:edit profile:password";
                    s.pageName = "owner:myford:profile:2:edit password:confirm";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.prop48 = s.eVar48 = "owner: profile edit";
                    s.prop49 = s.eVar49 = "password";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "event43";
                    break;
                case "editPersonalDetail":
                    s.hier1 = "owners:myford:profile:edit profile:personal details";
                    s.pageName = "owner:myford:proile:1:edit personal details";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop48 = s.eVar48 = "";
                    s.events = "";
                    MYFORD.previousPage = s.pageName;
                    break;
                case "editPersonalDetailError":
                    s.hier1 = "owners:myford:profile:edit profile:personal details";
                    s.pageName = "owner:myford:proile:1:edit personal details:error";
                    s.eVar11 = s.pageName;
                    s.eVar31 = MYFORD.cusId;
                    s.eVar48 = "";
                    s.list3 = "myford:edit profile:personal details:" + obj.error;
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "event22";
                    break;
                case "editPersonalDetailConfirm":
                    s.hier1 = "owners:myford:profile:edit profile:personal details";
                    s.pageName = "owner:myford:proile:2:edit personal details:confirm";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "event43";
                    s.linkTrackEvents = s.events;
                    s.prop48 = s.eVar48 = "owner: profile edit";
                    s.prop49 = s.eVar49 = "personal details";
                    break;
                case "editContactDetail":
                    s.hier1 = "owners:myford:profile:edit profile:contact details";
                    s.pageName = "owner:myford:profile:contact:1:edit contact detaills";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "";
                    MYFORD.previousPage = s.pageName;
                    break;
                case "editContactDetailError":
                    s.hier1 = "owners:myford:profile:edit profile:contact details";
                    s.pageName = "owner:myford:profile:contact:1:edit contact detaills:error";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.list3 = "myford:edit profile:contact details:" + obj.error;
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "event22";
                    break;
                case "editContactDetailAddress":
                    s.hier1 = "owners:myford:profile:edit profile:contact details";
                    s.pageName = "owner:myford:profile:contact:1a:edit contact details:select address";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "";
                    MYFORD.previousPage = s.pageName;
                    break;
                case "editContactDetailAddressError":
                    s.hier1 = "owners:myford:profile:edit profile:contact details";
                    s.pageName = "owner:myford:profile:contact:1a:edit contact details:select address:error";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.list3 = "myford:edit profile:contact details:" + obj.error;
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "event22";
                    break;
                case "editContactDetailConfirm":
                    s.hier1 = "owners:myford:profile:edit profile:contact details";
                    s.pageName = "owner:myford:profile:contact:2:edit contact details:confirm";
                    s.eVar11 = s.pageName;
                    s.eVar17 = "myFord register" + obj.id.toString();
                    s.eVar31 = obj.id.toString();
                    s.prop48 = s.eVar48 = "owner: profile edit";
                    s.prop49 = s.eVar49 = "contact info";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop18 = "myford:edit profile:change contact preferences";
                    s.events = "event43";
                    break;
                default:
                    break;
            }
            break;
        case "vehicle":
            switch (action) {
                case "overview":
                    s.hier1 = "owners:myford:vehicle:owned vehicles";
                    s.pageName = "owner:myford:vehicles:owned vehicles:overview";
                    s.eVar11 = s.pageName;
                    s.prop11 = s.eVar11;
                    s.eVar48 = "";
                    s.events = "";
                    s.eVar31 = obj.id.toString();
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop42 = s.eVar43 = "registered:owner";
                    MYFORD.previousPage = s.pageName;
                    break;
                case "ownedVehicle":
                    s.hier1 = "owners:myford:vehicle:owned vehicles";
                    s.pageName = "owner:myford:vehicles:owned vehicles:" + obj.label;
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop42 = s.eVar43 = "registered:owner";
                    s.prop11 = s.eVar11;
                    s.events = "";
                    MYFORD.previousPage = s.pageName;
                    break;
                case "ownedVehicleEditName":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:owned vehicles";
                    s.pageName = "owner:myford:vehicles:owned vehicles:edit vehicle name:1:start";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop11 = s.eVar11;
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.events = "";
                    break;
                case "ownedVehicleEditNameConfirm":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:owned vehicles";
                    s.pageName = "owner:myford:vehicles:owned vehicles:edit vehicle name:2:confirm";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.prop48 = s.eVar48 = "event:myford:edit vehicle";
                    s.prop49 = s.eVar49 = "myford:owned vehicles";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.events = "event43";
                    break;
                case "ownedVehicleDeleteVehicle":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:owned vehicles";
                    s.pageName = "owner:myford:vehicles:owned vehicles:delete vehicle:1:start";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop48 = s.eVar48 = "";
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.events = "";
                    break;
                case "ownedVehicleDeleteVehicleConfirm":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:owned vehicles";
                    s.pageName = "owner:myford:vehicles:owned vehicles:delete vehicle:2:confirm";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop48 = s.eVar48 = "event:myford:delete vehicle";
                    s.prop49 = s.eVar49 = "myford:owned vehicles";
                    s.events = "event43";
                    break;
                case "ownedVehicleAddVehicleClick":
                    s.hier1 = "owners:myford:vehicle:owned vehicles";
                    s.pageName = MYFORD.previousPage;
                    s.eVar11 = s.pageName;
                    s.eVar31 = MYFORD.cusId;
                    s.eVar48 = "";
                    s.prop5 = "myford:add vehicle";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "";
                    s.linkTrackEvents = s.events;
                    s.prop33 = "";
                    s.prop39 = s.pageName;
                    omnitureOnClick('o', "owner:myford:vehicles:owned vehicles:add vehicle");
                    fired = true;
                    break;
                case "ownedVehicleAddVehicleConfirm":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:owned vehicles";
                    s.pageName = "owner:myford:vehicles:owned vehicles:add vehicle:confirm";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop48 = s.eVar48 = "event:myford:add vehicle";
                    s.prop49 = s.eVar49 = "myford:owned vehicles";
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.events = "event43";
                    break;
                case "savedVehicleOverview":
                    s.hier1 = "owners:myford:vehicle:saved vehicles";
                    s.pageName = "owner:myford:vehicles:saved vehicles:overview";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop48 = s.eVar48 = "";
                    s.events = "";
                    MYFORD.previousPage = s.pageName;
                    break;
                case "savedVehiclePage":
                    s.hier1 = "owners:myford:vehicle:saved vehicles";
                    s.pageName = "owner:myford:vehicles:saved vehicles:" + obj.label;
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "";
                    MYFORD.previousPage = s.pageName;
                    break;
                case "savedVehicleClick":
                    s.hier1 = "owners:myford:vehicle:saved vehicles";
                    s.pageName = MYFORD.previousPage;
                    s.eVar11 = s.pageName;
                    s.eVar31 = MYFORD.cusId;
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "";
                    s.linkTrackEvents = s.events;
                    s.prop48 = s.eVar48 = "";
                    s.prop49 = s.eVar49 = "";
                    s.prop33 = "";
                    s.prop5 = "myford:add vehicle";
                    omnitureOnClick('o', "owner:myford:vehicles:saved vehicles:add vehicle ");
                    fired = true;
                    break;
                case "savedVehicleComplete":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:saved vehicles";
                    s.pageName = "owner:myford:vehicles:saved vehicles:vehicle saved";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop48 = s.eVar48 = "event:myford:add vehicle";
                    s.prop49 = s.eVar49 = "myford:saved vehicles";
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.eVar18 = obj.veh.series;
                    s.eVar19 = obj.veh.colourCode;
                    s.eVar20 = obj.veh.bodyStyle;
                    s.eVar24 = obj.veh.engine;
                    s.eVar25 = obj.veh.price;
                    s.events = "event43";
                    break;
                case "savedVehicleEditName":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:saved vehicles";
                    s.pageName = "owner:myford:vehicles:saved vehicles:edit vehicle name:1:start";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.events = "";
                    break;
                case "savedVehicleEditNameConfirm":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:saved vehicles";
                    s.pageName = "owner:myford:vehicles:saved vehicles:edit vehicle name:2:confirm";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop48 = s.eVar48 = "event:myford:edit vehicle";
                    s.prop49 = s.eVar49 = "myford:saved vehicles";
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.events = "event43";
                    break;
                case "savedVehicleDeleteVeh":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:saved vehicles";
                    s.pageName = "owner:myford:vehicles:saved vehicles:delete vehicle:1:start";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.events = "";
                    break;
                case "savedVehicleDeleteVehConfirm":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:saved vehicles";
                    s.pageName = "owner:myford:vehicles:saved vehicles:delete vehicle:2:confirm";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop48 = s.eVar48 = "event:myford:delete vehicle";
                    s.prop49 = s.eVar49 = "myford:saved vehicles";
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.events = "event43";
                    break;
                case "orderedVehicleOverview":
                    s.hier1 = "owners:myford:vehicle:ordered vehicles";
                    s.pageName = "owner:myford:vehicles:ordered vehicles:overview";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "";
                    MYFORD.previousPage = s.pageName;
                    break;
                case "orderedVehicleView":
                    s.hier1 = "owners:myford:vehicle:ordered vehicles";
                    s.pageName = "owner:myford:vehicles:ordered vehicles:order:" + obj.label;
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.events = "";
                    MYFORD.previousPage = s.pageName;
                    break;
                case "orderedVehicleClick":
                    s.hier1 = "owners:myford:vehicle:ordered vehicles";
                    s.pageName = MYFORD.previousPage;
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop5 = "myford:add order";
                    s.events = "";
                    s.linkTrackEvents = s.events;
                    s.prop33 = "";
                    s.prop39 = s.pageName;
                    omnitureOnClick('o', "owner:myford:vehicles:ordered vehicles:add order");
                    fired = true;
                    break;
                case "orderedVehicleAddError":
                    s.hier1 = "owners:myford:vehicle:ordered vehicles";
                    s.pageName = "owner:myford:vehicles:ordered vehicles:add order:error";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.list3 = "myford:add order:" + obj.error;
                    s.events = "event22";
                    break;
                case "orderedVehicleAddConfirm":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:ordered vehicles";
                    s.pageName = "owner:myford:vehicles:ordered vehicles:add order:confirm";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop48 = s.eVar48 = "event:myford:add vehicle";
                    s.prop49 = s.eVar49 = "myford:ordered vehicles";
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.events = "event43";
                    break;
                case "orderedVehicleEditVehicleName":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:ordered vehicles";
                    s.pageName = "owner:myford:vehicles:ordered vehicles:edit vehicle name:1:start";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.events = "";
                    break;
                case "orderedVehicleEditVehicleConfirm":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:ordered vehicles";
                    s.pageName = "owner:myford:vehicles:ordered vehicles:edit vehicle name:2:confirm";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop48 = s.eVar48 = "event:myford:edit vehicle";
                    s.prop49 = s.eVar49 = "myford:ordered vehicles";
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.events = "event43";
                    break;
                case "orderedVehicleDeleteVehicleName":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:ordered vehicles";
                    s.pageName = "owner:myford:vehicles:ordered vehicles:delete vehicle:1:start";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.eVar1 = obj.dealerId;
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.events = "";
                    break;
                case "orderedVehicleDeleteVehicleConfirm":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:ordered vehicles";
                    s.pageName = "owner:myford:vehicles:ordered vehicles:delete vehicle:2:confirm";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop48 = s.eVar48 = "event:myford:delete vehicle";
                    s.prop49 = s.eVar49 = "myford:ordered vehicles";
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.events = "event43";
                    s.eVar1 = obj.dealerId;
                    break;
                case "orderedVehicleCopyVehicle":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:ordered vehicles";
                    s.pageName = "owner:myford:vehicles:ordered vehicles:copy to owned vehicles:1:start";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.events = "";
                    s.eVar1 = obj.dealerId;
                    break;
                case "orderedVehicleCopyVehicleConfirm":
                    s.linkTrackVars = s.linkTrackVars + ",eVar12,eVar16,prop12,prop16";
                    iseVar12Enabled = true;
                    s.hier1 = "owners:myford:vehicle:ordered vehicles";
                    s.pageName = "owner:myford:vehicles:ordered vehicles:copy to owned vehicles:2:confirm";
                    s.eVar11 = s.pageName;
                    s.eVar31 = obj.id.toString();
                    s.eVar48 = "";
                    s.prop11 = s.eVar11;
                    s.prop42 = s.eVar42 = "logged in: owner";
                    s.prop43 = s.eVar43 = "registered:owner";
                    s.prop48 = s.eVar48 = "event:myford:copy vehicle to owned";
                    s.prop49 = s.eVar49 = "myford:ordered vehicles";
                    if (obj.veh.nameplate) {
                        s.prop16 = s.eVar16 = obj.veh.nameplate;
                    }
                    if (obj.veh.year) {
                        s.prop12 = s.eVar12 = obj.veh.year;
                    }
                    s.events = "event43";
                    s.eVar1 = obj.dealerId;
                    break;
                default:
                    break;
            }
            break;
        default:
            console.error("Undefined page" + step);
            break;
    }
    if (!fired) {
        if (!iseVar12Enabled) {
            delete s.eVar12;
            delete s.prop12;
            delete s.eVar16;
            delete s.prop16;
        }
        delete s.prop5;
        s.linkTrackEvents = s.events;
        s.prop48 = s.eVar48;
        s.prop33 = "";
        s.prop39 = s.pageName;
        generatePageLoad();
    }
};
overlayer = (function() {
    var popOver = {};
    var $overlay, $overlayerBlock, $content, $close;
    popOver.center = function() {
        var top, left;
        top = Math.max($(window).height() - $overlayBlock.outerHeight(), 0) / 2;
        left = Math.max($(window).width() - $overlayBlock.outerWidth(), 0) / 2;
        if (!navigator.userAgent.match(/(iPod|iPhone|iPad)/)) {
            $overlayBlock.css({
                top: top + $(window).scrollTop(),
                left: left + $(window).scrollLeft()
            });
        } else {
            if ($("#overlayBlock").find("input#essexFordCustomerName").is(":focus")) {
                $overlayBlock.css({
                    top: top + ($(window).scrollTop() - 188),
                    left: left + $(window).scrollLeft()
                });
                $("div#overlay").css({
                    height: $("body").height(),
                    position: absolute,
                    top: 0
                });
            } else {
                $overlayBlock.css({
                    top: top + $(window).scrollTop(),
                    left: left + $(window).scrollLeft()
                });
            }
        }
    };
    popOver.open = function(options) {
        $content.empty().append(options.content);
        if (options.mediatype == "xZoom") {
            $overlayBlock.css({
                background: options.background || '#fff',
                height: options.mediatype.height || 'auto',
                width: options.mediatype.width || 'auto',
                'overflow-y': 'hidden'
            });
            $('#content > object').attr({
                'height': options.mediatype.height,
                'width': options.mediatype.width
            });
            var objH = $('#overlayBlock #content').find('object').height();
            var objW = $('#overlayBlock #content').find('object').width();
            var originalDim = {
                'h': objH,
                'w': objW
            };
            localStorage.setItem('originalDim', JSON.stringify(originalDim));
            overlayer.resizeXzoom();
        } else {
            $overlayBlock.css({
                background: options.background || '#fff',
                height: options.height || 'auto',
                width: options.width || 'auto',
                'overflow-y': 'hidden'
            });
        }
        if ($('#content img').length) {
            $('#content img').load(function() {
                overlayer.center();
            });
        }
        if (options.mediatype == "youtube") {
            $close.css({
                top: '-18px',
                right: '-18px'
            });
        }
        if (typeof(options.callbackAfter) == "function") {
            options.callbackAfter();
        }
        popOver.center();
        $(window).bind('resize.overlayer', popOver.resizeXzoom);
        $(window).bind('resize.overlayer', popOver.center);
        $(window).scroll('resize.overlayer', popOver.center);
        $overlayBlock.animate({
            'opacity': 0
        }, 'fast', function() {
            popOver.center();
            $(this).fadeIn().fadeTo('fast', 1);
            $overlay.fadeTo('fast', 0.7);
            $overlay.show();
        });
    };
    popOver.resizeXzoom = function() {
        var findObj = $('#overlayBlock #content').find('object');
        if (findObj.length) {
            var findObjW = findObj.attr('width');
            var findObjH = findObj.attr('height');
            findObj.attr('data-default-height', findObjH);
            findObj.attr('data-default-width', findObjW);
            var getOriginalDim = JSON.parse(localStorage.getItem('originalDim'));
            var origW = getOriginalDim.w;
            var winW = $(window).width();
            var winH = $(window).height();
            if (winW < findObjW) {
                findObj.attr('width', winW);
                findObj.attr('height', winH);
            } else if (winW > findObjW && winW < getOriginalDim.w) {
                findObj.attr('width', winW);
                findObj.attr('height', winH);
            } else if (winH < getOriginalDim.h) {
                findObj.attr('width', getOriginalDim.w);
                findObj.attr('height', winH);
            } else {
                findObj.attr('width', getOriginalDim.w);
                findObj.attr('height', getOriginalDim.h);
            }
        }
    };
    popOver.close = function() {
        localStorage.removeItem('originalDim');
        $overlayBlock.stop(true, true).animate({
            opacity: 0
        }, 450, function() {
            $(this).css('display', 'none');
        });
        $overlay.stop(true, true).animate({
            opacity: 0
        }, 450, function() {
            $(this).css('display', 'none');
            $('#overlayBlock .closeBtn').removeAttr('style');
            $content.empty();
        });
        $(window).unbind('resize.overlayer');
        if (typeof EP2.isOverlayOpened !== 'undefined') {
            EP2.isOverlayOpened = false;
        }
    };
    if (!$('#overlay', '#overlayBlock').length) {
        $overlay = $('<div id="overlay"></div>');
        $overlayBlock = $('<div id="overlayBlock"></div>');
        $content = $('<div id="content"></div>');
        $close = $('<a class="icon closeBtn" href="#">close</a>');
        popOver.center();
    }
    $overlayBlock.hide();
    $overlay.hide();
    $overlayBlock.append($content, $close);
    $(document).ready(function() {
        $('body').append($overlay, $overlayBlock);
    });
    $close.click(function(e) {
        e.preventDefault();
        popOver.close();
    });
    $overlay.click(function() {
        popOver.close();
    });
    $(document).keyup(function(e) {
        if (e.keyCode == 27) {
            popOver.close();
        }
    });
    return popOver;
}());

function selectorSupported(selector) {
    var support, link, sheet, doc = document,
        root = doc.documentElement,
        head = root.getElementsByTagName('head')[0],
        impl = doc.implementation || {
            hasFeature: function() {
                return false;
            }
        }, link = doc.createElement("style");
    link.type = 'text/css';
    (head || root).insertBefore(link, (head || root).firstChild);
    sheet = link.sheet || link.styleSheet;
    if (!(sheet && selector))
        return false;
    support = impl.hasFeature('CSS2', '') ? function(selector) {
        try {
            sheet.insertRule(selector + '{ }', 0);
            sheet.deleteRule(sheet.cssRules.length - 1);
        } catch (e) {
            return false;
        }
        return true;
    } : function(selector) {
        sheet.cssText = selector + ' { }';
        return sheet.cssText.length !== 0 && !(/unknown/i).test(sheet.cssText) && sheet.cssText.indexOf(selector) === 0;
    };
    return support(selector);
};
Modernizr.addTest('targetselector', function() {
    return selectorSupported(':target');
});
if (!Function.prototype.bind) {
    Function.prototype.bind = function(oThis) {
        if (typeof this !== "function") {
            throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");
        }
        var aArgs = Array.prototype.slice.call(arguments, 1),
            fToBind = this,
            fNOP = function() {}, fBound = function() {
                return fToBind.apply(this instanceof fNOP && oThis ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));
            };
        fNOP.prototype = this.prototype;
        fBound.prototype = new fNOP();
        return fBound;
    };
}
var debug = {};
var EP2 = EP2 || {};
EP2.Utils = {
    objectHasProperties: function(obj) {
        for (var prop in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, prop)) {
                return true;
            }
        }
        return false;
    }
};
EP2 = $.extend({}, EP2, {
    searchBox: function() {
        var srchBox = $('#s');
        var checkIEbrowser = $('.lt-ie9');
        var compareTxt = srchBox.attr('placeholder');
        var w;
        if ($.browser.chrome) {
            srchBox.css('width', 91);
            w = 91;
        } else if ($.browser.mozilla) {
            srchBox.css('width', 94);
            w = 94;
        }
        srchBox.removeAttr('placeholder');
        if (checkIEbrowser.length) {
            srchBox.val(srchBox.attr('placeholder'));
        }
        var callback = function(ele) {
            if (srchBox.val() == "") {
                setTimeout(function() {
                    $(ele).closest('form').removeClass('expand');
                    if (checkIEbrowser.length && compareTxt == srchBox.val()) {
                        srchBox.val('');
                    }
                    srchBox.blur();
                }, 7000);
            }
        };
        srchBox.bind({
            focus: function() {
                var $this = $(this);
                $this.attr('placeholder', compareTxt)
                if (checkIEbrowser.length) {
                    srchBox.val(compareTxt);
                }
                $this.closest('form').addClass('expand');
                $this.animate({
                    width: 299
                }, 250);
            },
            blur: function() {
                var $this = $(this);
                $this.closest('form').removeClass('expand');
                $this.animate({
                    width: w
                }, 250);
                $this.closest('form').removeClass('expand, notEmpty');
                $this.removeAttr('placeholder');
                $this.removeAttr('style');
            },
            keyup: function() {
                var $this = $(this);
                if (checkIEbrowser.length) {
                    if ($this.val().match(compareTxt)) {
                        $this.val($this.val().replace(compareTxt, ''));
                    }
                }
            }
        });
    },
    teaserDimHover: function() {
        if ($('.teaserBox').length) {
            $(".lt-ie9 .teaserBox:last").css('marginRight', '0px');
            $(".teaserBox:first").hover(function() {
                $(".teaserBox:last").append('<div class="dimEffect">');
            }, function() {
                $('.teaserBox:last > .dimEffect').remove();
            });
            $(".teaserBox:last").hover(function() {
                $(".teaserBox:first").append('<div class="dimEffect">');
            }, function() {
                $('.teaserBox:first > .dimEffect').remove();
            });
        }
    },
    toggleFooterSubLinks: function(ele) {
        var expandSelector = $(ele);
        expandSelector.next('dl.flyout').hide('fast');
        expandSelector.click(function(e) {
            e.preventDefault();
            var $this = $(this);
            if ($('dl.flyout').is(':visible')) {
                $('dl.flyout').slideUp('fast');
            }
            if ($('dl.flyout').not(':visible')) {
                $('dl.flyout').prev().removeClass("active");
                $('dl.flyout').parent().removeClass("active");
                $(this).find('span').css('background-position', '0 -15px');
            }
            $this.addClass("active");
            $this.parent().addClass("active");
            $this.next('dl.flyout').toggle();
        });
        expandSelector.hover(function() {
            $(this).find('span').css('background-position', '0 -15px');
        }, function() {
            $(this).find('span').css('background-position', '0 0');
        });
    },
    equalizer: function(ele) {
        $(ele).maxHeight();
    },
    extendFooterBackground: function() {
        var winHeight = $(window).height(),
            wrapperHeight = $('#wrapper').height(),
            footerOriginalHeight = $('#wrapper footer').height();
        var newFooterHeight = parseInt(footerOriginalHeight + (winHeight - wrapperHeight));
        if (footerOriginalHeight > newFooterHeight) {
            $('#wrapper footer').removeAttr('style');
        } else {
            $('#wrapper footer').css('height', newFooterHeight + 'px');
        }
    }
});
EP2.Globals = EP2.Globals || {};
! function() {
    var error = function(msg) {
        throw new Error(msg);
    };
    var EP2 = this.EP2 = this.EP2 || {};
    var xaxis = EP2.XAxis = {
        GRID_CLASS_NAME: 'grid-view',
        XAXIS_CLASS_NAME: 'xaxis-view'
    };
    xaxis.DIR_LEFT = 'left';
    xaxis.DIR_RIGHT = 'right';
    xaxis.Events = {
        MOVE: 'xaxis.move',
        THRESHOLD: 'xaxis.threshold'
    };
    jQuery.easing['inOutQuad'] = function(x, t, b, c, d) {
        if ((t /= d / 2) < 1)
            return c / 2 * t * t + b;
        return -c / 2 * ((--t) * (t - 2) - 1) + b;
    };
    xaxis.ViewController = function(options) {
        var defaults = {
            el: false,
            className: xaxis.XAXIS_CLASS_NAME,
            childSelector: 'li',
            startPos: 0,
            mediator: null,
            showNextPrevPreview: false,
            fadeOutText: false,
            afterAnimate: function() {},
            showIndicator: false
        };
        options = $.extend({}, defaults, options);
        this.init(options);
    };
    xaxis.ViewController.prototype = {
        init: function(options) {
            this.defaultButtonText = $('#nameplateAnchoredBtn a').text();
            this.options = options;
            this.$el = options.el ? $(options.el) : error('No element specified');
            this.children = this.$el.children(options.childSelector);
            this.slideWidth = this.children.width();
            this.$el.addClass(options.className);
            this.length = this.children.length;
            this.startPos = options.startPos;
            this.currentPos = this.startPos;
            this.$el.css('margin-left', -(options.startPoint * this.slideWidth));
            if (!options.mediator) {
                error('A mediator is required for XAxis.ViewController to function');
            }
            var afterAnimate = options.afterAnimate;
            this.afterAnimate = $.proxy(function() {
                afterAnimate.call(this, arguments);
            }, this);
            this.mediator = options.mediator;
            this.mediator.subscribe(xaxis.Events.MOVE, this.onNotifyMove, this);
            this.getStartPosFromElements();
            this.buildIndicator();
            if (typeof this.options.countArray !== 'undefined') {
                this.vehicleCountArray = this.options.countArray;
                this.tabInteractions();
            }
            if (this.startPos > 0)
                this.jumpTo(this.startPos);
            this.checkThreshold();
            this.updateButtonURL();
            this.fadeOutNameplateBodytext();
            this.getNextPrevPreview();
            if (options.onReady) {
                options.onReady.call(this);
            }
            this.updateButtonText();
        },
        tabInteractions: function() {
            var self = this;
            var tabWrapper = $('#cv-tab-wrapper ul li');
            this.$tabsArray = $(tabWrapper).find('a');
            for (var i = 0; i < this.$tabsArray.length; i++) {
                $(this.$tabsArray[i]).attr('href', '#' + i);
                $(this.$tabsArray[i]).on('click', function(e) {
                    e.preventDefault();
                    var currentVal = $(this).attr('href').replace('#', '');
                    var moveVal = 0;
                    for (var j = 0; j < currentVal; j++) {
                        moveVal += self.vehicleCountArray[j];
                    }
                    self.jumpTo(moveVal);
                });
            }
        },
        updateSelectedTab: function(pos) {
            this.$tabsAppendArray = [];
            this.$tabsCategoryValue = 0;
            for (var i = 0; i < this.vehicleCountArray.length; i++) {
                this.$tabsAppendArray.push(this.$tabsCategoryValue);
                this.$tabsCategoryValue += this.vehicleCountArray[i];
            }
            for (var j = 0; j < this.$tabsAppendArray.length; j++) {
                if (pos === this.$tabsAppendArray[j] || pos < this.$tabsAppendArray[j + 1]) {
                    this.$tabsArray.removeClass('cv-selected-tab');
                    $(this.$tabsArray[j]).addClass('cv-selected-tab');
                    break;
                }
            }
        },
        getStartPosFromElements: function() {
            var len = this.length;
            while (len--) {
                if ($(this.children[len]).hasClass('selected')) {
                    this.startPos = len;
                    return;
                }
            }
        },
        onNotifyMove: function(payload) {
            if (payload.position != undefined && payload.position != null) {
                this.jumpTo(payload.position);
            } else {
                if (payload.direction === xaxis.DIR_LEFT) {
                    this.moveNext();
                } else {
                    this.movePrev();
                }
            }
        },
        moveNext: function() {
            if (this.currentPos < this.length - 1) {
                this.currentPos++;
                this.move("-=" + this.slideWidth + "px");
                this.fadeOutNameplateBodytext('next');
            }
            this.checkThreshold();
        },
        movePrev: function() {
            if (this.currentPos > 0) {
                this.currentPos--;
                this.move("+=" + this.slideWidth + "px");
                this.fadeOutNameplateBodytext('prev');
                this.updateButtonURL();
            }
            this.checkThreshold();
        },
        jumpTo: function(pos) {
            pos = parseInt(pos);
            pos = pos >= this.length ? this.length - 1 : pos < 0 ? 0 : pos;
            this.currentPos = pos;
            this.move(-(pos * this.slideWidth) + (this.slideWidth / 2));
            this.checkThreshold();
            this.updateButtonURL();
            this.fadeOutNameplateBodytext();
            this.getNextPrevPreview();
        },
        buildIndicator: function() {
            if (!this.options.showIndicator)
                return;
            var i = 0;
            var indicator = '<div id="pager"><span class="indicatorRightCurve"><span class="indicator">';
            for (i; i < this.length; i++) {
                indicator += '<a href="#' + i + '" class="' + ((i === this.currentPos) ? 'activeSlide' : '') + '">' + i + '</a>';
            }
            indicator += '</span></span></div>';
            this.$indicator = $(indicator);
            this.$indicatorsArray = this.$indicator.find('a');
            this.$el.after(this.$indicator);
            var self = this;
            for (var j = 0; j < this.$indicatorsArray.length; j++) {
                $(this.$indicatorsArray[j]).on('click', function(e) {
                    e.preventDefault();
                    self.jumpTo($(this).attr('href').replace('#', ''));
                });
            }
        },
        move: function(amount) {
            this.$el.animate({
                'margin-left': amount
            }, (this.options.speed || 450), 'inOutQuad', this.afterAnimate);
            if (this.options.showIndicator) {
                this.$indicatorsArray.removeClass('activeSlide');
                $(this.$indicatorsArray[this.currentPos]).addClass('activeSlide');
            }
            if (typeof this.options.countArray !== 'undefined') {
                this.updateSelectedTab(this.currentPos);
            }
            this.updateButtonURL();
            this.getNextPrevPreview();
        },
        checkThreshold: function() {
            if ((this.currentPos === 0) || (this.currentPos === (this.length - 1))) {
                this.mediator.notify(xaxis.Events.THRESHOLD, {
                    bounds: this.currentPos === 0 ? 'start' : 'end'
                });
                return;
            }
            this.mediator.notify(xaxis.Events.THRESHOLD, {
                bounds: 'active'
            });
        },
        updateButtonText: function() {
            var elem = $('#xAxisView li')[this.currentPos];
            var buttonText = undefined;
            if (elem) {
                buttonText = $(elem).data('button-text');
            }
            if (!buttonText) {
                buttonText = this.defaultButtonText;
            }
            $('#nameplateAnchoredBtn a').text(buttonText);
        },
        updateButtonURL: function() {
            this.updateButtonText();
            $(this.children[this.currentPos]).addClass('activeNameplate');
            $(this.children[this.currentPos]).siblings('li').removeClass('activeNameplate');
            $('#nameplateAnchoredBtn.btn-link-wrapper a').off('click.buttonUpdate');
            $('#nameplateAnchoredBtn.btn-link-wrapper a').on('click.buttonUpdate', function(e) {
                e.preventDefault();
                var listDataAttr = $('li.activeNameplate').data('button-link');
                if (listDataAttr !== undefined) {
                    window.location.href = listDataAttr;
                    return;
                } else {
                    $(this).attr('href', '#');
                    var visibleItem = $('li.activeNameplate');
                    var visibleItemData = visibleItem.data('button-link');
                    startPVConfigurator(visibleItem);
                }
            });
        },
        fadeOutNameplateBodytext: function(d) {
            if (this.options.fadeOutText === true) {
                var actualWidth = parseInt($(this.children[this.currentPos]).width() - $(this.children[this.currentPos]).find('.img-container').width()) / 2;
                var elementSelector = '.name-plate-text,.name-plate-text-body,.name-plate-text-content, .cv-xaxis-datapoint';
                var $fadeElements = $(elementSelector);
                $fadeElements.animate({
                    opacity: 0
                }, 0);
                $(this.children[this.currentPos]).siblings('li').animate({
                    opacity: 0.5
                }, 450);
            }
        },
        getNextPrevPreview: function() {
            var selectedEleIndex = this.currentPos,
                speed = 550,
                previndex = this.currentPos - 1,
                nextindex = this.currentPos + 1,
                getPrev = this.$el.children('li').eq(previndex).length,
                getNxt = this.$el.children('li').eq(nextindex).length,
                spanLeft = $('.pointer.left > span'),
                spanRight = $('.pointer.right > span'),
                thumb, nameplate;
            if (this.options.showNextPrevPreview === true) {
                if ($(this.children[this.currentPos])) {
                    if (!$('.pointer span > .vehicle-preview-rollover').length) {
                        spanLeft.append($('<figure class="vehicle-preview-rollover left">'));
                        spanRight.append($('<figure class="vehicle-preview-rollover right">'));
                    }
                    if (getPrev) {
                        thumb = this.$el.children('li').eq(previndex).find('.img-container').data('thumbnail');
                        nameplate = this.$el.children('li').eq(previndex).find('.nameplate.boldTxt').get(0).outerHTML;
                        nameplate += this.$el.children('li').eq(previndex).find('.name-plate-text-body').get(0).innerHTML;
                        spanLeft.find('.vehicle-preview-rollover.left').html('<img src="' + thumb + '" alt="">' + nameplate);
                    }
                    if (getNxt) {
                        thumb = this.$el.children('li').eq(nextindex).find('.img-container').data('thumbnail');
                        nameplate = this.$el.children('li').eq(nextindex).find('.nameplate.boldTxt').get(0).outerHTML;
                        nameplate += this.$el.children('li').eq(nextindex).find('.name-plate-text-body').get(0).innerHTML;
                        spanRight.find('.vehicle-preview-rollover.right').html('<img src="' + thumb + '" alt="">' + nameplate);
                    }
                    spanLeft.on({
                        'mouseover': function() {
                            $(this).find('.vehicle-preview-rollover.left').stop(true, true).animate({
                                'left': -10
                            }, speed, this.easing, function() {});
                        },
                        'mouseout': function() {
                            $(this).find('.vehicle-preview-rollover.left').stop(true, true).animate({
                                'left': -215
                            }, speed, this.easing, function() {});
                        }
                    });
                    spanRight.on({
                        'mouseover': function() {
                            $(this).find('.vehicle-preview-rollover.right').stop(true, true).animate({
                                'right': -10
                            }, speed, this.easing, function() {});
                        },
                        'mouseout': function() {
                            $(this).find('.vehicle-preview-rollover.right').stop(true, true).animate({
                                'right': -215
                            }, speed, this.easing, function() {});
                        }
                    });
                }
            }
        }
    };
    xaxis.NavControls = {
        ViewController: function(options) {
            var defaults = {
                clickableElements: $('.pointers'),
                mediator: null
            };
            options = $.extend({}, defaults, options);
            this.init(options);
        }
    };
    xaxis.NavControls.ViewController.prototype = {
        init: function(options) {
            this.clickableElements = $(options.clickableElements);
            if (this.clickableElements.length === 0)
                return;
            if (!options.mediator) {
                error('A mediator is required for XAxis.NavControls.ViewController to function');
                return;
            }
            this.mediator = options.mediator;
            this.mediator.subscribe(xaxis.Events.THRESHOLD, this.onNotifyThreshold, this);
            this.clickableElements.fadeIn().on('click', $.proxy(this.onClick, this));
            this.leftPointer = $(this.clickableElements[0]);
            this.rightPointer = $(this.clickableElements[1]);
        },
        onClick: function(e) {
            e.stopImmediatePropagation();
            e.preventDefault();
            this.mediator.notify(xaxis.Events.MOVE, {
                direction: $(e.target).hasClass('left') || $(e.target).closest('.pointer').hasClass('left') ? xaxis.DIR_RIGHT : xaxis.DIR_LEFT
            });
        },
        onNotifyThreshold: function(payload) {
            $(this.clickableElements).fadeIn();
            $(this.clickableElements).on('click', $.proxy(this.onClick, this));
            if (payload.bounds === 'start') {
                this.leftPointer.fadeOut();
                this.leftPointer.off('click');
            } else if (payload.bounds === 'end') {
                this.rightPointer.fadeOut();
                this.rightPointer.off('click');
            }
        }
    };
}.call(this);
! function() {
    var root = this;
    var promoTimer = Number($('#promo-carousel-timer').html());
    if (isNaN(promoTimer)) {
        promoTimer = 7500;
    }
    var defaults = {
        animation: {
            easing: 'inOutQuad',
            speed: 850
        },
        interval: promoTimer,
        showIndicator: true,
        el: $('.carousel'),
        autoPlay: true,
        startPos: 0,
        indicatorClass: '',
        pauseOnHover: true,
        afterAnimate: function() {},
        beforeAnimate: function() {},
        onReady: function() {}
    };
    var Carousel = function(options) {
        this.init(options);
        this.ready = false;
    };
    var proto = Carousel.prototype;
    proto.init = function(options) {
        this.options = $.extend({}, defaults, options);
        this.$el = $(this.options.el);
        this.slides = this.$el.find('.slide');
        var slideSize = this.slides.length;
        if (slideSize < 2) {
            this.options.autoPlay = false;
            this.options.showIndicator = false;
        }
        this.$el.mouseover(this.pause.bind(this));
        this.$el.mouseout(this.start.bind(this));
        this.slideWidth = this.$el.width();
        this.afterAnimate = $.proxy(function() {
            this.onAnimFinished();
            if (this.ready) {
                this.options.afterAnimate();
            } else {
                this.options.onReady();
            }
        }, this);
        this.timerFunc = $.proxy(function() {
            this.move();
        }, this);
        this.findSlides();
    };
    proto.findSlides = function() {
        this.slides = this.$el.find('.slide');
        var len = this.length = this.slides.length;
        if (len === 0) {
            return;
        }
        var i;
        for (i = 0; i < len; i++) {
            this.slides[i] = $(this.slides[i]).css({
                zIndex: (len - i),
                left: this.slideWidth
            });
        }
        this.slides[this.options.startPos].css('left', 0);
        this.currentPos = this.options.startPos;
        var img1 = this.slides[this.currentPos].find('img');
        if (img1.length > 0) {
            var oldSrc = img1.attr('src');
            img1.attr('src', '');
            img1.load(this.afterAnimate);
            img1.attr('src', oldSrc);
        } else {
            this.afterAnimate()
        }
        if (this.options.showIndicator) {
            this.buildIndicator()
        }
        this.buildPointers();
    };
    proto.move = function(next) {
        this.pause();
        next = (typeof next === "undefined") ? this.currentPos + 1 : next;
        var moveRight = next > this.currentPos ? true : false;
        if (next < 0) {
            next = this.slides.length - 1;
        }
        if (next > this.slides.length - 1) {
            next = 0;
        }
        if (moveRight) {
            this.slides[this.currentPos].stop().animate({
                left: -this.slideWidth
            }, this.options.animation.speed);
            this.slides[next].stop().css('left', this.slideWidth);
            this.slides[next].stop().animate({
                left: 0
            }, this.options.animation.speed, this.afterAnimate);
        } else {
            this.slides[this.currentPos].stop().animate({
                left: this.slideWidth
            }, this.options.animation.speed);
            this.slides[next].stop().css('left', -this.slideWidth);
            this.slides[next].stop().animate({
                left: 0
            }, this.options.animation.speed, this.afterAnimate);
        }
        this.currentPos = next;
        this.updateIndicator();
    };
    proto.onAnimFinished = function() {
        if (!this.stopped && this.options.autoPlay)
            this.interval = setTimeout(this.timerFunc, this.options.interval);
    };
    proto.jumpTo = function(pos) {
        pos = parseInt(pos);
        pos = pos > (this.length - 1) ? this.length - 1 : pos < 0 ? 0 : pos;
        if (pos === this.currentPos)
            return;
        this.move(pos);
    };
    proto.buildIndicator = function() {
        var i = 0;
        var indicator = '<div class="pager ' + this.options.indicatorClass + '"><span class="indicatorRightCurve"><span class="indicator">';
        for (i; i < this.length; i++) {
            indicator += '<a href="#' + i + '"' + ((i === this.currentPos) ? ' class="activeSlide"' : '') + '>' + i + '</a>';
        }
        indicator += '</span></span></div>';
        if (this.$indicator) {
            this.$indicator.remove();
        }
        this.$indicator = $(indicator).css('z-index', 90);
        this.$indicatorsArray = this.$indicator.find('a');
        this.$indicatorWrapper = this.$el.find('.carousel-indicator');
        if (this.$indicatorWrapper.length == 0) {
            this.$indicatorWrapper = $('<nav class="carousel-indicator"></nav>').appendTo(this.$el);
        } else {
            this.$indicatorWrapper.empty()
        }
        this.$indicatorWrapper.append(this.$indicator);
        var self = this;
        for (var j = 0; j < this.$indicatorsArray.length; j++) {
            $(this.$indicatorsArray[j]).on('click', function(e) {
                e.preventDefault();
                self.jumpTo($(this).attr('href').replace('#', ''));
            });
        }
    };
    proto.buildPointers = function() {
        var left = $('<a href="#" class="carousel-pointer left"></a>').css('z-index', 91),
            right = $('<a href="#" class="carousel-pointer right"/></a>').css('z-index', 91);
        var self = this;
        left.on('click', function(e) {
            e.preventDefault();
            self.move(self.currentPos - 1);
        });
        right.on('click', function(e) {
            e.preventDefault();
            self.move(self.currentPos + 1);
        });
        this.$el.find('.carousel-indicator').append(left, right);
    };
    proto.updateIndicator = function() {
        if (!this.options.showIndicator) {
            return;
        }
        this.$indicatorsArray.removeClass('activeSlide');
        $(this.$indicatorsArray[this.currentPos]).addClass('activeSlide');
    };
    proto.pause = function() {
        if (this.interval)
            clearTimeout(this.interval);
    };
    proto.start = function(reset) {
        if (reset)
            this.stopped = false;
        this.pause();
        this.onAnimFinished();
    };
    proto.stop = function() {
        this.stopped = true;
        this.pause();
    };
    proto.refresh = function(html) {
        this.$el.find('.slide-wrapper').html(html);
        this.findSlides();
    };
    var EP2 = root.EP2 = root.EP2 || {};
    EP2.Carousel = function(options) {
        return new Carousel(options);
    };
}.call(this);
! function() {
    var root = this;
    var error = function(msg) {
        throw new Error(msg);
    };
    var EP2 = root.EP2 = root.EP2 || {};
    EP2.ResourceTypes = {
        IMAGE: 1,
        SCRIPT: 2,
        HTML: 3,
        XML: 4,
        JSON: 5
    };
    var defaults = {
        async: true,
        callback: function() {},
        timeoutCallback: function(pendingRequests) {
            console.log(pendingRequests);
        },
        type: EP2.ResourceTypes.IMAGE,
        timeout: 60000
    };
    EP2.ResourceLoader = function(options) {
        this.init(options);
        this.ready = false;
        this.resources = [];
        this.pendingRequests = {};
        this.count = 0;
    };
    var proto = EP2.ResourceLoader.prototype;
    proto.init = function(options) {
        this.options = $.extend({}, defaults, options);
        this.checkOptions();
        return this;
    };
    proto.load = function() {
        if (this.ready) {
            this.checkReady();
            return;
        }
        if (this.options.url instanceof Function) {
            this.options.url = this.options.url();
        }
        if (!this.options.url instanceof Array) {
            this.options.url = [this.options.url.toString()];
        }
        if (this.options.type === EP2.ResourceTypes.IMAGE) {
            this.loadImages();
        } else {
            var len = this.options.url.length;
            var ctx = this;
            while (len--) {
                var url = this.options.url[len];
                var success = (function() {
                    var index = len,
                        rurl = url;
                    return function(data, textStatus, jqXHR) {
                        ctx.resourceLoaded(data, rurl, index);
                    }
                })();
                this.pendingRequests[len] = $.ajax(url, {
                    async: this.options.async,
                    success: success
                });
            }
        }
        this.startTimeout();
    };
    proto.resourceCallbackFactory = function(rurl, index, ctx) {
        return {
            success: function(data, textStatus, jqXHR) {
                ctx.resourceLoaded(data, rurl, index);
            },
            error: function() {
                ctx.resourceError(rurl, index);
            }
        }
    };
    proto.startTimeout = function() {
        clearTimeout(this.timeout || null);
        this.timeout = setTimeout($.proxy(function() {
            var loaded = [];
            for (var item in this.resources) {
                if (!(item in this.pendingRequests)) {}
            }
            this.options.timeoutCallback(this.pendingRequests);
        }, this), this.options.timeout);
    };
    proto.imageCallbackFactory = function(rurl, index, ctx) {
        return {
            success: function() {
                ctx.imageLoaded(rurl, index);
            },
            error: function() {
                ctx.resourceError(rurl, index);
            }
        };
    };
    proto.loadImages = function() {
        var len = this.options.url.length;
        while (len--) {
            var img = new Image();
            var url = this.options.url[len];
            var callbacks = this.imageCallbackFactory(url, len, this);
            this.resources[len] = this.pendingRequests[len] = {
                url: url,
                resource: img
            };
            img.onload = callbacks.success;
            img.onerror = callbacks.error;
            img.src = this.options.url[len];
        }
    };
    proto.imageLoaded = function(url, index) {
        delete this.pendingRequests[index];
        this.count++;
        this.checkReady();
    };
    proto.resourceLoaded = function(response, url, index) {
        this.count++;
        delete this.pendingRequests[index];
        this.resources[index] = {
            url: url,
            resource: response
        };
        this.checkReady();
    };
    proto.resourceError = function(response, url, index) {
        this.count++;
        delete this.pendingRequests[index];
        this.resources[index] = {
            url: url,
            resource: response
        };
        this.checkReady();
    };
    proto.checkReady = function() {
        if (this.count === this.options.url.length) {
            clearTimeout(this.timeout);
            this.ready = true;
            this.options.callback(this.resources);
        }
    };
    proto.checkOptions = function() {
        if (typeof this.options.url === 'undefined') {
            error('Must define a URL object or string');
            return;
        }
    };
}.call(this);
! function(root) {
    var defaults = {
        rootElement: 'body',
        selector: '.js-ajax',
        target: '.ajax-link-target',
        errorMsg: '<div class="error">The resource you have requested is not available. Please try again later.</div>',
        mediator: null,
        afterLoad: function() {}
    };
    var Link = function(options) {
        this.options = $.extend({}, defaults, options);
        this.$root = $(this.options.rootElement);
        this.anchors = this.$root.find(this.options.selector);
        this.defaultTarget = this.$root.find(this.options.target);
        this.defaultContent = this.defaultTarget.children().wrap('<div></div>');
        this.loadedLinks = {};
        this.init();
        debug.loadedLinks = this.loadedLinks;
    };
    Link.prototype = {
        init: function() {
            var len = this.anchors.length;
            while (len--) {
                this.bindBehaviours(this.anchors[len]);
            }
        },
        getOption: function(options, key, defaultVal, modifier) {
            return (options && options[key]) ? modifier ? modifier(options[key]) : options[key] : defaultVal;
        },
        bindBehaviours: function(anchor) {
            var $anchor = $(anchor),
                dataOptions = $anchor.data('options'),
                ajaxLink = this.getOption(dataOptions, 'link', anchor.href),
                ajaxTarget = this.getOption(dataOptions, 'target', this.defaultTarget, $),
                dataType = this.getOption(dataOptions, 'dataType', 'html');
            var hash = $anchor.get(0).hash;
            if (hash != '') {
                this.useExistingContent(hash, ajaxLink, ajaxTarget, $anchor);
            }
            $anchor.off('click.linkManager');
            $anchor.on('click.linkManager', function(e) {
                e.preventDefault();
                if (!this.isLoaded(ajaxLink)) {
                    $.ajax(ajaxLink, {
                        dataType: dataType,
                        success: this.onLoadSuccess.bind(this, ajaxLink, ajaxTarget, $anchor),
                        error: this.onLoadError.bind(this, ajaxLink, ajaxTarget, $anchor),
                        data: (dataOptions && dataOptions.link) ? {} : {
                            bodyOnly: true
                        }
                    })
                } else {
                    this.loadFromCache(ajaxLink, ajaxTarget, $anchor);
                }
            }.bind(this));
        },
        useExistingContent: function(hash, link, target, $anchor) {
            var storedElement = $(hash);
            if (!$anchor.hasClass('js-default-link'))
                storedElement.hide();
            this.loadedLinks[link] = {
                target: target,
                storedElement: storedElement,
                data: storedElement.html()
            }
        },
        onLoadSuccess: function(link, target, $anchor, response) {
            var storedElement = $('<div></div>').hide();
            storedElement.html(response);
            target.html(storedElement);
            if (target.find('.mp-tabs').length != 0) {
                EP2.initializeMidpageTabs();
            }
            this.loadedLinks[link] = {
                target: target,
                data: response,
                storedElement: storedElement
            };
            this.loadFromCache(link, target, $anchor);
        },
        onLoadError: function(link, target, $anchor) {
            this.$root.find(target).html(this.options.errorMsg);
            if (this.options.mediator)
                this.options.mediator.notify('linkError', {
                    link: link,
                    anchor: $anchor
                });
        },
        isLoaded: function(link) {
            return !(typeof this.loadedLinks[link] === 'undefined');
        },
        loadFromCache: function(link, target, $anchor) {
            if (this.isLoaded(link)) {
                for (var key in this.loadedLinks) {
                    if (this.loadedLinks[key].target === target) {
                        this.loadedLinks[key].storedElement.hide();
                    }
                }
                var linkObject = this.loadedLinks[link];
                linkObject.target.html(linkObject.storedElement);
                linkObject.storedElement.show();
                this.options.afterLoad(linkObject.storedElement);
            }
            if (this.options.mediator)
                this.options.mediator.notify('linkLoaded', {
                    link: link,
                    anchor: $anchor,
                    data: linkObject.data
                });
        }
    };
    root.Link = function(options) {
        return new Link(options);
    };
}(EP2);
if (typeof fw_carousel_animate == 'undefined') {
    var fw_carousel_animate;
}
if (typeof fw_carousel_timer == 'undefined') {
    var fw_carousel_timer;
}
if (typeof fw_animationSpeed == 'undefined') {
    var fw_animationSpeed;
}
jQuery(function($) {
    $('.pv-endpoint').css({
        width: 'auto'
    });
    $('ul.skip').html('<li><a href="#vehicleDetail">Skip to vehicle content</a></li>');
    $('#sbe div.flyout dt:eq(1)').css({
        marginTop: '10px',
        paddingTop: '5px'
    });
    $('nav.breadCrumb').insertBefore('div.topContainer > .fr');
    $('nav.breadCrumb').removeClass('visuallyhidden');
    EP2.equalizer('.carModels > li');
    EP2.searchBox();
    EP2.teaserDimHover();
    EP2.toggleFooterSubLinks($('.expand'));
    EP2.extendFooterBackground();
    $(window).bind('resize', EP2.extendFooterBackground);
});
window.log = function f() {
    log.history = log.history || [];
    log.history.push(arguments);
    if (this.console) {
        var args = arguments,
            newarr;
        args.callee = args.callee.caller;
        newarr = [].slice.call(args);
        if (typeof console.log === 'object')
            log.apply.call(console.log, console, newarr);
        else
            console.log.apply(console, newarr);
    }
};
(function(a) {
    function b() {}
    for (var c = "assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,time,timeEnd,trace,warn".split(","), d; !! (d = c.pop());) {
        a[d] = a[d] || b;
    }
})(function() {
    try {
        console.log();
        return window.console;
    } catch (a) {
        return (window.console = {});
    }
}());;
(function($) {
    $.fn.maxHeight = function() {
        var max = 0;
        this.each(function(ele, index) {
            max = Math.max(max, $(this).height());
        });
        $(this).each(function() {
            if (max) {
                $(this).css({
                    'height': max
                });
            }
        });
        return max;
    };
})(jQuery);;
(function($, window, document, undefined) {
    'use strict';
    $.tabbifiedContent = function(element, options) {
        var defaults = {
            navEle: 'ul.subMenu a',
            tabPanelWrapperSelector: '',
            tabPanelSelector: '',
            tabNavEvent: 'mouseover',
            selectedTabLink: null,
            hiAjax: {
                'type': '',
                'enable': false,
                'targetEle': ''
            },
            afterTabSelected: function(ele) {},
            animateTo: 600,
            backtoTopSiteTerm: "back top top",
            dockTabMenu: false,
            dockTabEleSelector: '.tab-wrapper'
        };
        var plugin = this;
        plugin.settings = {};
        var $element = $(element);
        plugin.init = function() {
            plugin.settings = $.extend({}, defaults, options);
            var navSelector = $(element).find(plugin.settings.navEle),
                tabBlock = plugin.settings.tabPanelWrapperSelector != "" ? $(plugin.settings.tabPanelWrapperSelector).children() : $(plugin.settings.tabPanelSelector),
                tabEvent = plugin.settings.tabNavEvent,
                selectedTab = parseInt(plugin.settings.selectedTabLink),
                docktab = plugin.settings.dockTabMenu,
                dockTabEleSelector = $(plugin.settings.dockTabEleSelector),
                backtotopBtnSiteTerm = plugin.settings.backtoTopSiteTerm,
                animateToPosition = plugin.settings.animateTo;
            navSelector.closest('ul').attr({
                role: 'tablist'
            });
            navSelector.parent('li').attr({
                role: 'presentation'
            });
            var myArray = [];
            jQuery.easing['inOutQuad'] = function(x, t, b, c, d) {
                if ((t /= d / 2) < 1)
                    return c / 2 * t * t + b;
                return -c / 2 * ((--t) * (t - 2) - 1) + b;
            };
            var tabContentNav = function() {
                if ($element !== undefined) {
                    var tabContainers = $element.find(tabBlock);
                    var tabNavLinkSelected = $element.find(navSelector),
                        ajaxType = plugin.settings.hiAjax.type || 'POST',
                        ajaxIsOn = plugin.settings.hiAjax.enable,
                        $targetElement = plugin.settings.hiAjax.targetEle,
                        $pageName = plugin.settings.hiAjax.page,
                        pageScrollTop = function() {
                            if ($(window).scrollTop() < dockTabEleSelector.offset().top) {
                                $('html, body').animate({
                                    scrollTop: animateToPosition
                                }, 450, 'linear');
                            }
                            $('#primary-tab-content[data-dynamic-tabcontent="true"]').find('.innertab-wrapper').animate({
                                'margin-top': 62
                            }, 450);
                        }, hiAjaxbehaviour = function(link, url, id, target) {
                            var $thisLink = link,
                                $id = $('#' + $thisLink.attr('rel')),
                                $targetEle = target,
                                htmlContent = '';
                            if (!$id.html()) {
                                console.log($thisLink, $id, $targetEle);
                                $.ajax({
                                    type: ajaxType,
                                    url: url,
                                    dataType: 'html',
                                    success: function(html) {
                                        htmlContent = $(html).find($targetEle).html();
                                        $id.html(htmlContent);
                                        pageScrollTop();
                                    }
                                });
                            }
                        };
                    tabContainers.hide('fast');
                    tabContainers.each(function(i, v) {
                        var $this = $(this),
                            addAttr = $element.attr('id') + $this.index() || $element.attr('class') + $this.index();
                        $this.attr('id', addAttr);
                        myArray.push({
                            id: $this.attr('id')
                        });
                        $this.attr({
                            'role': 'tabpanel',
                            'data-tabpanel-idx': i,
                            'aria-hidden': 'true',
                            'aria-expanded': 'false',
                            'aria-labelledby': 'link' + $(this).attr('id')
                        });
                    });
                    $.each(myArray, function(i, v) {
                        var $this = $(this);
                        var relAttr = v.id;
                        tabNavLinkSelected.eq(i).attr({
                            rel: v.id,
                            tabindex: i,
                            id: 'link' + v.id,
                            'aria-controls': 'link' + v.id,
                            'role': 'tab',
                            'aria-selected': 'false',
                            'data-has-subtab': 'subtab' + i
                        });
                    });
                    var linkSelected = tabNavLinkSelected.hasClass('selected');
                    var linkSelectedId = $(element).find('.selected').index();
                    var getSelectedRel = $(element).find('.selected').attr('rel');
                    if (selectedTab !== null) {
                        tabContainers.eq(selectedTab).show('fast').attr({
                            'aria-hidden': 'false',
                            'aria-expanded': 'true'
                        });
                        tabNavLinkSelected.parent('li').removeClass('selected');
                        tabNavLinkSelected.eq(selectedTab).addClass('selected').attr('aria-selected', true);
                        tabNavLinkSelected.eq(selectedTab).parent('li').addClass('selected');
                    }
                    if (linkSelected === true) {
                        $('#' + getSelectedRel).show('fast');
                    }
                    tabNavLinkSelected.each(function(i, v) {
                        return;
                        var $this = $(this),
                            setLinkHash = $this.attr('rel'),
                            getRelatedLink = $this.attr('href'),
                            getAjaxLink = $this.attr('data-ajaxlink');
                        if (tabEvent == "mouseover" || tabEvent == "mouseenter" || tabEvent == "focusin") {
                            $this.bind({
                                'focusin mouseover mouseenter': function(e) {
                                    tabContainers.stop(true, true).hide('fast');
                                    var getId = tabContainers.hide().filter(this.hash).attr('id');
                                    tabNavLinkSelected.attr('aria-selected', false);
                                    $this.attr({
                                        'href': '#' + setLinkHash,
                                        'aria-selected': true
                                    });
                                    tabContainers.hide().attr({
                                        'aria-hidden': 'true',
                                        'aria-expanded': 'false'
                                    });
                                    tabContainers.hide().filter(this.hash).stop(true, true).show().attr({
                                        'aria-hidden': 'false',
                                        'aria-expanded': 'true'
                                    });
                                    tabNavLinkSelected.removeClass('selected');
                                    $this.addClass('selected');
                                    if (ajaxIsOn === true) {
                                        hiAjaxbehaviour(getRelatedLink, getId);
                                    }
                                    $this.attr('href', getRelatedLink);
                                },
                                'focusout mouseout mouseleave': function() {
                                    $this.attr('href', getRelatedLink);
                                },
                                'click': function(e) {
                                    $this.attr('href', getRelatedLink);
                                    if (!$this.closest('.levelOne[data-nav="cv"]')) {
                                        window.location.href = getRelatedLink;
                                    }
                                },
                                'mousedown': function(e) {
                                    $this.attr('href', getRelatedLink);
                                }
                            });
                        }
                        if (tabEvent == "click") {
                            $this.on({
                                'click': function(e) {
                                    var getId = tabContainers.hide().filter(this.hash).attr('id'),
                                        getSubtab = $(this).attr('data-has-subtab');
                                    tabNavLinkSelected.attr('aria-selected', false);
                                    $this.attr({
                                        'href': '#' + setLinkHash,
                                        'aria-selected': true
                                    });
                                    $element.find('.sub-nav').removeClass('open').removeAttr('style');
                                    $('#' + getSubtab).addClass('open');
                                    tabContainers.hide().attr({
                                        'aria-hidden': 'true',
                                        'aria-expanded': 'false'
                                    });
                                    tabContainers.hide().filter(this.hash).delay(250).fadeIn().attr({
                                        'aria-hidden': 'false',
                                        'aria-expanded': 'true'
                                    });
                                    tabNavLinkSelected.removeClass('selected');
                                    $this.parent('li').addClass('selected').siblings('li').removeClass('selected');
                                    if (ajaxIsOn === true) {
                                        var getFirstTabContent = $('.tab-content:first').attr('id');
                                        var getId;
                                        if ($pageName == "xaxis-detailed") {
                                            $('#tabs.nameplate-main-content').find('.tab-content').remove();
                                            $('#tabs.nameplate-main-content').append('<div id="primary-tab-content0" class="secondary-tabs tab-content" style="display: block;" role="tabpanel" data-tabpanel-idx="0" aria-hidden="false" aria-expanded="true" aria-labelledby="primary-tab-content0"></div>');
                                            var $thisLink = $this,
                                                $id = $('#' + $thisLink.attr('rel')),
                                                $targetEle = $targetElement,
                                                htmlContent = '';
                                            var History = window.history;
                                            $.ajax({
                                                type: 'GET',
                                                url: getAjaxLink,
                                                dataType: 'json',
                                                cache: true,
                                                success: function(data) {
                                                    var title = data.page.head_meta[0].value,
                                                        metaDescriptn = data.page.head_meta[1].value,
                                                        pageURL = data.page.pageUrl,
                                                        $loc = data.page.body_tab[0].location;
                                                    if (title !== (undefined || {} || "")) {
                                                        document.title = title;
                                                    }
                                                    if (metaDescriptn !== (undefined || {} || "")) {
                                                        $('meta[name="description"]').attr('content', metaDescriptn);
                                                    }
                                                    if (pageURL !== (undefined || {} || "")) {
                                                        $('link[rel="canonical"]').attr('href', pageURL);
                                                        if (Modernizr.history) {
                                                            tabNavLinkSelected.attr('data-HajaxPath', data.page.body_tab[0].location);
                                                            History.pushState({
                                                                url: pageURL,
                                                                ajxlink: $loc,
                                                                targetElem: $targetEle
                                                            }, title, pageURL);
                                                        }
                                                    }
                                                    populateXaxisDetailedTab($targetEle, data.page.body_tab[0].location);
                                                    scriptStateChange(data.page.script[0].id, data.page.script[0].url);
                                                }
                                            });
                                        } else {
                                            hiAjaxbehaviour($this, getAjaxLink, getId, $targetElement);
                                            console.log('a', $(window).scrollTop(), ':', dockTabEleSelector.offset().top);
                                        }
                                    } else {
                                        setTimeout(function() {
                                            pageScrollTop();
                                        }, 450);
                                    }
                                }
                            });
                        }
                    });
                    if (typeof(plugin.settings.afterTabSelected) == "function") {
                        plugin.settings.afterTabSelected(navSelector);
                    }
                }
            };
            var loadFromHistory = function(state) {
                populateXaxisDetailedTab(state.targetElem, state.ajaxpath);
                scriptStateChange(state.id, state.scriptUrl);
            };
            var scriptStateChange = function(id, url) {
                var s = document.createElement('script');
                s.setAttribute('charset', 'UTF-8');
                s.setAttribute('id', id);
                s.setAttribute('src', url);
                document.getElementsByTagName('body').item(0).appendChild(s);
            };
            var populateXaxisDetailedTab = function(target, location) {
                $.ajax({
                    type: 'GET',
                    url: location,
                    dataType: 'html',
                    cache: true,
                    success: function(html) {
                        var htmlContent = $(html).find(target).html();
                        $('#tabs.nameplate-main-content .tab-content').css('opacity', 0);
                        $('#tabs.nameplate-main-content .tab-content').html(htmlContent);
                        EP2.dynTabContent.prototype.ajaxSubTabs();
                        $('.tab-content').find('.sub-nav').addClass('open');
                        var getScrollPos = $(window).scrollTop();
                        var subTabLen = $('.tab-content').find('.sub-nav li').size();
                        if (getScrollPos >= dockTabEleSelector.offset().top && subTabLen > 1) {
                            $('.tab-content').find('.sub-nav').addClass('sticky-sub-tab');
                            $('#primary-tab-content[data-dynamic-tabcontent="true"]').find('.innertab-wrapper').animate({
                                'margin-top': 62
                            }, 450);
                        }
                    }
                });
            };
            var dockTabMenu = function() {
                if (docktab !== true) {
                    return;
                }
                var dockTabMenu_offsetTop = dockTabEleSelector.offset().top,
                    fixedTab = {};
                $('#wrapper').append('<span class="icon back-to-top" title="' + backtotopBtnSiteTerm + '" style="display:none;"><span class="visuallyhidden">' + backtotopBtnSiteTerm + '</span></span>');
                fixedTab.init = function() {
                    this.scroll_top = $(window).scrollTop();
                    this.tabwrapper = dockTabEleSelector;
                    this.innerTabParent = $('#tabs').find('.tab-wrapper');
                    this.subTabs = $('#tabs .secondary-tabs.tab-content');
                    this.subTabWrapper = $('#tabs .secondary-tabs.tab-content:visible').find('.sub-nav');
                    this.scrollbackBtn = $('#wrapper').find('.back-to-top');
                    if (this.scroll_top > dockTabMenu_offsetTop || this.scroll_top === 540) {
                        this.tabwrapper.addClass("sticky-tab-menu").css({
                            'zIndex': 99999
                        });
                        this.subTabWrapper.addClass('sticky-sub-tab');
                        this.tabwrapper.find('hr').addClass('visuallyhidden');
                        this.scrollbackBtn.stop(true, true).fadeIn(450);
                    } else {
                        this.tabwrapper.removeClass("sticky-tab-menu");
                        this.subTabWrapper.removeClass('sticky-sub-tab');
                        this.tabwrapper.find('hr').removeClass('visuallyhidden');
                        this.scrollbackBtn.stop(true, true).fadeOut(450);
                    }
                };
                var containerTopMargin = function(e) {
                    var $this = e;
                    var subTabLen = $('.tab-content').find('.sub-nav li').size();
                    if ($this.scrollTop() > dockTabEleSelector.offset().top && subTabLen > 1) {
                        $('#primary-tab-content[data-dynamic-tabcontent="true"]').find('.innertab-wrapper').css({
                            'margin-top': 62
                        });
                    }
                    if ($this.scrollTop() < dockTabEleSelector.offset().top) {
                        $('#primary-tab-content[data-dynamic-tabcontent="true"]').find('.innertab-wrapper').css({
                            'margin-top': 0
                        });
                    }
                };
                $(window).scroll(function() {
                    var $this = $(this);
                    fixedTab.init();
                    containerTopMargin($this);
                });
                $(document).on('scroll', function() {
                    var $this = $(this);
                    containerTopMargin($this);
                });
                $('#wrapper .back-to-top').on('click', function(e) {
                    e.preventDefault();
                    $('html, body').animate({
                        scrollTop: 0
                    }, 450);
                    $('.innertab-wrapper').css({
                        'margin-top': 0
                    });
                });
                var findSubnav = $('.secondary-tab-content').find('.sub-nav');
                var findIframe = $('.secondary-tab-content').find('iframe');
                if (findSubnav) {}
                if (findIframe) {
                    findIframe.width(780);
                }
            };
            tabContentNav();
            dockTabMenu();
        };
        plugin.init();
    };
    $.fn.tabbifiedContent = function(options) {
        return this.each(function() {
            if (undefined == $(this).data('tabbifiedContent')) {
                var plugin = new $.tabbifiedContent(this, options);
                $(this).data('tabbifiedContent', plugin);
            }
        });
    };
})(jQuery, window, document);
EP2.initCVNavMenu = function() {
    var wrapper = $('.navigation-grid-wrapper');
    var root = $('.primary-nav-items');
    var defaultMenuItem = lastActive = root.find('.active');
    var defaultMenuHeight = defaultMenuItem.find('.navigation-grid-items').height();
    var lastActive, menuTimeout, currentGridItems;
    root.height(defaultMenuHeight);
    var openMenuItems = function(e) {
        if (typeof lastActive !== 'undefined') {
            lastActive.removeClass('active');
        }
        var $li = lastActive = $(this);
        $li.addClass('active');
        currentGridItems = $li.find('.navigation-grid-items');
        currentGridItems.show();
        root.height(currentGridItems.height() + 3);
        wrapper.height(currentGridItems.height() + 100);
        currentGridItems.removeAttr('style');
    };
    var resetMenuItems = function(e) {};
    root.children('li').hover(openMenuItems, resetMenuItems);
};
EP2.getSiteName = function() {
    return EP2.Globals.siteName || 'ENGInE';
};
EP2.getGforceMode = function() {
    return EP2.Globals.gforceMode || 'LIVE';
};
EP2.Globals.Mediator = new EP2.Mediator();
EP2.initPromoCarousel = function() {
    var promo = $('#promoCarousel');
    if (promo.length > 0) {
        var carousel = new EP2.Carousel({
            el: promo,
            indicatorClass: 'small'
        });
    } else {
        return null;
    }
    return {
        carousel: carousel
    };
};
EP2.nameplate = function() {
    var $axis = $('#nameplateXAxisView');
    if ($axis.length === 0)
        return null;
    var xmediator = EP2.Globals.Mediator || new EP2.Mediator();
    var axisPointerController = new EP2.XAxis.NavControls.ViewController({
        clickableElements: $('.pointer'),
        mediator: xmediator
    });
    return {
        mediator: xmediator,
        pointerViewController: axisPointerController,
        axisViewController: nameplateAxisViewController
    };
};
EP2.initXAxis = function() {
    var $axis = $('#xAxisView');
    $('#xAxis .miscellaneousFooter:first').css('margin-top', '75px');
    if ($axis.length === 0)
        return null;
    $("body").addClass('xaxis-bandaid');
    var elementSelector = '.name-plate-text,.name-plate-text-body,.name-plate-text-background,.name-plate-text-content';
    var $fadeElements = $(elementSelector);
    $fadeElements.animate({
        display: 'none',
        opacity: 0
    }, 0);
    var xmediator = EP2.Globals.Mediator || new EP2.Mediator();
    var axisPointerController = new EP2.XAxis.NavControls.ViewController({
        clickableElements: $('.pointer'),
        mediator: xmediator
    });
    var axisViewController = new EP2.XAxis.ViewController({
        el: '#xAxisView',
        mediator: xmediator,
        countArray: EP2.xaxisVehicleCountArray,
        fadeOutText: true,
        afterAnimate: function() {
            $('.activeNameplate .name-plate-text-body p').last().css({
                position: 'relative',
                padding: 0,
                'margin-top': '85px'
            });
            $fadeElements.animate({
                display: 'none',
                opacity: 0
            }, 250);
            $('.name-plate-text-background').css('display', 'none');
            $(this.children[this.currentPos]).find('.name-plate-text-background').css('display', 'block');
            $(this.children[this.currentPos]).stop().animate({
                display: 'block',
                opacity: 1
            }, 750);
            $(this.children[this.currentPos]).find(elementSelector).stop().animate({
                display: 'block',
                opacity: 1
            }, 750);
        },
        onReady: function() {
            $('.activeNameplate .name-plate-text-body p').last().css({
                position: 'relative',
                padding: 0,
                'margin-top': '85px'
            });
            $(this.children[this.currentPos]).find('.mask').css('z-index', -999);
            $(this.children[this.currentPos]).siblings('li').stop().animate({
                opacity: 0.5
            }, 450);
            $fadeElements.animate({
                display: 'none',
                opacity: 0
            }, 0);
            $(this.children[this.startPos]).find(elementSelector).stop().animate({
                display: 'block',
                opacity: 1
            }, 250);
            $(this.children[this.currentPos]).find('.name-plate-text-background').css('display', 'block');
        },
        showIndicator: ($('#promoCarousel').length === 0) ? true : false
    });
};
EP2.initBPXAxis = function() {
    var $axis = $('#bpAxisView');
    $('#buildandprice .miscellaneousFooter:first').css('margin-top', '75px');
    if ($axis.length === 0)
        return null;
    $("body").addClass('xaxis-bandaid build-bandaid');
    var elementSelector = '.name-plate-text,.name-plate-text-body,.name-plate-text-background,.name-plate-text-content';
    var $fadeElements = $(elementSelector);
    $fadeElements.animate({
        opacity: 0
    }, 0);
    $('.name-plate-text-body').css('height', 0);
    var xmediator = EP2.Globals.Mediator || new EP2.Mediator();
    var axisPointerController = new EP2.XAxis.NavControls.ViewController({
        clickableElements: $('.pointer'),
        mediator: xmediator
    });
    var axisViewController = new EP2.XAxis.ViewController({
        el: '#bpAxisView',
        mediator: xmediator,
        countArray: EP2.xaxisVehicleCountArray,
        fadeOutText: true,
        afterAnimate: function() {
            $fadeElements.animate({
                opacity: 0
            }, 250);
            $(this.children[this.currentPos]).find('.name-plate-text-body').css('height', 'auto');
            $(this.children[this.currentPos]).stop().animate({
                opacity: 1
            }, 750);
            $(this.children[this.currentPos]).find(elementSelector).stop().animate({
                display: 'block',
                opacity: 1
            }, 750);
            $('.activeNameplate .name-plate-text-body p').last().css({
                position: 'relative',
                padding: 0,
                'margin-top': '85px'
            });
        },
        onReady: function() {
            $(this.children[this.currentPos]).siblings('li').removeClass('activeNameplate');
            $(this.children[this.currentPos]).addClass('activeNameplate');
            $(this.children[this.currentPos]).find('.mask').css('z-index', -999);
            $fadeElements.animate({
                opacity: 0
            }, 0);
            $(this.children[this.startPos]).find('.name-plate-text-body').css('height', 'auto');
            $(this.children[this.startPos]).find(elementSelector).stop().animate({
                display: 'block',
                opacity: 1
            }, 250);
            $('.activeNameplate .name-plate-text-body p').last().css({
                position: 'relative',
                padding: 0,
                'margin-top': '85px'
            });
        },
        showIndicator: ($('#promoCarousel').length === 0) ? true : false
    });
};
EP2.initCVxaxis = function() {
    var $axis = $('#cvXAxisView');
    if ($axis.length === 0)
        return null;
    $("body").addClass('xaxis-bandaid build-bandaid');
    var elementSelector = '.name-plate-text,.name-plate-text-body,.name-plate-text-background,.name-plate-text-content,.cv-xaxis-datapoint';
    var $fadeElements = $(elementSelector);
    $fadeElements.animate({
        opacity: 0
    }, 0);
    var xmediator = EP2.Globals.Mediator || new EP2.Mediator();
    var axisPointerController = new EP2.XAxis.NavControls.ViewController({
        clickableElements: $('.pointer'),
        mediator: xmediator
    });
    var cvAxisViewController = new EP2.XAxis.ViewController({
        el: '#cvXAxisView',
        mediator: xmediator,
        countArray: EP2.xaxisVehicleCountArray,
        fadeOutText: true,
        showNextPrevPreview: false,
        afterAnimate: function() {
            $fadeElements.animate({
                opacity: 0
            }, 750);
            $(this.children[this.currentPos]).stop().animate({
                opacity: 1
            }, 750);
            $(this.children[this.currentPos]).find(elementSelector).stop().animate({
                opacity: 1
            }, 750);
        },
        onReady: function() {
            $fadeElements.animate({
                opacity: 0
            }, 0);
            $(this.children[this.startPos]).find(elementSelector).stop().animate({
                opacity: 1
            }, 50);
        },
        showIndicator: ($('#promoCarousel').length === 0) ? true : false
    });
    return {
        mediator: xmediator,
        pointerViewController: axisPointerController,
        axisViewController: cvAxisViewController
    };
};
EP2.initAjaxLinks = function() {
    var jaxer = new EP2.Link({
        mediator: EP2.Globals.Mediator,
        selector: '.js-link',
        target: '.nameplate-main-content',
        errorMsg: '<div class="error">Some text</div>'
    });
    EP2.Globals.Mediator.subscribe('linkLoaded linkError', function(payload) {
        if (EP2.initializeMidpageTabs) {
            EP2.initializeMidpageTabs();
        }
    }, this);
};
(function($, window, document, undefined) {
    EP2.Globals.promoCarousel = EP2.initPromoCarousel()
    EP2.initXAxis();
    EP2.initBPXAxis();
    EP2.CVBuilderCarousel = EP2.initCVxaxis();
    EP2.nameplate();
    EP2.initAjaxLinks();
    var tabWrapper = $('.innertab-wrapper .tab-content');
    var tabBTI = tabWrapper.find('.bti-wrapper');
    tabWrapper.each(function(i, item) {
        $(this).find('.bti-wrapper').filter(':first').addClass('first');
    });
    $('#xAxis-detailed .nameplate-tab-content').after($('#xaxisOverviewDisclaimer'));
    $('#xaxisOverviewDisclaimer').fadeIn();
    $('.disclaimer-button').on('click', function(e) {
        e.preventDefault();
        $(this).closest('div').toggleClass('open');
    });
})(jQuery, window, document);
! function($, window, document, undefined) {
    EP2.nameplateMidPageTabContent = function() {
        var $tabs = $('#primaryTabs.tabs li'),
            $list = "",
            $tabLen = $tabs.size() - 1;
        if ($tabLen > 0) {
            $('.tab-wrapper').append('<hr>');
            for (var i = 0; i < $tabLen; i++) {
                $list += '<div class="tab-content"></div>';
            };
            $('#tabs.nameplate-main-content').append($list);
            $('#xAxis-detailed .nameplate-tab-content').tabbifiedContent({
                navEle: '#primaryTabs.tabs li a',
                tabPanelSelector: '#tabs.nameplate-main-content .tab-content',
                selectedTabLink: 0,
                tabNavEvent: 'click',
                hiAjax: {
                    'enable': true,
                    'targetEle': '.tab-content'
                },
                afterTabSelected: function() {
                    $('#primaryTabs.tabs li a').on('click', function(e) {
                        alert('1');
                        e.preventDefault();
                        var selectedTab = $('#primaryTabs.tabs li.selected');
                        $(selectedTab).removeClass('selected');
                        $(this).closest('li').addClass('selected');
                    });
                }
            });
        }
    };
}(jQuery, window, document);
var flashDuration;
var isIE8VideoInitialized = false;
var isIE8 = $.browser.msie && $.browser.version < 10;

function controlFlash(string, flashId) {
    try {
        var f = findFlash(flashId);
        return f.controlFlash(string);
    } catch (e) {
        return 0;
    }
}

function flashEvent(string) {}

function getProperty(value, flashId) {
    var f = findFlash(flashId);
    try {
        return f.getProperty(value);
    } catch (e) {
        console.log("Error in getProperty: " + e);
    }
}

function propertyReturned(property, value) {
    flashDuration = value;
    return flashDuration;
}

function findFlash(flashId) {
    return document.getElementById(flashId);
}
var initVideoHTML5 = function(selector) {
    return $('video').mediaelementplayer({
        startVolume: 0.7,
        alwaysShowControls: false,
        pauseOtherPlayers: true,
        features: ['loadStart', 'loadMetadata'],
        plugins: ['flash'],
        pluginPath: '/cs/ENGInE/flash/',
        flashName: 'flashmediaelement.swf',
        success: function(vid, domObject) {
            vid.addEventListener('loadmetadata', function() {}, false);
            vid.addEventListener('playing', function() {
                $('#pager .indicator > a, #nextPrevBtn .nextSlide, #nextPrevBtn .prevSlide').on('click', function(e) {
                    e.preventDefault();
                    vid.pause();
                });
            }, false);
            vid.addEventListener('paused', function() {
                selector.cycle('pause');
            }, false);
            vid.addEventListener('ended', function() {
                selector.cycle('next');
            }, false);
            vid.addEventListener('error', function() {
                console.log('Error in vid, resuming the carousel');
                selector.cycle('resume');
            }, false);
        },
        error: function() {
            console.log('Error in carousel, resuming');
            selector.cycle('resume');
        }
    });
};
var alreadyInitialized = {};
var ie8VideoPlayers = [];
var initVideoObj = function(videoObj, selector, idx) {
    if (alreadyInitialized[idx]) {
        return;
    }
    videoObj = $(videoObj);
    videoObj.mediaelementplayer({
        mode: 'shim',
        autoPlay: true,
        preLoad: true,
        loop: false,
        startVolume: 0.7,
        wmode: 'direct',
        alwaysShowControls: true,
        pauseOtherPlayers: false,
        features: ['loadStart', 'loadMetadata'],
        plugins: ['flash'],
        pluginPath: '/cs/ENGInE/flash/',
        flashName: 'flashmediaelement.swf',
        success: function(mediaElement, domObject, player) {
            try {
                ie8VideoPlayers[idx] = player;
                isIE8VideoInitialized = true;
                var videoId = videoObj.attr('id');
                mediaElement.addEventListener('ended', function(e) {
                    if (selector) {
                        mediaElement.pause();
                        selector.cycle('resume');
                    } else {
                        console.log('cant resume carousel selector is undefined');
                    }
                }, false);
                var currentSlideId = $('#hpCarousel .currentSlide').find('video').attr('id');
                if (currentSlideId == videoId) {
                    selector.cycle('pause');
                    mediaElement.play();
                }
            } catch (e) {
                console.log('error in mediaelement.success: ' + e);
            }
        },
        error: function() {
            console.log('error in mediaplayer initialization');
            selector.cycle('resume');
        }
    });
    alreadyInitialized[idx] = true;
};
jQuery(function($) {
    EP2 = $.extend({}, EP2, {
        homePageCarousel: function(selector, animate, timer, initVideo) {
            var ua = navigator.userAgent.toLowerCase();
            var userAgent = navigator.userAgent;
            var isAndroid = ua.indexOf("android") > -1;
            var totalNumOfChildren = selector.children().size();
            var getWidth = selector.width();
            var setContainerW = getWidth * totalNumOfChildren;
            var arrowsHTML = '<div id="nextPrevBtn" role="controls"><a href="#" class="prevSlide"><span class="hideText">&lt;previous</span></a><a href="#" class="nextSlide"><span class="hideText">next &tg;</span></a></div>';
            var injectLoader = selector.before('<div id="maskloader" class="visuallyhidden"><span></span></div>');
            var findflashObject = selector.children('.flashObj.currentSlide').find('object');
            var flashId = selector.children('.flashObj.currentSlide').find('object').attr('id');
            var findVidId = selector.children('.currentSlide').find('video').attr('id');
            var mediaNav = $('#pager .indicator > a, #nextPrevBtn .nextSlide, #nextPrevBtn .prevSlide');
            $.browser.safari = ($.browser.webkit && !(/chrome/.test(ua)));
            $('.mejs-layers').css('display', 'block');
            selector.find('.innerBox').hide('fast');
            initVideo.call(this, selector);

            function hoverOnCarousel() {
                $('.carousel').hover(function(e) {
                    $('#nextPrevBtn').css('left', '0px').removeClass('visuallyhidden');
                }, function(e) {
                    $('#nextPrevBtn').removeAttr('style').addClass('visuallyhidden');
                });
            }
            if (selector.length && totalNumOfChildren > 1) {
                selector.addClass('carouselContainer').before(arrowsHTML).after('<div id="pager"><span class="indicatorRightCurve"><span class="indicator"></span></span></div>').cycle({
                    height: 384,
                    width: setContainerW,
                    fx: animate || 'scrollHorz',
                    timeout: timer || 7000,
                    prev: '.prevSlide',
                    next: '.nextSlide',
                    pager: '.indicator',
                    pause: true,
                    pauseOnPagerHover: true,
                    before: function(curr, next, opts) {
                        var currIndex = opts.currSlide;
                        var ie8VideoObjs = selector.find('.currentSlide .ie8VideoObj');
                        if (ie8VideoObjs.length) {
                            if (isIE8VideoInitialized) {
                                var player = ie8VideoPlayers[currIndex];
                                if (player) {
                                    player.pause();
                                } else {
                                    console.log("Error: ie8VideoObj [" + currIndex + "] has no player handle");
                                }
                            }
                        } else {
                            var thisvideo = selector.find('.videoObj.currentSlide video');
                            if (thisvideo.length) {
                                var video = $('.currentSlide video')[0];
                                video.player.pause();
                            } else {
                                var findflashObject = selector.find('.flashObj.currentSlide object');
                                var flashId = findflashObject.attr('id');
                                if (flashId) {
                                    controlFlash('pauseAnimation', flashId);
                                }
                            }
                        }
                        if (isIE8) {
                            var nextIdx = opts.nextSlide;
                            if (next == curr) {
                                nextIdx = 0;
                            }
                            ie8VideoObjs = $(next).find('video.ie8VideoObj');
                            if (ie8VideoObjs.length) {
                                initVideoObj(ie8VideoObjs[0], selector, nextIdx);
                            }
                        }
                        var meCannotPlay = selector.find('.me-cannotplay');
                        if (meCannotPlay.length) {
                            meCannotPlay.remove();
                            selector.find('video').css('display', 'block');
                        }
                    },
                    after: function(curr, next, opts) {
                        var currIndex = opts.currSlide;
                        var mediaNav = $('#pager .indicator > a, #nextPrevBtn .nextSlide, #nextPrevBtn .prevSlide');
                        var children = selector.children();
                        children.removeClass('currentSlide');
                        children.find('.innerBox').hide('fast');
                        $(children[currIndex]).addClass('currentSlide');
                        selector.children('.currentSlide').find('.innerBox').delay(500).fadeIn();
                        var ie8VideoObjs = selector.find('.currentSlide .ie8VideoObj');
                        if (ie8VideoObjs.length) {
                            var player = ie8VideoPlayers[currIndex];
                            selector.cycle('pause');
                            if (player) {
                                player.setCurrentTime(0);
                                player.play();
                            }
                        } else {
                            var thisvideo = selector.find('.videoObj.currentSlide video');
                            var findVidId = thisvideo.attr('id');
                            var _vidIndex = thisvideo.index();
                            var findflashObject = selector.find('.flashObj.currentSlide object');
                            var flashId = findflashObject.attr('id');
                            var mejsPlugin = selector.find('.me-plugin');
                            $('video:not(:visible)').load();
                            if (thisvideo.length) {
                                selector.cycle('pause');
                                if (isAndroid) {
                                    var video = $('.currentSlide video')[0];
                                    t = setTimeout(function() {
                                        selector.cycle('resume');
                                    }, (timer || 7000));
                                    video.addEventListener('click', function() {
                                        clearTimeout(t);
                                        video.play();
                                    }, false);
                                } else {
                                    if (thisvideo[_vidIndex] !== undefined && thisvideo[_vidIndex].player !== undefined) {
                                        thisvideo[_vidIndex].player.play();
                                    } else {
                                        $('.currentSlide .mejs-overlay-play .mejs-overlay-button').trigger('click');
                                    }
                                }
                            } else if (findflashObject.length) {
                                selector.cycle('pause');
                                findflashObject.css('display', 'block');
                                if (flashId) {
                                    $('#maskloader').fadeIn('fast').removeClass('visuallyhidden').bind('hover focus');
                                    controlFlash('gotoStart', flashId);
                                    controlFlash('playAnimation', flashId);
                                    getProperty('duration', flashId);
                                    $('#maskloader').delay('1000').fadeOut('fast').addClass('visuallyhidden');
                                    var duration = parseInt(flashDuration * 1000);
                                    var timeout = setTimeout(function() {
                                        mediaNav.off('click.mediacarousel');
                                        selector.cycle('next');
                                        controlFlash('gotoStart', flashId);
                                    }, duration);
                                    timeout;
                                } else {
                                    selector.cycle('resume');
                                }
                                mediaNav.on('click.mediacarousel', function(e) {
                                    e.preventDefault();
                                    clearTimeout(timeout);
                                    $('#maskloader').fadeOut('fast').addClass('visuallyhidden');
                                    if (flashId) {
                                        controlFlash('pauseAnimation', flashId);
                                        controlFlash('gotoStart', flashId);
                                    }
                                });
                            } else {
                                selector.cycle('resume');
                            }
                        }
                    }
                });
                hoverOnCarousel();
            } else if (selector.length && totalNumOfChildren == 1) {
                selector.cycle('destory');
                selector.find('.innerBox').delay(500).fadeIn();
            }
        },
        createDelayManager: function() {
            var timer = 0;
            return function(callback, ms) {
                clearTimeout(timer);
                timer = setTimeout(callback, ms);
            };
        },
        setFlashContent: function() {
            $.browser.safari = ($.browser.webkit && !(/chrome/.test(navigator.userAgent.toLowerCase())));
            var userAgent = navigator.userAgent;
            $('.flashcontent').each(function() {
                var swfContainer = $(this).attr('id');
                if (swfContainer != undefined) {
                    var swfId = $('#' + swfContainer),
                        swfSource = swfId.data('flash-src'),
                        swfSelector = swfId.data('flash-selector'),
                        swfWidth = swfId.data('flash-dim').w,
                        swfHeight = swfId.data('flash-dim').h,
                        swfFlashvars = swfId.data('flash-vars'),
                        swfParams = swfId.data('flash-params'),
                        swfAttributes = swfId.data('flash-attr');
                    if ($.browser.safari && userAgent.match(/Windows/i)) {
                        var createElement = $('<embed>').attr({
                            'id': swfAttributes.id,
                            'name': swfAttributes.name,
                            'play': 'true',
                            'loop': 'false',
                            'quality': 'high',
                            'src': swfSource,
                            'width': swfWidth,
                            'height': swfHeight,
                            'type': 'application/x-shockwave-flash',
                            'pluginspage': '//www.macromedia.com/go/getflashplayer',
                            'wmode': 'transparent',
                            'allowscriptaccess': 'always',
                            'allowfullscreen': 'true',
                            'bgcolor': '#ffffff',
                            'flashvars': swfFlashvars
                        });
                        $(document).ready(function() {
                            $(this).parent('.flashObj').append(createElement);
                            $(this).remove();
                        });
                    } else {
                        $(document).ready(function() {
                            swfobject.embedSWF(swfSource, swfSelector, swfWidth, swfHeight, "9.0.0", "/cs/ENGInE/flash/expressInstall.swf", swfFlashvars, swfParams, swfAttributes);
                        });
                    }
                }
            });
        },
        carouselVideoSpecificBrowser: function() {
            var ua = navigator.userAgent.toLowerCase();
            var userAgent = navigator.userAgent;
            var isAndroid = ua.indexOf("android") > -1;
            $.browser.safari = ($.browser.webkit && !(/chrome/.test(navigator.userAgent.toLowerCase())));
            $.browser.chrome = ($.browser.webkit && !(/safari/.test(navigator.userAgent.toLowerCase())));
            $('video').each(function() {
                var $thisVid = $(this);
                var vidMpeg = $thisVid.find('source[type="video/mp4"]').attr('src');
                var vidWebm = $thisVid.find('source[type="video/webm"]').attr('src');
                var vidFlv = $thisVid.find('source[type="video/flv"]').attr('src');
                var vidImg = $thisVid.attr('poster');
                var createImg = document.createElement("img");
                createImg.src = vidImg;
                $thisVid.closest('.videoObj').css('background-image', 'url(' + vidImg + ')');
                if (($.browser.msie && $.browser.version < 9) || ($.browser.safari && userAgent.match(/Windows/i))) {
                    $thisVid.attr('src', vidMpeg);
                    $thisVid.attr('type', 'video/mp4');
                } else if (($.browser.safari && userAgent.match(/Windows/i)) || ($.browser.safari && (userAgent.match(/iPad/i) || userAgent.match(/iPhone/i)))) {
                    $thisVid.closest('.videoObj').append(createImg);
                    $thisVid.closest('.videoObj').removeClass(".videoObj");
                    $thisVid.closest('.mejs-container').remove();
                } else if (userAgent.match(/Chrome/i)) {
                    $thisVid.attr('src', vidWebm);
                }
            });
        }
    });
});
$(window).load(function() {
    $(document).ready(function() {
        if (typeof fw_carousel_animate == 'undefined') {
            var fw_carousel_animate;
        }
        if (typeof fw_carousel_timer == 'undefined') {
            var fw_carousel_timer;
        }
        if (typeof fw_animationSpeed == 'undefined') {
            var fw_animationSpeed;
        }
        var selector = $('#hpCarousel');
        if (isIE8) {
            selector.find('video').each(function(idx, obj) {
                $(obj).addClass('ie8VideoObj');
            });
            selector.find('.videoObj').removeClass('videoObj');
            initVideoHTML5 = function() {};
        }
        EP2.homePageCarousel(selector, fw_carousel_animate, fw_carousel_timer, initVideoHTML5);
        if (!isIE8) {
            EP2.carouselVideoSpecificBrowser();
        }
        EP2.setFlashContent();
        var firstSlide = $('#hpCarousel').children(':eq(0)').find('video').length;
        var firstSlideFO = $('#hpCarousel').children(':eq(0)').find('object').length;
        if (firstSlide && Modernizr.video && $('video') && $('video')[0] && $('video')[0].player) {
            $('video')[0].player.load();
            $('video')[0].player.play();
        }
    });
});
var EP2 = EP2 || {};
var OM = OM || {};
jQuery(function($) {
    if (typeof console == "undefined") {
        this.console = {
            log: function() {}
        };
    }
    EP2 = $.extend({}, EP2, OM.bp, {
        initialize: function() {
            EP2.setupAjaxCallbacks();
            EP2.launchOverlay();
            EP2.launchExtraOverlay($('.js-extras-overlay'), $('#extras_popover'));
            EP2.launchSeriesOverlay($('.js-series-overlay'), $('#series_popover'));
            EP2.launchGenericClonedOverlay($('.js-price-overlay'));
        },
        setupAjaxCallbacks: function() {
            $(document).ajaxStart(function() {
                if (!$('#ajax-status').length) {
                    $('body').append('<div id="ajax-status"><div></div></div>');
                }
                $('#ajax-status div').html('<div class="loader"></div>');
                $('#ajax-status').show();
            }).ajaxStop(function(event, xhr, ajaxOptions, thrownError) {
                    $('#ajax-status').fadeOut();
                }).ajaxError(function(event, xhr, ajaxOptions, thrownError) {
                    $('#ajax-status span').text("Sorry, we are currently unable to load the content you have requested. Please try again later.");
                    $('#ajax-status').show().delay(700).fadeOut();
                });
        },
        featureWBR: function() {
            var t = $('#buildandprice .carDetails .smallHeading span[data-text="name"]');
            var regexpCache = {};
            var wordBreak = function(el, str, num) {
                el.each(function() {
                    if (!regexpCache[num]) {
                        regexpCache[num] = RegExp("(\\w{" + num + "})(?=\\w)", "g");
                    }
                    $(this).html(str.replace(regexpCache[num], "$1<br>"));
                });
            };
            t.each(function() {
                var $el = $(this);
                var str = $el.text();
                var num = 22;
                if (str.length > num) {
                    wordBreak($el, str, num);
                }
            });
        },
        featureAssetSlides: function(selector, animate, timer) {
            EP2.featureWBR();
            EP2.equalizer('.modelContainer .smallHeading');
            EP2.equalizer('.bodyStyleContainer .smallHeading');
            EP2.equalizer('.colourContainer .smallHeading');
            EP2.equalizer('.trimContainer .smallHeading');
            EP2.equalizer('.extrasContainer .smallHeading');
            EP2.equalizer('.genericListCarousel > li.galleryView');
            var totalNumChildren = selector.children().size();
            var getWidth = selector.width();
            var getGalleryHeight = $('li.galleryView').height() + 20;
            var setContainerW = getWidth * totalNumChildren;
            var getParent = selector.parent('div').attr('id');
            var setPager = '#' + getParent;
            var nxt = setPager + ' .nextSlide';
            var prv = setPager + ' .prevSlide';
            var paginate = setPager + ' .indicator';
            var animate = animate || 'scrollHorz';
            $('<div class="paginate"></div>').insertAfter('.bottomContent');
            if (selector.length && totalNumChildren > 1) {
                $('.paginate').html('<span class="indicatorRightCurve"><span class="indicator"></span></span>');
                selector.before('<div class="nextPrevBtn"><a href="#"  data-selenium="bpPanelPrevArrow" class="prevSlide" title=""><span class="hideText">previous</span></a><a href="#"  data-selenium="bpPanelNextArrow" class="nextSlide"  title=""><span class="hideText">next</span></a></div>').cycle({
                    height: getGalleryHeight,
                    width: 880,
                    fx: animate,
                    timeout: 0,
                    speed: 1500,
                    startingSlide: 0,
                    continuous: 0,
                    noWrap: true,
                    cssAfter: {
                        textAlign: 'left',
                        overflow: 'visible',
                        display: 'block',
                        'min-height': getGalleryHeight
                    },
                    prev: prv,
                    next: nxt,
                    pager: paginate,
                    before: function() {
                        $('li.galleryView').css({
                            'text-align': 'left'
                        });
                        $('span.indicatorRightCurve').parent().css({
                            textAlign: 'center'
                        });
                    },
                    after: function(curr, next, opts) {
                        var index = opts.currSlide;
                        var getCurr = opts.currSlide;
                        $(prv)[index == 0 ? 'hide' : 'show']();
                        $(nxt)[index == opts.slideCount - 1 ? 'hide' : 'show']();
                    }
                });
            }
        },
        launchGenericClonedOverlay: function(eleSelector) {
            $('body').on('click', '.js-price-overlay', function(e) {
                e.preventDefault();
                var hiddenDiv = $(this).attr('data-clone-contentid');
                var getDialogDiv = $("#" + hiddenDiv).clone();
                overlayer.open({
                    content: getDialogDiv
                });
            });
        },
        launchExtraOverlay: function(eleSelector, extraDiv) {
            var selector = eleSelector,
                hiddenDiv = extraDiv;
            $('body, .carDetails').on('click', '.js-extras-overlay', function(e) {
                e.preventDefault();
                showExtrasPopover($(this));
                var getDialogDiv = hiddenDiv.clone();
                overlayer.open({
                    content: getDialogDiv,
                    width: 678,
                    height: 'auto'
                });
            });
        },
        launchSeriesOverlay: function(eleSelector, seriesDiv) {
            var selector = eleSelector,
                hiddenDiv = seriesDiv;
            $('body, .carDetails').on('click', '.js-series-overlay', function(e) {
                e.preventDefault();
                showExtrasPopover($(this));
                var getDialogDiv = hiddenDiv.clone();
                overlayer.open({
                    content: getDialogDiv,
                    width: 678,
                    height: 'auto'
                });
            });
        },
        launchFinanceOverlay: function(eleSelector, extraDiv) {
            var selector = eleSelector,
                hiddenDiv = extraDiv;
            selector.on('click', function(e) {
                if (bp.context.configState != null) {
                    e.preventDefault();
                    var getDialogDiv = hiddenDiv.clone(true, true);
                    overlayer.open({
                        content: getDialogDiv,
                        width: 980,
                        height: 610
                    });
                    EP2.financeCalc = EP2.financeCalc || {};
                    if (typeof EP2.financeCalc == 'function') {
                        EP2.financeCalc("paymentQuote", 'pv', bp.nameplateJson, bp.nameplateData);
                    }
                    bp.credit.displayfinanceItems();
                }
            });
        },
        launchOverlay: function() {
            $('body, .carDetails').on('click', '.js-overlay', function(e) {
                e.preventDefault();
                e.stopPropagation();
                var $this = $(this),
                    cURL;
                var htmlLink;
                var dataAttr = $this.data('options');
                var dataMediaAttr = $this.data('media-overlay');
                var mediaH, mediaW, mediaType, mediaExternalLink;
                var getHrefLink = $this.attr('href');
                if (typeof getHrefLink === 'undefined') {}
                if (typeof dataAttr === 'undefined') {
                    htmlLink = getHrefLink;
                }
                if (typeof htmlLink === ('undefined' || "")) {
                    if (dataMediaAttr !== undefined) {
                        htmlLink = dataMediaAttr.link;
                    } else {
                        htmlLink = dataAttr.link;
                    }
                }
                if (typeof dataMediaAttr === 'undefined') {
                    mediaH = 'auto', mediaW = 'auto';
                } else {
                    mediaH = $this.data('media-overlay').height;
                    mediaW = $this.data('media-overlay').width;
                    mediaType = $this.data('media-overlay').mediaType || $this.data('media-overlay').mediatype;
                    mediaExternalLink = $this.data('media-overlay').externalLink;
                    mediaLink = $this.data('media-overlay').link;
                }
                if (htmlLink !== "" || htmlLink !== undefined) {
                    cURL = htmlLink;
                } else {
                    if (getHrefLink.indexOf('?') == -1) {
                        cURL = getHrefLink + "?bodyOnly=true";
                    } else {
                        cURL = getHrefLink;
                    }
                }
                if (mediaType == ("image" || "Image") && mediaExternalLink) {
                    var injectHTML = '<img src="' + getHrefLink + '">';
                    overlayer.open({
                        content: injectHTML,
                        height: mediaH,
                        width: mediaW
                    });
                    overlayer.center();
                } else if (mediaType == ("Video" || "video")) {
                    var launchOverlayVideo = new EP2.overlayMediaPlayer({
                        el: $this
                    });
                    return launchOverlayVideo;
                } else {
                    $.ajax({
                        type: 'get',
                        url: cURL,
                        dataType: 'html',
                        success: function(html) {
                            var injectHTML = $(html);
                            overlayer.open({
                                content: injectHTML,
                                height: mediaH,
                                width: mediaW,
                                mediatype: mediaType,
                                callbackAfter: function() {}
                            });
                        }
                    });
                }
            });
        },
        toggle_MonthlyCost: function() {
            $('section.configPricePerMnth').delegate('.expandBtn', 'click', function() {
                var $this = $(this);
                $this.parent().find('.summaryQuote').slideToggle(700, function() {});
                $this.toggleClass('collapseBtn').removeClass('expandBtn');
                $this.parent().find('.mediumHeading').text(bp.credit.selectedPlanName);
                $('#BallChainLogo').slideToggle(700, function() {});
            });
            $('section.configPricePerMnth').delegate('.collapseBtn', 'click', function() {
                var $this = $(this);
                $this.parent().find('.summaryQuote').slideToggle(700, function() {});
                $this.toggleClass('expandBtn').removeClass('collapseBtn');
                if (seeMonthlyCostTitle != undefined && seeMonthlyCostTitle != null && seeMonthlyCostTitle != "") {
                    $this.parent().find('.mediumHeading').text(seeMonthlyCostTitle);
                } else {
                    $this.parent().find('.mediumHeading').text('SEE MONTHLY COST');
                }
                $('#BallChainLogo').slideToggle(700, function() {});
            });
        },
        handleLeftMenuClick: function(e, obj) {
            e.preventDefault();
            var leftcontrol = $('.leftControl');
            var $this = obj;
            var $container = $this.closest('div');
            var selectedLeftMenu = $this.attr('data-event');
            var hasHDdata = $('#bpAxisView .activeNameplate').attr('data-showhd');
            if (hasHDdata == "true") {
                EP2.angleViewer.prototype.hideFullHDIcon(selectedLeftMenu);
            }
            leftcontrol.find('.selected').removeClass('selected visited').addClass('ticked');
            $this.parent('div').addClass('selected visited');
            $this.parent('div').find('.icon-span').html('<span></span>');
            var OM = OM || {};
            OM.bp = OM.bp || {};
            OM.bp.userjourney = OM.bp.userjourney || {};
            if (typeof OM.bp.userjourney == 'function') {
                OM.bp.userjourney(this.id, 'pv', bp.nameplateJson, bp.nameplateData);
            }
        },
        checkLength: function(featuresGroup) {
            var lengthFlag = true;
            switch (featuresGroup) {
                case 'Model':
                    lengthFlag = true;
                    break;
                case 'Bodystyle':
                    if (typeof bp.context !== undefined && typeof bp.context.allBodystyles !== undefined) {
                        if (bp.context.allBodystyles.length > 1)
                            lengthFlag = true;
                        else
                            lengthFlag = false;
                    }
                    break;
                case 'EngineTransmission':
                    if (typeof bp.context !== undefined && typeof bp.context.allEngineTransmissions !== undefined) {
                        if (bp.context.allEngineTransmissions.length > 1)
                            lengthFlag = true;
                        else
                            lengthFlag = false;
                    }
                    break;
                case 'Color':
                    if (typeof bp.context !== undefined && typeof bp.context.allColors !== undefined) {
                        if (bp.context.allColors.length > 1)
                            lengthFlag = true;
                        else
                            lengthFlag = false;
                    }
                    break;
                case 'Trim':
                    if (typeof bp.context !== undefined && typeof bp.context.allTrims !== undefined) {
                        if (bp.context.allTrims.length > 1)
                            lengthFlag = true;
                        else
                            lengthFlag = false;
                    }
                    break;
                case 'Extras':
                    if (typeof bp.context !== undefined && typeof bp.context.allExtras !== undefined) {
                        var extras = bp.context.allExtras;
                        for (var z = 0, len = extras.length; z < len; z++) {
                            if (typeof highlightExtrasTab !== undefined && highlightExtrasTab == extras[z].group) {
                                if (typeof extras[z].features !== undefined && extras[z].features.length > 1) {
                                    lengthFlag = true;
                                } else {
                                    lengthFlag = false;
                                }
                                break;
                            }
                        }
                    }
                    break;
            }
            return lengthFlag;
        },
        listAllFeatures: function(eleSelector, featuresGroup, showString, isTickSelected) {
            var ele = eleSelector;
            $('.showAllFeatures').detach();
            if (EP2.checkLength(featuresGroup)) {
                if (isTickSelected) {
                    $('#innerTabMenu').after('<div class="showAllFeatures allFeatureChecked" id="' + featuresGroup + 'ShowAll"><span class="showTxt"> ' + showString + '</span><span class="selectAsset"></span></div>');
                } else {
                    $('#innerTabMenu').after('<div class="showAllFeatures" id="' + featuresGroup + 'ShowAll"><span class="showTxt"> ' + showString + '</span><span class="selectAsset"></span></div>');
                };
                $('#' + featuresGroup + 'ShowAll').on('click', function(e) {
                    e.stopPropagation();
                    e.preventDefault();
                    if (featuresGroup == "Extras") {
                        if (showAllExtras) {
                            showAllExtras = false;
                            $('#ExtrasShowAll').attr('class', 'showAllFeatures');
                        } else {
                            showAllExtras = true;
                            $('#ExtrasShowAll').attr('class', 'showAllFeatures allFeatureChecked');
                        }
                    } else if (featuresGroup == "Color") {
                        if (showAllColours) {
                            showAllColours = false;
                            $('#ColorShowAll').attr('class', 'showAllFeatures');
                        } else {
                            showAllColours = true;
                            $('#ColorShowAll').attr('class', 'showAllFeatures allFeatureChecked');
                        }
                    } else if (featuresGroup == "Trim") {
                        if (showAllTrims) {
                            showAllTrims = false;
                            $('#TrimShowAll').attr('class', 'showAllFeatures');
                        } else {
                            showAllTrims = true;
                            $('#TrimShowAll').attr('class', 'showAllFeatures fr allFeatureChecked');
                        }
                    } else if (featuresGroup == "EngineTransmission") {
                        if (showAllETs) {
                            showAllETs = false;
                            $('#EngineTransmissionShowAll').attr('class', 'showAllFeatures');
                        } else {
                            showAllETs = true;
                            $('#EngineTransmissionShowAll').attr('class', 'showAllFeatures allFeatureChecked');
                        }
                    } else if (featuresGroup == "Bodystyle") {
                        if (showAllBodystyles) {
                            showAllBodystyles = false;
                            $('#BodystyleShowAll').attr('class', 'showAllFeatures');
                        } else {
                            showAllBodystyles = true;
                            $('#BodystyleShowAll').attr('class', 'showAllFeatures allFeatureChecked');
                        }
                    }
                    bp.dataManager.onConfigChanged();
                });
            } else {
                $('#innerTabMenu').after('<div class="showAllFeatures" id="bodyStyleShowAll"></div>');
            }
        },
        lastCurrentState: function(currTabSelected, currSlide) {
            $('#listTab li.selected').removeClass('selected');
            if ($('#listTab li').eq(currTabSelected)) {
                $('#listTab li').eq(currTabSelected).addClass('selected');
                $('#bpPanel > .genericListCarousel').cycle(currSlide);
            }
        },
        nextStepsNavLink: function(el) {
            var nextStepLink = $(el).find('#LHMNextSteps');
            var nextStepBlock = $('#buildandprice').find('.nextStepsBlock');
            var timeout;
            var delayed = 7000;
            nextStepLink.off('focus.nextstep');
            nextStepLink.on('click.nextstep', function(e) {
                if (bp.nameplateData === undefined) {
                    var cvLi = $('#cvNextSteps').find('li[data-cvpdf-url]');
                    if (cvLi) {
                        cvLi.css('display', 'block');
                    }
                } else if (bp.nameplateData.BuildPricePDFUploader !== "") {
                    $('.nextStepsBlock .view-specification-pdf').css('display', 'block');
                    console.log("Yes enable pdf");
                } else {
                    console.log("couldn't enable pdf");
                }
                e.preventDefault();
                EP2.handleLeftMenuClick(e, $(this));
                nextStepBlock.fadeIn('450', function() {
                    timeout = setTimeout(hideNextStepBlock, delayed);
                });
                $(this).bind('blur');
            });
            $('.nextStepsBlock li').hover(function() {
                $(this).find('span').css('backgroundPosition', '-24px 0px');
                if (timeout) {
                    window.clearTimeout(timeout);
                }
            }, function() {
                $(this).find('span').css('backgroundPosition', '0px 0px');
                if (timeout) {
                    window.clearTimeout(timeout);
                }
                timeout = setTimeout(hideNextStepBlock, delayed);
            });

            function hideNextStepBlock() {
                nextStepBlock.fadeOut();
                window.clearTimeout(timeout);
            }
            $('.nextPrevBtn a.nextSlide, #bpPanel .nextPrevBtn a.prevSlide').on('click.nextstep', hideNextStepBlock);
        },
        populateShareAddthis: function() {
            var $el = $('.genericListPanel');
            if ($('.genericListPanel #shareAddthisBtn').length) {
                var shareURL = document.location.protocol + '//' + document.location.host + bp.nameplateData.savePath + '?features=' + EP2.getShareConfigString();
                var shareTitle = bp.nameplateJson.name;
                var shareDescription = bp.nameplateJson.name;
                var shareBtnTxt = $.trim($el.find('.addthis_button_compact').text());
                var rawhtml = $('<div class="addthis_toolbox hide"><a href="http://www.addthis.com/bookmark.php" class="addthis_button_compact" addthis:url="' + shareURL + '" addthis:title="' + shareTitle + '" addthis:description="' + shareDescription + '"><span class="icon dwnArrow"></span>' + shareBtnTxt + '</a></div>');
                var template = $('<div class="popover fade top in" id="share"><div class="arrow"></div><div class="popover-content"></div></div>');
                $('.genericListPanel #shareAddthisBtn').html(rawhtml);
                var script = 'http://s7.addthis.com/js/300/addthis_widget.js#async=1';
                if (window.addthis) {
                    window.addthis = null;
                    window._adr = null;
                    window._atc = null;
                    window._atd = null;
                    window._ate = null;
                    window._atr = null;
                    window._atw = null;
                }
                $.getScript(script, function() {
                    addthis.init();
                });
            }
            setTimeout(function() {
                $('#at20mc').remove();
            }, 100);
        }
    });
    EP2.getShareConfigString = function() {
        var confCode = EP2.urlFeature(bp.context.series) + ":" + EP2.urlFeature(bp.context.bodystyle) + ":" + EP2.urlFeature(bp.context.engineTransmission) + ":" + EP2.urlFeature(bp.context.color) + ":" + EP2.urlFeature(bp.context.trim);
        if (bp.context.extras != null && bp.context.extras.length > 0) {
            for (i = 0; i < bp.context.extras.length; i++) {
                confCode = confCode + ":" + EP2.urlFeature(bp.context.extras[i]);
            }
        }
        return confCode;
    };
    EP2.initialize();
    $(document).ajaxComplete(function() {
        $('#subsection h4').css('display', 'none');
        $('#discountPriceBlock').hide();
        var hasTotal = $('#displayTotalPrice').find($('small > span')).length;
        if (hasTotal === 0) {
            $('#orgPriceBlock').hide();
        }
        var hasPromo = $('#displayPromoPrice').find($('small > span')).length;
        if (hasPromo !== 0) {
            $('#discountPriceBlock').show();
        }
    });
    $('.summaryPlan .subSection .tooltip').css({
        right: -130,
        zIndex: 99
    });
    $('#bpPanel table.gridtable tbody tr').live('click', function() {
        var $chooseET = $(this).find('input[name="co2"]');
        if (!$(this).hasClass('selectedFeature')) {
            $chooseET.attr('checked', 'checked');
            selectET($chooseET.val());
        }
    });
});
! function(exports, $, undefined) {
    EP2.featureCheckbox = (function() {
        var feature = {};
        var featureCheckbox = {};
        defaults = {
            eleSelector: '#bpPanel',
            targetEle: '.carDetails',
            checkBox: '<span class="selectAsset"></span>',
            mask: '<div class="thumbMask"></div>',
            extra: false,
            callback: function() {}
        };
        feature.options = {};
        feature.selectedAsset1 = function() {
            var allTargetEle = $(this.options.eleSelector).find(this.options.targetEle).append(this.options.checkBox);
            allTargetEle;
            $(this.options.eleSelector).addClass('singleSelection');
            feature.selectedAsset2(this.options);
        };
        feature.selectedAsset2 = function() {
            var injectMask = $(feature.options.eleSelector).find(this.options.targetEle).prepend(this.options.mask);
            injectMask;
        };
        featureCheckbox.selectedAsset1 = function() {
            var selectByIdClass = $(feature.options.eleSelector).attr('class');
            var findMask = $(feature.options.eleSelector).find(feature.options.targetEle + '> .thumbMask');
            findMask.each(function(i, v) {
                var seleniumIdx = $(this).attr('data-selenium', 'bpCheckBox' + (i + 1));
            });
            findMask.bind({
                click: function(e) {
                    e.preventDefault();
                    $thisMask = $(this);
                    var extrasPaneAll = $thisMask.closest('.extrasPanelAll');
                    if (feature.options.extra == true && extrasPaneAll.length) {
                        $thisMask.parent('.carDetails').toggleClass('selectedFeature');
                        featureCheckbox.selectedAsset2($thisMask);
                        return;
                    } else {
                        currTabSelected = $('#listTab li.selected').index();
                        currSlide = $('li.galleryView:visible').index();
                        $(feature.options.eleSelector).find('.selectedFeature').removeClass('selectedFeature');
                        $thisMask.parent('.carDetails').addClass('selectedFeature');
                        featureCheckbox.selectedAsset2($thisMask);
                    }
                },
                mouseover: function(e) {
                    e.preventDefault();
                    var findSibling = $(this).siblings('img');
                    findSibling.css({
                        'box-shadow': '0 5px 9px #A9A6A6'
                    });
                },
                mouseleave: function(e) {
                    e.preventDefault();
                    var findSibling = $(this).siblings('img');
                    findSibling.removeAttr('style');
                }
            });
        };
        featureCheckbox.selectedAsset2 = function(mask) {
            if (typeof(feature.options.callback) == "function") {
                feature.options.callback(mask);
            }
        };
        featureCheckbox.init = function(options) {
            $.extend(feature.options, defaults, options);
            feature.selectedAsset1();
        };
        return featureCheckbox;
    });
    exports.featureCheckbox = EP2.featureCheckbox;
}(this, jQuery);
EP2.bpForm = (function() {
    var prv_requiredField = $('input[required="required"]');
    var fieldProp = {
        errorMsg: '<span class="tooltip"><span class="arrow left"></span><span class="errorMsg"></span></span>'
    };
    var prv_method = function() {
        var numberOnly = /^(\d+)|(\d+\.{1}\d+)$/;
        prv_requiredField.parent().append($(fieldProp.errorMsg).css({
            position: 'absolute',
            right: 13,
            top: '-13px',
            display: 'none',
            'zIndex': 99
        }));;
        if (prv_requiredField.hasClass('error')) {
            prv_requiredField.parent().find('.errorMsg').text(prv_requiredField.attr('title'));
            prv_requiredField.parent().find('.tooltip').css('display', 'block');
        }
        prv_requiredField.bind({
            'blur': function() {
                var $this = $(this);
                var getTitle = $this.attr('title');
                var field = $.trim($this.val()),
                    minVal = parseInt($this.attr('min')),
                    maxVal = parseInt($this.attr('max'));
                if ($('input[type="number"]')) {
                    if (field == "" || !field.match(numberOnly)) {
                        $this.addClass('error');
                        $this.parent().find('.errorMsg').text(getTitle);
                        $this.parent().find('.tooltip').delay(400).fadeIn('fast');
                    } else {
                        $this.parent().find('.tooltip').delay(400).fadeOut();
                        $this.removeClass('error');
                    }
                }
            },
            'focus': function() {
                var $this = $(this);
                var field = $.trim($this.val()),
                    minVal = parseInt($this.attr('min')),
                    maxVal = parseInt($this.attr('max'));
                if ($('input[type="number"]')) {
                    if (field == "" || !field.match(numberOnly)) {
                        $this.parent().find('.tooltip').delay(200).fadeOut('fast');
                        $this.removeClass('error');
                    } else {
                        $this.removeClass('error');
                    }
                }
            }
        });
    };
    return {
        pubMethod: function() {
            return prv_method();
        }
    };
}());;
(function() {
    EP2.tabslider = function(el) {
        var selector = $(el || '.tabOptions:visible');
        var tabContainer = selector.find('.tabDiv');
        var tabList = selector.find('li');
        var ulTab = selector.find('.tabDiv ul');
        var liWidth = tabList.outerWidth();
        var tabContainerWidth = tabList.size() * 202;
        var tabWrapperWidth = tabContainer.outerWidth();
        var listLen = tabList.length;
        var prev = selector.find('.prevOptions'),
            next = selector.find('.nextOptions');
        var i = 0,
            j = 0;
        if (listLen > 4) {
            selector.find($('.tabDiv').before('<span class="prevOptions"><span class="hideText">previous</span></span><span class="nextOptions"><span class="hideText">next</span></span>'));
            ulTab.css({
                width: tabContainerWidth
            });
        } else {
            prev.remove();
            next.remove();
            selector.css({
                width: tabContainerWidth + 24
            });
            tabContainer.css('width', tabContainerWidth);
            selector.find('ul').css('width', tabContainerWidth);
            $('#tabOptions-summary.tabOptions li').first().addClass("selected").siblings('li').removeClass("selected");
            if (listLen === 1) {
                selector.hide();
            }
            tabList.on('click', function() {
                $(this).addClass('selected').siblings('li').removeClass('selected');
            });
            return;
        }
        if ($('#tabOptions-extra.tabOptions').length) {
            $('#cvBPRoot .panel-content .extras-carousel-wrapper').css({
                'margin-top': 0
            });
        }
        tabList.each(function(i, v) {
            $(this).attr('data-idx', i);
            if (($(this).position().left + $(this).outerWidth()) > tabWrapperWidth) {
                $(this).addClass('outsideview');
            }
        });
        $('.outsideview').each(function(i, v) {
            $(this).attr('data-outview-idx', i + 1);
        });
        $('.nextOptions').show('fast');
        var outerLiLen = selector.find('.outsideview').length;
        $('.nextOptions').on('click', function(e) {
            var $this = $(this);
            if ($(':animated').length) {
                return false;
            }
            if (i === outerLiLen) {
                e.stopPropagation();
                $this.hide('fast');
            } else {
                ulTab.animate({
                    'margin-left': "-=" + liWidth + "px"
                }, "slow", function() {
                    if (i === outerLiLen) {
                        $this.hide('fast');
                    }
                });
                if (j !== outerLiLen) {
                    i++;
                    j--;
                    $('.prevOptions').show('fast');
                }
            }
        });
        $('.prevOptions').on('click', function(e) {
            var $this = $(this);
            if ($(':animated').length) {
                return false;
            }
            if (i === 0) {
                e.stopPropagation();
                $this.hide('fast');
            } else {
                ulTab.animate({
                    'margin-left': "+=" + liWidth + "px"
                }, "slow", function() {
                    if (i === 0) {
                        $this.hide('fast');
                    }
                });
                if (j !== 0) {
                    j++;
                    i--;
                    $('.nextOptions').show('fast');
                }
            }
        });
        var cvSelectedTab = function(idx) {
            if ($('#cvBPRoot').length && idx !== ("" || undefined)) {
                selector.find('li').eq(idx).addClass("selected").siblings('li').removeClass('selected');
                $('#cvBPRoot').attr('data-idx', idx);
                localStorage.setItem('selectedTabIdx', idx);
                if (selector.find('li.selected').position().left + selector.find('li.selected').outerWidth() > tabWrapperWidth) {
                    $('.innerList').animate({
                        'margin-left': "-" + 202 * parseInt(idx)
                    }, 450);
                }
            } else if ($('#cvBPRoot').length && idx === ("" || undefined)) {
                var currTabIdx = selector.find('li.selected').attr('data-idx');
                selector.find('li').eq(currTabIdx).addClass("selected").siblings('li').removeClass('selected');
                $('#cvBPRoot').attr('data-idx', currTabIdx);
                if (selector.find('li.selected').position().left + selector.find('li.selected').outerWidth() > tabWrapperWidth) {
                    $('.innerList').animate({
                        'margin-left': "-" + 202 * parseInt(currTabIdx)
                    }, 450);
                }
            }
        };
        var animateTabAfterPanelRefresh = function() {
            var count = 0;
            if (selector.find('li.selected').position().left + selector.find('li.selected').outerWidth() > tabWrapperWidth) {
                var idx = parseInt($('.outsideview.selected').attr('data-outview-idx'));
                var countTimer = setInterval(function() {
                    selector.find('.nextOptions').trigger('click');
                    count++;
                    if (count === idx) {
                        clearInterval(countTimer);
                        return;
                    }
                }, 1000);
            }
        };
        var selectedTabIdx = "";
        tabList.on('click', function(e) {
            e.preventDefault();
            var $this = $(this);
            selectedTabIdx = $this.attr('data-idx');
            cvSelectedTab(selectedTabIdx);
            $this.parent('#tabOptions-extra.tabOptions').find('li.selected').removeClass('selected');
            $this.addClass('selected').siblings('li').removeClass('selected');
            $('#cvBPRoot').attr('data-idx', selectedTabIdx);
        });
        $(document).ajaxComplete(function() {
            animateTabAfterPanelRefresh();
            $('#tabOptions-summary.tabOptions li').on('click', function(e) {
                e.preventDefault();
                var $this = $(this);
                $this.parent().find('li.selected').removeClass('selected');
                $this.addClass('selected').siblings('li').removeClass('selected');
            });
        });
        return {
            cvSelectedTab: cvSelectedTab,
            animateTabAfterPanelRefresh: animateTabAfterPanelRefresh
        };
    };
})();
! function() {
    "use strict";
    EP2.angleViewer = function(options) {
        var defaults = {
            globalSwitch: "false",
            hasHD: true,
            el: $('body#bnp_pv_xaxis,body#default'),
            ajaxUrl: "",
            staticData: "",
            whichPanel: ""
        };
        this.options = $.extend({}, defaults, options);
        this.globalSwitch = this.options.globalSwitch;
        this.hasHDdata = this.options.hasHD;
        this.$el = this.options.el;
        this.ajaxUrl = this.options.ajaxUrl;
        this.staticData = this.options.staticData;
        this.isPanel = this.options.whichPanel;
        this.init();
    };
    EP2.angleViewer.prototype = {
        init: function() {
            this.angleIdx = parseInt($('.fullHD-angleView').attr('data-angle'));
            this.createOverlay();
            if (this.isPanel === 'Trim') {
                console.log(this.isPanel);
                this.hideFullHDIcon('trim');
            } else if (this.isPanel === 'Extras') {
                console.log(this.isPanel);
                this.hideFullHDIcon('extras');
            } else {
                this.showFullHDIcon();
            }
            this.$angleList = $('#fullHD-angle-list');
            this.zoomTrigger = $('.fullHD-angleView');
            this.closeBtn = $('.closeBtn');
            this.zoomTrigger.on('click', this.OpenFullHDOverlay.bind(this));
            this.closeBtn.on('click', this.closeFullHDOverlay.bind(this));
        },
        showFullHDIcon: function() {
            this.iconEleParent = $('.angleSwitcherWrapper');
            if (this.hasHDdata == 'true') {
                $('.fullHD-angleView').removeClass('visuallyhidden');
            }
        },
        createOverlay: function() {
            this.oW = '100%';
            this.oH = Math.max($(window).height());
            this.createOverlayWrapper = $('<div id="fullHD-angle-list" style="display:none;"><a href="#" class="icon closeBtn">X</a><div id="imgWrap"><ul></ul></div></div>');
            this.$angleList = $('#fullHD-angle-list');
            this.findParentEle = this.$el;
            if (this.findParentEle.length) {
                this.$angleList.css({
                    width: this.oW,
                    height: $(window).height()
                });
                if (!this.$angleList.length) {
                    this.findParentEle.append(this.createOverlayWrapper);
                }
                this.fetchExteriorAngles(this.ajaxUrl, this.staticData);
            } else {
                console.log("selector is missing..");
                return;
            }
        },
        fetchExteriorAngles: function(ajaxUrl, staticdata) {
            this.oW = '100%';
            this.oH = Math.max($(window).height());
            var staticData = staticdata,
                ajaxurl = ajaxUrl,
                dataImageHDset = "",
                finalHDdata, $li = "";
            if (ajaxurl !== (null || undefined || "")) {
                $.getJSON(ajaxurl, function(data) {
                    console.log("Ajax fetch..");
                    finalHDdata = data;
                });
            } else {
                finalHDdata = staticData;
            }
            $.each(finalHDdata, function(i, v) {
                $li += '<li data-idx="' + [i + 1] + '"><img src="' + this + '"></li>';
            });
            $('#fullHD-angle-list').css({
                height: $(window).height(),
                'textAlign': 'center'
            });
            $('#imgWrap').css({
                height: this.oH
            });
            $('#imgWrap ul').empty().append($li);
            $('#imgWrap ul li').css({
                width: this.oW,
                height: this.oH,
                'textAlign': 'center'
            });
            $('#imgWrap li img').css({
                width: this.oW
            });
            this.imageSlider();
        },
        imageSlider: function(n) {
            if (!$('.pager').length) {
                $('<div class="pager"></div><div class="view-angle-arrows"><a href="#" class="prev-slide" title=""><span class="hideText">previous</span></a><a href="#" class="next-slide"  title=""><span class="hideText">next</span></a></div>').insertAfter('#imgWrap ul');
            }
            var $el = this.options.el,
                oHeight = parseInt($(window).height()),
                oWidth = parseInt($(window).width()),
                selector = $('#imgWrap'),
                nxt = '#imgWrap .next-slide',
                prv = '#imgWrap .prev-slide',
                paginate = '#imgWrap .pager .indicator',
                $getCurrAngleIdx = parseInt(this.angleIdx);
            $('.pager').html('<span class="indicatorRightCurve"><span class="indicator"></span></span>');
            $('.pager').css('background', 'none');
            selector.find('ul').cycle({
                activePagerClass: 'activeSlide',
                height: oHeight,
                width: oWidth,
                containerResize: 1,
                slideResize: 1,
                fit: true,
                noWrap: true,
                fx: 'scrollHorz',
                startingSlide: $getCurrAngleIdx,
                continuous: 0,
                timeout: 0,
                speed: 500,
                prev: prv,
                next: nxt,
                pager: paginate,
                onPagerEvent: function(idx, el) {
                    var $idx = idx;
                    $el.find('.fullHD-angleView').attr('data-angle', $idx);
                },
                onPrevNextEvent: function(isNext, idx, el) {
                    var $idx = idx;
                    $el.find('.fullHD-angleView').attr('data-angle', $idx);
                },
                before: function() {
                    selector.find('li.activeSlide').removeClass('activeSlide');
                    selector.find('li').css({
                        width: $(window).width()
                    });
                    selector.find('li > img').css({
                        float: 'none',
                        width: oWidth
                    });
                },
                after: function(curr, next, opts) {
                    var index = opts.currSlide;
                    $(prv)[index === 0 ? 'hide' : 'show']();
                    $(nxt)[index === opts.slideCount - 1 ? 'hide' : 'show']();
                    selector.find('li:visible').addClass("activeSlide");
                    selector.find('li').css({
                        width: $(window).width()
                    });
                    selector.find('li > img').css({
                        float: 'none',
                        width: oWidth
                    });
                }
            });
        },
        hideFullHDIcon: function(opt) {
            var hideElement = $('.fullHD-angleView'),
                feature = opt;
            if (feature == "trim" || feature == "extras") {
                hideElement.addClass('visuallyhidden');
            } else {
                this.callImageToDisplay();
                hideElement.removeClass('visuallyhidden');
            }
        },
        OpenFullHDOverlay: function(e) {
            var $this = $(e.target),
                selector = $('#imgWrap'),
                currIndex = parseInt($this.attr('data-angle'));
            if (selector.length) {
                selector.find('ul').cycle(currIndex);
                $('#fullHD-angle-list').delay(450).fadeIn();
            } else {
                this.createOverlay();
            }
            $('html').css({
                'overflow': 'hidden'
            });
        },
        onResize: function() {
            var oHeight = Math.max($(window).height()),
                oWidth = $(window).width(),
                slideSelector = $('#imgWrap');
            $('#fullHD-angle-list').css({
                height: $(window).height()
            });
            slideSelector.find('ul').css({
                width: oWidth,
                height: oHeight
            });
            slideSelector.find('li').css({
                width: oWidth,
                height: oHeight
            });
            slideSelector.find('li img').css({
                width: oWidth,
                height: oHeight
            });
        },
        closeFullHDOverlay: function(e) {
            e.preventDefault();
            var $el = this.options.el,
                currIdx = parseInt($el.find('.fullHD-angleView').attr('data-angle')),
                $container = $('#fullHD-angle-list'),
                $exObj = (bp.context.ImageSetHD[0].EXTERIOR).length,
                $idx = 1 + currIdx;
            $el.find('.fullHD-angleView').attr('data-angle', currIdx);
            if ($idx <= $exObj) {
                showAngleImage($idx, 'EXTERIOR');
            }
            if ($idx > $exObj) {
                showAngleImage($idx - $exObj, 'INTERIOR');
            }
            $container.fadeOut();
            $('html').css({
                'overflow': 'auto'
            });
        },
        callImageToDisplay: function() {
            this.currIdx = parseInt($('.fullHD-angleView').attr('data-angle')), this.$exObj = (bp.context.ImageSetHD[0].EXTERIOR).length, this.$intObj = (bp.context.ImageSetHD[1].INTERIOR).length, this.$idx = 1 + this.currIdx;
            if (this.$idx <= this.$exObj) {
                showAngleImage(this.$idx, 'EXTERIOR');
            }
            if (this.$idx > this.$exObj) {
                showAngleImage(this.$idx - this.$exObj, 'INTERIOR');
            }
        }
    };
}();
! function() {
    EP2.reInitializeHDimages = function() {
        $('#fullHD-angle-list').remove();
        var hdImageDataObj = {}, isPanel = $('#configPanelTitle .mediumHeading').text(),
            hasHDdata = $('#bpAxisView .activeNameplate').attr('data-showhd'),
            gs = EP2.GlobalHDSwitch;
        if (gs === true) {
            if (hasHDdata == "true" && (bp.context.ImageSetHD !== (null || undefined || {}))) {
                var exObj = bp.context.ImageSetHD[0].EXTERIOR;
                var intObj = bp.context.ImageSetHD[1].INTERIOR;
                if (exObj !== (null || undefined || {}) || intObj !== (null || undefined || {})) {
                    hdImageDataObj = $.merge($.merge([], exObj), intObj);
                }
                hdImages = new EP2.angleViewer({
                    globalSwitch: EP2.GlobalHDSwitch,
                    hasHD: hasHDdata,
                    staticData: hdImageDataObj,
                    whichPanel: isPanel
                });
            }
        } else {}
    };
}();
! function(root) {
    var readMoreTxt, readLessTxt;
    if ((typeof readMore !== 'undefined') && (typeof readLess !== 'undefined')) {
        readMoreTxt = readMore;
        readLessTxt = readLess;
    }
    var defaults = {
        selector: '.details',
        animationSpeed: 500,
        linkTextClosed: '<a href="#" class="down-arrow" ><span>' + readMoreTxt + '</span></a>',
        linkTextOpen: '<a href="#" class="up-arrow"><span>' + readLessTxt + '</span></a>'
    };
    var RevealingPanelManager = function(options) {
        this.options = $.extend({}, defaults, options);
        this.init();
    };
    RevealingPanelManager.prototype = {
        init: function() {
            this.panels = $(this.options.selector);
            var len = this.panels.length;
            while (len--) {
                this.measurePanel($(this.panels[len]));
            }
        },
        measurePanel: function(panel) {
            var readMoreLink, panelOptions = panel.data('options'),
                panelContent = panel.find('.panel-content'),
                panelContentHeight = panelContent.height(),
                panelContentWrapper = panel.find('.panel-content-wrapper'),
                panelContentWrapperHeight = panelContentWrapper.height();
            if (panelContentHeight > panelContentWrapperHeight) {
                readMoreLink = $('<div class="more"><a href="#" class="down-arrow" ><span>' + readMoreTxt + '</span></a></div>');
                readMoreLink.on('click', this.onReadMore(panelContentWrapper, panelContentWrapperHeight, panelContentHeight));
                panel.append(readMoreLink);
            }
        },
        onReadMore: function(panelWrapper, origHeight, contentHeight) {
            var opts = this.options;
            return function(e) {
                e.stopPropagation();
                e.preventDefault();
                var newHeight = panelWrapper.height() > origHeight ? origHeight : contentHeight;
                $(this).html(newHeight > origHeight ? opts.linkTextOpen : opts.linkTextClosed);
                panelWrapper.stop().animate({
                    height: newHeight
                }, opts.animationSpeed);
            }
        }
    };
    root.RevealingPanelManager = function(options) {
        return new RevealingPanelManager(options);
    };
    $('div.dropdown').insertAfter('section.nameplate-vehicle-wrapper');
    var contentHeightObj, contentHeight, DropdownWrapper, WrapperHeight, ListHeight, multiplier, tmpHeight = 0,
        tmpDisH, HeightLmt, FixedLiHeight = 40,
        containerHeight;
    $(".dropdown .dropdown-heading").click(function(e) {
        e.preventDefault();
        e.stopPropagation();
        $(".down-scroll > a").removeClass('disable-arrow').addClass('arrow');
        contentHeightObj = $('.dropdown-container').find('ul');
        contentHeight = contentHeightObj.height();
        DropdownWrapper = $('.dropdown-wrapper');
        WrapperHeight = DropdownWrapper.height();
        tmpHeight = 0;
        $(".dropdown .dropdown-container").slideToggle(500, function() {
            $('.dropdown-wrapper > ul').css('margin-top', '0px');
        });
        if ($('.dropdown-container li').length > 8) {
            $(".dropdown-container .down-scroll").show();
            $(".dropdown-container .up-scroll").show();
        }
        if (tmpHeight <= 0) {
            $(".up-scroll > a").removeClass('arrow').addClass('disable-arrow');
        }
    });
    $(".down-scroll").click(function(e) {
        e.preventDefault();
        e.stopPropagation();
        ListHeight = $('.dropdown-wrapper > ul').height();
        WrapperHeight = DropdownWrapper.height();
        multiplier = ListHeight / WrapperHeight;
        if (multiplier > 1) {
            HeightLmt = tmpHeight + WrapperHeight;
            if (HeightLmt < ListHeight) {
                tmpHeight += FixedLiHeight;
                $('.dropdown-wrapper > ul').animate({
                    "marginTop": "-=" + FixedLiHeight + "px"
                }, "fast");
            }
        }
        tmpDisH = HeightLmt + FixedLiHeight;
        if (tmpDisH >= ListHeight) {
            $(".down-scroll > a").removeClass('arrow').addClass('disable-arrow');
        }
        if (tmpHeight > 0) {
            $(".up-scroll > a").removeClass('disable-arrow').addClass('arrow');
        }
    });
    $(".up-scroll").click(function(e) {
        e.preventDefault();
        e.stopPropagation();
        if (tmpHeight > 0) {
            $(".down-scroll > a").removeClass('disable-arrow').addClass('arrow');
            $('.dropdown-wrapper > ul').animate({
                "marginTop": "+=" + FixedLiHeight + "px"
            }, "fast");
            tmpHeight -= FixedLiHeight;
        }
        if (tmpHeight <= 0) {
            $(".up-scroll > a").removeClass('arrow').addClass('disable-arrow');
        }
    });
    $(document).click(function(event) {
        $(".dropdown .dropdown-container").slideUp(500, function() {
            $('.dropdown-wrapper > ul').css('margin-top', '0px');
        });
    });
    $('#promoCarousel').show();
    (function(d, s, id) {
        var getfbLocale = $('.fblike-locale').html();
        if (getfbLocale !== undefined) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s);
            js.id = id;
            js.src = "//connect.facebook.net/" + getfbLocale + "/all.js#xfbml=1";
            fjs.parentNode.insertBefore(js, fjs);
        }
    }(document, 'script', 'facebook-jssdk'));
    createCookie = function(name, value, days) {
        if (days) {
            var date = new Date();
            date.setTime(date.getTime() + (days * 60 * 1000));
            var expires = "; expires=" + date.toGMTString();
        } else var expires = "";
        document.cookie = name + "=" + value + expires + "; path=/";
    }
    readCookie = function(name) {
        var nameEQ = name + "=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
        }
        return null;
    }
    defaultOverlay = function(overlayContent) {
        EP2.isOverlayOpened = true;
        var cUrl = overlayContent["0"],
            overlayHeight = overlayContent["1"],
            overlayWidth = overlayContent["2"],
            overlayType = overlayContent["3"],
            overlayDelay = overlayContent["4"];
        if (overlayType == "externalURL") {
            var injectHTML = '<iframe style="border:0px" src="' + cUrl + '" width="' + overlayWidth + '" height="' + overlayHeight + '"></iframe>';
            overlayer.open({
                content: injectHTML,
                height: overlayHeight,
                width: overlayWidth
            });
        } else {
            $.ajax({
                type: 'get',
                url: cUrl,
                dataType: 'html',
                success: function(html) {
                    var injectHTML = $(html);
                    overlayer.open({
                        content: injectHTML,
                        height: overlayHeight,
                        width: overlayWidth
                    });
                }
            });
        }
    }
    EP2.isOverlayOpened = false;
    if (typeof overlayContent !== 'undefined') {
        if (!readCookie("sessionOverlay")) {
            defaultOverlay(overlayContent);
            createCookie("sessionOverlay", true, overlayContent["4"]);
        }
    }
    if (typeof overlayDelayContent !== 'undefined') {
        $(window).bind("load", function() {
            setTimeout(function() {
                if (!EP2.isOverlayOpened) {
                    defaultOverlay(overlayDelayContent);
                }
            }, overlayDelayContent[4]);
        });
    }
    var $cvbuildprice = $('#cvbuildprice');
    if ($cvbuildprice.length != 0) {
        $(".searchBox").css('display', 'none');
    }
}(EP2);
var panelManager = new EP2.RevealingPanelManager();
EP2 = $.extend({}, EP2, {
    nameplateCarMenu: function() {
        var carMenuLink = $('.subMenu li a');
        carMenuLink.on('click', function() {
            localStorage.removeItem('userSelection');
            localStorage.removeItem('userSelectionImg');
        });
    },
    updateUserSelection: function() {
        var userSelection = {};
        var bodyStyleIdx = $('.body-styles li.selected').data('idx');
        var colorIdx = $('.colour-selector li.selected').data('idx');
        var exteriorIdx = $('.exterior-image li.selected').data('idx');
        var imageholder = $('.image-holder img').attr('src');
        userSelection.bodyStyleOptIdx = bodyStyleIdx;
        userSelection.colorIdx = colorIdx;
        userSelection.exteriorAngleIdx = exteriorIdx;
        userSelection.selectedImageAngle = imageholder;
        localStorage.setItem('userSelection', JSON.stringify(userSelection));
    },
    fromPriceTooltip: function() {
        var p = $('.name-plate-text .price'),
            exVAT = p.attr('title'),
            incVAT = p.text();
        if (exVAT !== undefined) {
            exVAT = exVAT.replace(/\*/g, '');
        }
        if (incVAT !== undefined) {
            incVAT = incVAT.replace(/\*/g, '');
        }
        tooltip = $('<span class="tooltip" style="display: none;"><span class="tooltip-txt">' + exVAT + '<br>' + incVAT + '</span><span class="arrow left"></span></span>');
        if (p.find('tooltip').length == 0) {
            p.append(tooltip);
            tooltipPos = p.find('.tooltip').width() + 22;
            tooltipPos = p.find('.tooltip').css({
                right: -(tooltipPos) + 'px'
            });
        }
        p.hover(function() {
            var $this = $(this);
            $this.removeAttr('title');
            $this.css({
                cursor: 'pointer'
            }).find('.tooltip').stop(true).fadeIn('fast');
        }, function() {
            var $this = $(this);
            $this.find('.tooltip').stop(true).fadeOut('fast');
        });
    },
    initializeMidpageTabs: function() {
        $('#primaryTabs li a').on('click', function () {
            EP2.updateUserSelection
        });
        $('.sub-nav li a').on('click', function(e) {
            e.preventDefault();
            EP2.updateUserSelection();
            window.location.href = $(this).attr('href') + "#primaryTabs";
        });
        var primaryTabsize = $('#primaryTabs li').length,
            paddingSet = "5px 8px";
        if (primaryTabsize <= 1) {
            $('#primaryTabs').remove();
        }
        var moreTab = $('#primaryTabs li a[id]');
        moreTab.map(function() {
            var $this = $(this);
            if ($(this).length) {
                var moreTabLink = $this.attr('id');
                $('#' + moreTabLink).on('click', function(e) {
                    e.preventDefault();
                    $('#primaryTabs li.selected').removeClass('selected');
                    $(this).parent('li').addClass('selected');
                    $('#primary-tab-content > .sub-nav').css('display', 'block');
                });
            }
        });
        if ($('#tabs').length) {
            var innerTabsize = $('#inner-tabs li').length;
            if (innerTabsize <= 1) {
                $('#inner-tabs').remove();
                $('.innertab-wrapper .tab-content').css('display', 'block');
                return
            } else {
                EP2.innerTabsContent(paddingSet);
            }
        }
    },
    innerTabsContent: function(pix) {
        var maxWidth = 615;
        var getTabWidth = $("#inner-tabs").width();
        var tabLinks = $("#inner-tabs li a");
        $('#inner-tabs li:first').addClass('selected');
        $('#tabs').tabbifiedContent({
            navEle: '#inner-tabs li a',
            tabPanelSelector: '.innertab-wrapper .tab-content',
            selectedTabLink: 0,
            tabNavEvent: 'click',
            afterTabSelected: function() {
                $('#inner-tabs li a').on('click', function(e) {
                    e.preventDefault();
                    var selectedTab = $('#inner-tabs li.selected');
                    $(selectedTab).removeClass('selected');
                    $(this).parent('li').addClass('selected');
                });
                if (getTabWidth < maxWidth) {
                    tabLinks.css({
                        padding: pix,
                        width: "auto"
                    });
                } else {
                    $('body').addClass('jsTab');
                }
            }
        });
    }
});
! function($, window, document, undefined) {
    EP2.dynTabContent = function() {
        this.init();
    };
    EP2.dynTabContent.prototype = {
        init: function() {
            this.moveElementAround();
            this.primaryTabContent();
        },
        moveElementAround: function() {
            var subtabs = $('.secondary-tabs .sub-nav');
            $.each(subtabs, function(i, v) {
                $(this).attr('id', 'subtab' + i);
            });
            $('#tabs.nameplate-main-content').append($('.secondary-tabs.tab-content'));
        },
        primaryTabContent: function() {
            var $tabs = $('#primaryTabs.tabs li'),
                $primaryDefaultTab = $('#primaryTabs.tabs li.selected').index();
            $list = "", $tabLen = $tabs.size(), $subtabLen = $('.sub-nav li').size();
            $tabContent = $('#tabs.nameplate-main-content .tab-content').size(), $totalTabContentToCreate = $tabLen - $tabContent, $backtotopsiteTerm = $('.nameplate-tab-content').attr('data-siteterm-backtotop'), paddingSet = "2px 4px", staticTabEle = $('#tabs.nameplate-main-content').html(), btfWrapper = this.btfContentStyle();
            if ($tabs.length) {
                if ($tabLen === 1) {
                    $('#primaryTabs').parent().css('opacity', 0);
                    $('#primaryTabs').css('opacity', 0);
                }
                if ($tabLen > 1) {
                    $('#primaryTabs').css('opacity', 1);
                }
                if ($totalTabContentToCreate !== 0) {
                    for (var i = 0; i < $totalTabContentToCreate; i++) {
                        $list += '<div class="tab-content"></div>';
                    };
                }
                $('#tabs.nameplate-main-content:first').append($list);
                $('#primary-tab-content').tabbifiedContent({
                    navEle: '#primaryTabs.tabs li a',
                    tabPanelSelector: '#tabs.nameplate-main-content > .tab-content',
                    selectedTabLink: $primaryDefaultTab,
                    //tabNavEvent: 'click',
                    hiAjax: {
                        'type': 'GET',
                        'enable': false,
                        'targetEle': '.tab-content',
                        'page': 'xaxis-detailed'
                    },
                    backtoTopSiteTerm: $backtotopsiteTerm,
                    animateTo: 540,
                    dockTabMenu: true,
                    dockTabEleSelector: '.tab-wrapper:first',
                    afterTabSelected: function(navEle) {
                        $('#primaryTabs.tabs li a').on('click', function(e) {
                            e.preventDefault();
                            var selectedTab = $('#primaryTabs.tabs li.selected');
                            $(selectedTab).removeClass('selected');
                            $(this).closest('li').addClass('selected');
                            if ($(this).closest('.tab-wrapper').hasClass('sticky-tab-menu') == true) {
                                $('.sub-nav.open').addClass('sticky-sub-tab');
                            }
                            location.href = $('a', selectedTab)[0].href;
                        });
                    }
                });
                if ($subtabLen === 1) {
                    $('.innertab-wrapper').css('padding-top', 20);
                    $('.secondary-tabs.tab-content:visible').find('.sub-nav').remove();
                    $('.secondary-tabs.tab-content:visible').css('display', 'block');
                } else if ($tabLen === 1 && $subtabLen > 1) {
                    $('#primaryTabs').parent().css('opacity', 1);
                    $('#primaryTabs').css('opacity', 1);
                }
            }
            this.ajaxSubTabs();
        },
        ajaxSubTabs: function() {
            this.btfContentStyle();
            var selectedPanelidx = $('.secondary-tab-content:visible').attr('data-tabpanel-idx');
            $('.tab-content').tabbifiedContent({
                navEle: '.sub-nav li a',
                tabPanelSelector: '.tab-content .innertab-wrapper .secondary-tab-content',
                selectedTabLink: 0,
                tabNavEvent: 'click',
                afterTabSelected: function(navEle) {
                    var thisElem = $(navEle);
                    $('#primary-tab-content0').css('display', 'block');
                    $('.tab-content:empty').remove();
                    if ($('.secondary-tabs.tab-content:visible').find('.sub-nav li').length === 1) {
                        console.log("hide the secondary tab");
                        $('.secondary-tabs.tab-content:visible').find('.sub-nav').remove();
                        $('.secondary-tabs.tab-content:visible').find('.innertab-wrapper').css('padding-top', 20);
                    }
                    $('.secondary-tabs.tab-content').each(function() {
                        if ($(this).find('.sub-nav li').length === 1) {
                            console.log("hide the secondary tab");
                            $(this).find('.sub-nav').remove();
                            $(this).find('.innertab-wrapper').css('padding-top', 20);
                        }
                    });
                    $('.sub-nav li a').on('click', function(e) {
                        e.preventDefault();
                    });
                    $('#tabs.nameplate-main-content .tab-content').delay(250).animate({
                        opacity: 1
                    }, 250);
                }
            });
        },
        btfContentStyle: function() {
            var introHdr = $('.secondary-tab-content .intro-header > .bigHeading'),
                btfIggWrapper = $('#tabs .igg-wrapper'),
                btfBtoWrapper = $('#tabs .bto-wrapper');
            if (introHdr.is(':empty')) {
                introHdr.css('border', 0);
                $('.secondary-tab-content .intro-header').find('.highlighter').remove();
            }
            if (btfIggWrapper.length) {
                btfIggWrapper.closest('.secondary-tab-content').css({
                    margin: '0 auto',
                    width: '617px'
                });
                btfBtoWrapper.css({
                    'padding-left': '20px'
                });
            }
        }
    };
}(jQuery);
jQuery(function($) {
    var isDynamicTabContent = $('.nameplate-tab-content').attr('data-dynamic-tabcontent'),
        paddingSet = "5px 8px";
    if (isDynamicTabContent === "true") {
        $('.nameplate-tab-content[data-dynamic-tabcontent="true"]').addClass('mid-page-content');
        var xaxisNp = new EP2.dynTabContent();
        return xaxisNp;
    } else {
        EP2.nameplateCarMenu();
        EP2.initializeMidpageTabs(paddingSet);
    }
});
this.Handlebars = {};
(function(Handlebars) {
    Handlebars.VERSION = "1.0.rc.1";
    Handlebars.helpers = {};
    Handlebars.partials = {};
    Handlebars.registerHelper = function(name, fn, inverse) {
        if (inverse) {
            fn.not = inverse;
        }
        this.helpers[name] = fn;
    };
    Handlebars.registerPartial = function(name, str) {
        this.partials[name] = str;
    };
    Handlebars.registerHelper('helperMissing', function(arg) {
        if (arguments.length === 2) {
            return undefined;
        } else {
            throw new Error("Could not find property '" + arg + "'");
        }
    });
    var toString = Object.prototype.toString,
        functionType = "[object Function]";
    Handlebars.registerHelper('blockHelperMissing', function(context, options) {
        var inverse = options.inverse || function() {}, fn = options.fn;
        var ret = "";
        var type = toString.call(context);
        if (type === functionType) {
            context = context.call(this);
        }
        if (context === true) {
            return fn(this);
        } else if (context === false || context == null) {
            return inverse(this);
        } else if (type === "[object Array]") {
            if (context.length > 0) {
                return Handlebars.helpers.each(context, options);
            } else {
                return inverse(this);
            }
        } else {
            return fn(context);
        }
    });
    Handlebars.K = function() {};
    Handlebars.createFrame = Object.create || function(object) {
        Handlebars.K.prototype = object;
        var obj = new Handlebars.K();
        Handlebars.K.prototype = null;
        return obj;
    };
    Handlebars.registerHelper('each', function(context, options) {
        var fn = options.fn,
            inverse = options.inverse;
        var ret = "",
            data;
        if (options.data) {
            data = Handlebars.createFrame(options.data);
        }
        if (context && context.length > 0) {
            for (var i = 0, j = context.length; i < j; i++) {
                if (data) {
                    data.index = i;
                }
                ret = ret + fn(context[i], {
                    data: data
                });
            }
        } else {
            ret = inverse(this);
        }
        return ret;
    });
    Handlebars.registerHelper('if', function(context, options) {
        var type = toString.call(context);
        if (type === functionType) {
            context = context.call(this);
        }
        if (!context || Handlebars.Utils.isEmpty(context)) {
            return options.inverse(this);
        } else {
            return options.fn(this);
        }
    });
    Handlebars.registerHelper('unless', function(context, options) {
        var fn = options.fn,
            inverse = options.inverse;
        options.fn = inverse;
        options.inverse = fn;
        return Handlebars.helpers['if'].call(this, context, options);
    });
    Handlebars.registerHelper('with', function(context, options) {
        return options.fn(context);
    });
    Handlebars.registerHelper('log', function(context) {
        Handlebars.log(context);
    });
}(this.Handlebars));;
var handlebars = (function() {
    var parser = {
        trace: function trace() {},
        yy: {},
        symbols_: {
            "error": 2,
            "root": 3,
            "program": 4,
            "EOF": 5,
            "statements": 6,
            "simpleInverse": 7,
            "statement": 8,
            "openInverse": 9,
            "closeBlock": 10,
            "openBlock": 11,
            "mustache": 12,
            "partial": 13,
            "CONTENT": 14,
            "COMMENT": 15,
            "OPEN_BLOCK": 16,
            "inMustache": 17,
            "CLOSE": 18,
            "OPEN_INVERSE": 19,
            "OPEN_ENDBLOCK": 20,
            "path": 21,
            "OPEN": 22,
            "OPEN_UNESCAPED": 23,
            "OPEN_PARTIAL": 24,
            "params": 25,
            "hash": 26,
            "DATA": 27,
            "param": 28,
            "STRING": 29,
            "INTEGER": 30,
            "BOOLEAN": 31,
            "hashSegments": 32,
            "hashSegment": 33,
            "ID": 34,
            "EQUALS": 35,
            "pathSegments": 36,
            "SEP": 37,
            "$accept": 0,
            "$end": 1
        },
        terminals_: {
            2: "error",
            5: "EOF",
            14: "CONTENT",
            15: "COMMENT",
            16: "OPEN_BLOCK",
            18: "CLOSE",
            19: "OPEN_INVERSE",
            20: "OPEN_ENDBLOCK",
            22: "OPEN",
            23: "OPEN_UNESCAPED",
            24: "OPEN_PARTIAL",
            27: "DATA",
            29: "STRING",
            30: "INTEGER",
            31: "BOOLEAN",
            34: "ID",
            35: "EQUALS",
            37: "SEP"
        },
        productions_: [0, [3, 2],
            [4, 3],
            [4, 1],
            [4, 0],
            [6, 1],
            [6, 2],
            [8, 3],
            [8, 3],
            [8, 1],
            [8, 1],
            [8, 1],
            [8, 1],
            [11, 3],
            [9, 3],
            [10, 3],
            [12, 3],
            [12, 3],
            [13, 3],
            [13, 4],
            [7, 2],
            [17, 3],
            [17, 2],
            [17, 2],
            [17, 1],
            [17, 1],
            [25, 2],
            [25, 1],
            [28, 1],
            [28, 1],
            [28, 1],
            [28, 1],
            [28, 1],
            [26, 1],
            [32, 2],
            [32, 1],
            [33, 3],
            [33, 3],
            [33, 3],
            [33, 3],
            [33, 3],
            [21, 1],
            [36, 3],
            [36, 1]
        ],
        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {
            var $0 = $$.length - 1;
            switch (yystate) {
                case 1:
                    return $$[$0 - 1];
                    break;
                case 2:
                    this.$ = new yy.ProgramNode($$[$0 - 2], $$[$0]);
                    break;
                case 3:
                    this.$ = new yy.ProgramNode($$[$0]);
                    break;
                case 4:
                    this.$ = new yy.ProgramNode([]);
                    break;
                case 5:
                    this.$ = [$$[$0]];
                    break;
                case 6:
                    $$[$0 - 1].push($$[$0]);
                    this.$ = $$[$0 - 1];
                    break;
                case 7:
                    this.$ = new yy.BlockNode($$[$0 - 2], $$[$0 - 1].inverse, $$[$0 - 1], $$[$0]);
                    break;
                case 8:
                    this.$ = new yy.BlockNode($$[$0 - 2], $$[$0 - 1], $$[$0 - 1].inverse, $$[$0]);
                    break;
                case 9:
                    this.$ = $$[$0];
                    break;
                case 10:
                    this.$ = $$[$0];
                    break;
                case 11:
                    this.$ = new yy.ContentNode($$[$0]);
                    break;
                case 12:
                    this.$ = new yy.CommentNode($$[$0]);
                    break;
                case 13:
                    this.$ = new yy.MustacheNode($$[$0 - 1][0], $$[$0 - 1][1]);
                    break;
                case 14:
                    this.$ = new yy.MustacheNode($$[$0 - 1][0], $$[$0 - 1][1]);
                    break;
                case 15:
                    this.$ = $$[$0 - 1];
                    break;
                case 16:
                    this.$ = new yy.MustacheNode($$[$0 - 1][0], $$[$0 - 1][1]);
                    break;
                case 17:
                    this.$ = new yy.MustacheNode($$[$0 - 1][0], $$[$0 - 1][1], true);
                    break;
                case 18:
                    this.$ = new yy.PartialNode($$[$0 - 1]);
                    break;
                case 19:
                    this.$ = new yy.PartialNode($$[$0 - 2], $$[$0 - 1]);
                    break;
                case 20:
                    break;
                case 21:
                    this.$ = [
                        [$$[$0 - 2]].concat($$[$0 - 1]), $$[$0]
                    ];
                    break;
                case 22:
                    this.$ = [
                        [$$[$0 - 1]].concat($$[$0]), null
                    ];
                    break;
                case 23:
                    this.$ = [
                        [$$[$0 - 1]], $$[$0]
                    ];
                    break;
                case 24:
                    this.$ = [
                        [$$[$0]], null
                    ];
                    break;
                case 25:
                    this.$ = [
                        [new yy.DataNode($$[$0])], null
                    ];
                    break;
                case 26:
                    $$[$0 - 1].push($$[$0]);
                    this.$ = $$[$0 - 1];
                    break;
                case 27:
                    this.$ = [$$[$0]];
                    break;
                case 28:
                    this.$ = $$[$0];
                    break;
                case 29:
                    this.$ = new yy.StringNode($$[$0]);
                    break;
                case 30:
                    this.$ = new yy.IntegerNode($$[$0]);
                    break;
                case 31:
                    this.$ = new yy.BooleanNode($$[$0]);
                    break;
                case 32:
                    this.$ = new yy.DataNode($$[$0]);
                    break;
                case 33:
                    this.$ = new yy.HashNode($$[$0]);
                    break;
                case 34:
                    $$[$0 - 1].push($$[$0]);
                    this.$ = $$[$0 - 1];
                    break;
                case 35:
                    this.$ = [$$[$0]];
                    break;
                case 36:
                    this.$ = [$$[$0 - 2], $$[$0]];
                    break;
                case 37:
                    this.$ = [$$[$0 - 2], new yy.StringNode($$[$0])];
                    break;
                case 38:
                    this.$ = [$$[$0 - 2], new yy.IntegerNode($$[$0])];
                    break;
                case 39:
                    this.$ = [$$[$0 - 2], new yy.BooleanNode($$[$0])];
                    break;
                case 40:
                    this.$ = [$$[$0 - 2], new yy.DataNode($$[$0])];
                    break;
                case 41:
                    this.$ = new yy.IdNode($$[$0]);
                    break;
                case 42:
                    $$[$0 - 2].push($$[$0]);
                    this.$ = $$[$0 - 2];
                    break;
                case 43:
                    this.$ = [$$[$0]];
                    break;
            }
        },
        table: [{
            3: 1,
            4: 2,
            5: [2, 4],
            6: 3,
            8: 4,
            9: 5,
            11: 6,
            12: 7,
            13: 8,
            14: [1, 9],
            15: [1, 10],
            16: [1, 12],
            19: [1, 11],
            22: [1, 13],
            23: [1, 14],
            24: [1, 15]
        }, {
            1: [3]
        }, {
            5: [1, 16]
        }, {
            5: [2, 3],
            7: 17,
            8: 18,
            9: 5,
            11: 6,
            12: 7,
            13: 8,
            14: [1, 9],
            15: [1, 10],
            16: [1, 12],
            19: [1, 19],
            20: [2, 3],
            22: [1, 13],
            23: [1, 14],
            24: [1, 15]
        }, {
            5: [2, 5],
            14: [2, 5],
            15: [2, 5],
            16: [2, 5],
            19: [2, 5],
            20: [2, 5],
            22: [2, 5],
            23: [2, 5],
            24: [2, 5]
        }, {
            4: 20,
            6: 3,
            8: 4,
            9: 5,
            11: 6,
            12: 7,
            13: 8,
            14: [1, 9],
            15: [1, 10],
            16: [1, 12],
            19: [1, 11],
            20: [2, 4],
            22: [1, 13],
            23: [1, 14],
            24: [1, 15]
        }, {
            4: 21,
            6: 3,
            8: 4,
            9: 5,
            11: 6,
            12: 7,
            13: 8,
            14: [1, 9],
            15: [1, 10],
            16: [1, 12],
            19: [1, 11],
            20: [2, 4],
            22: [1, 13],
            23: [1, 14],
            24: [1, 15]
        }, {
            5: [2, 9],
            14: [2, 9],
            15: [2, 9],
            16: [2, 9],
            19: [2, 9],
            20: [2, 9],
            22: [2, 9],
            23: [2, 9],
            24: [2, 9]
        }, {
            5: [2, 10],
            14: [2, 10],
            15: [2, 10],
            16: [2, 10],
            19: [2, 10],
            20: [2, 10],
            22: [2, 10],
            23: [2, 10],
            24: [2, 10]
        }, {
            5: [2, 11],
            14: [2, 11],
            15: [2, 11],
            16: [2, 11],
            19: [2, 11],
            20: [2, 11],
            22: [2, 11],
            23: [2, 11],
            24: [2, 11]
        }, {
            5: [2, 12],
            14: [2, 12],
            15: [2, 12],
            16: [2, 12],
            19: [2, 12],
            20: [2, 12],
            22: [2, 12],
            23: [2, 12],
            24: [2, 12]
        }, {
            17: 22,
            21: 23,
            27: [1, 24],
            34: [1, 26],
            36: 25
        }, {
            17: 27,
            21: 23,
            27: [1, 24],
            34: [1, 26],
            36: 25
        }, {
            17: 28,
            21: 23,
            27: [1, 24],
            34: [1, 26],
            36: 25
        }, {
            17: 29,
            21: 23,
            27: [1, 24],
            34: [1, 26],
            36: 25
        }, {
            21: 30,
            34: [1, 26],
            36: 25
        }, {
            1: [2, 1]
        }, {
            6: 31,
            8: 4,
            9: 5,
            11: 6,
            12: 7,
            13: 8,
            14: [1, 9],
            15: [1, 10],
            16: [1, 12],
            19: [1, 11],
            22: [1, 13],
            23: [1, 14],
            24: [1, 15]
        }, {
            5: [2, 6],
            14: [2, 6],
            15: [2, 6],
            16: [2, 6],
            19: [2, 6],
            20: [2, 6],
            22: [2, 6],
            23: [2, 6],
            24: [2, 6]
        }, {
            17: 22,
            18: [1, 32],
            21: 23,
            27: [1, 24],
            34: [1, 26],
            36: 25
        }, {
            10: 33,
            20: [1, 34]
        }, {
            10: 35,
            20: [1, 34]
        }, {
            18: [1, 36]
        }, {
            18: [2, 24],
            21: 41,
            25: 37,
            26: 38,
            27: [1, 45],
            28: 39,
            29: [1, 42],
            30: [1, 43],
            31: [1, 44],
            32: 40,
            33: 46,
            34: [1, 47],
            36: 25
        }, {
            18: [2, 25]
        }, {
            18: [2, 41],
            27: [2, 41],
            29: [2, 41],
            30: [2, 41],
            31: [2, 41],
            34: [2, 41],
            37: [1, 48]
        }, {
            18: [2, 43],
            27: [2, 43],
            29: [2, 43],
            30: [2, 43],
            31: [2, 43],
            34: [2, 43],
            37: [2, 43]
        }, {
            18: [1, 49]
        }, {
            18: [1, 50]
        }, {
            18: [1, 51]
        }, {
            18: [1, 52],
            21: 53,
            34: [1, 26],
            36: 25
        }, {
            5: [2, 2],
            8: 18,
            9: 5,
            11: 6,
            12: 7,
            13: 8,
            14: [1, 9],
            15: [1, 10],
            16: [1, 12],
            19: [1, 11],
            20: [2, 2],
            22: [1, 13],
            23: [1, 14],
            24: [1, 15]
        }, {
            14: [2, 20],
            15: [2, 20],
            16: [2, 20],
            19: [2, 20],
            22: [2, 20],
            23: [2, 20],
            24: [2, 20]
        }, {
            5: [2, 7],
            14: [2, 7],
            15: [2, 7],
            16: [2, 7],
            19: [2, 7],
            20: [2, 7],
            22: [2, 7],
            23: [2, 7],
            24: [2, 7]
        }, {
            21: 54,
            34: [1, 26],
            36: 25
        }, {
            5: [2, 8],
            14: [2, 8],
            15: [2, 8],
            16: [2, 8],
            19: [2, 8],
            20: [2, 8],
            22: [2, 8],
            23: [2, 8],
            24: [2, 8]
        }, {
            14: [2, 14],
            15: [2, 14],
            16: [2, 14],
            19: [2, 14],
            20: [2, 14],
            22: [2, 14],
            23: [2, 14],
            24: [2, 14]
        }, {
            18: [2, 22],
            21: 41,
            26: 55,
            27: [1, 45],
            28: 56,
            29: [1, 42],
            30: [1, 43],
            31: [1, 44],
            32: 40,
            33: 46,
            34: [1, 47],
            36: 25
        }, {
            18: [2, 23]
        }, {
            18: [2, 27],
            27: [2, 27],
            29: [2, 27],
            30: [2, 27],
            31: [2, 27],
            34: [2, 27]
        }, {
            18: [2, 33],
            33: 57,
            34: [1, 58]
        }, {
            18: [2, 28],
            27: [2, 28],
            29: [2, 28],
            30: [2, 28],
            31: [2, 28],
            34: [2, 28]
        }, {
            18: [2, 29],
            27: [2, 29],
            29: [2, 29],
            30: [2, 29],
            31: [2, 29],
            34: [2, 29]
        }, {
            18: [2, 30],
            27: [2, 30],
            29: [2, 30],
            30: [2, 30],
            31: [2, 30],
            34: [2, 30]
        }, {
            18: [2, 31],
            27: [2, 31],
            29: [2, 31],
            30: [2, 31],
            31: [2, 31],
            34: [2, 31]
        }, {
            18: [2, 32],
            27: [2, 32],
            29: [2, 32],
            30: [2, 32],
            31: [2, 32],
            34: [2, 32]
        }, {
            18: [2, 35],
            34: [2, 35]
        }, {
            18: [2, 43],
            27: [2, 43],
            29: [2, 43],
            30: [2, 43],
            31: [2, 43],
            34: [2, 43],
            35: [1, 59],
            37: [2, 43]
        }, {
            34: [1, 60]
        }, {
            14: [2, 13],
            15: [2, 13],
            16: [2, 13],
            19: [2, 13],
            20: [2, 13],
            22: [2, 13],
            23: [2, 13],
            24: [2, 13]
        }, {
            5: [2, 16],
            14: [2, 16],
            15: [2, 16],
            16: [2, 16],
            19: [2, 16],
            20: [2, 16],
            22: [2, 16],
            23: [2, 16],
            24: [2, 16]
        }, {
            5: [2, 17],
            14: [2, 17],
            15: [2, 17],
            16: [2, 17],
            19: [2, 17],
            20: [2, 17],
            22: [2, 17],
            23: [2, 17],
            24: [2, 17]
        }, {
            5: [2, 18],
            14: [2, 18],
            15: [2, 18],
            16: [2, 18],
            19: [2, 18],
            20: [2, 18],
            22: [2, 18],
            23: [2, 18],
            24: [2, 18]
        }, {
            18: [1, 61]
        }, {
            18: [1, 62]
        }, {
            18: [2, 21]
        }, {
            18: [2, 26],
            27: [2, 26],
            29: [2, 26],
            30: [2, 26],
            31: [2, 26],
            34: [2, 26]
        }, {
            18: [2, 34],
            34: [2, 34]
        }, {
            35: [1, 59]
        }, {
            21: 63,
            27: [1, 67],
            29: [1, 64],
            30: [1, 65],
            31: [1, 66],
            34: [1, 26],
            36: 25
        }, {
            18: [2, 42],
            27: [2, 42],
            29: [2, 42],
            30: [2, 42],
            31: [2, 42],
            34: [2, 42],
            37: [2, 42]
        }, {
            5: [2, 19],
            14: [2, 19],
            15: [2, 19],
            16: [2, 19],
            19: [2, 19],
            20: [2, 19],
            22: [2, 19],
            23: [2, 19],
            24: [2, 19]
        }, {
            5: [2, 15],
            14: [2, 15],
            15: [2, 15],
            16: [2, 15],
            19: [2, 15],
            20: [2, 15],
            22: [2, 15],
            23: [2, 15],
            24: [2, 15]
        }, {
            18: [2, 36],
            34: [2, 36]
        }, {
            18: [2, 37],
            34: [2, 37]
        }, {
            18: [2, 38],
            34: [2, 38]
        }, {
            18: [2, 39],
            34: [2, 39]
        }, {
            18: [2, 40],
            34: [2, 40]
        }],
        defaultActions: {
            16: [2, 1],
            24: [2, 25],
            38: [2, 23],
            55: [2, 21]
        },
        parseError: function parseError(str, hash) {
            throw new Error(str);
        },
        parse: function parse(input) {
            var self = this,
                stack = [0],
                vstack = [null],
                lstack = [],
                table = this.table,
                yytext = "",
                yylineno = 0,
                yyleng = 0,
                recovering = 0,
                TERROR = 2,
                EOF = 1;
            this.lexer.setInput(input);
            this.lexer.yy = this.yy;
            this.yy.lexer = this.lexer;
            this.yy.parser = this;
            if (typeof this.lexer.yylloc == "undefined")
                this.lexer.yylloc = {};
            var yyloc = this.lexer.yylloc;
            lstack.push(yyloc);
            var ranges = this.lexer.options && this.lexer.options.ranges;
            if (typeof this.yy.parseError === "function")
                this.parseError = this.yy.parseError;

            function popStack(n) {
                stack.length = stack.length - 2 * n;
                vstack.length = vstack.length - n;
                lstack.length = lstack.length - n;
            }

            function lex() {
                var token;
                token = self.lexer.lex() || 1;
                if (typeof token !== "number") {
                    token = self.symbols_[token] || token;
                }
                return token;
            }
            var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
            while (true) {
                state = stack[stack.length - 1];
                if (this.defaultActions[state]) {
                    action = this.defaultActions[state];
                } else {
                    if (symbol === null || typeof symbol == "undefined") {
                        symbol = lex();
                    }
                    action = table[state] && table[state][symbol];
                }
                if (typeof action === "undefined" || !action.length || !action[0]) {
                    var errStr = "";
                    if (!recovering) {
                        expected = [];
                        for (p in table[state])
                            if (this.terminals_[p] && p > 2) {
                                expected.push("'" + this.terminals_[p] + "'");
                            }
                        if (this.lexer.showPosition) {
                            errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                        } else {
                            errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1 ? "end of input" : "'" + (this.terminals_[symbol] || symbol) + "'");
                        }
                        this.parseError(errStr, {
                            text: this.lexer.match,
                            token: this.terminals_[symbol] || symbol,
                            line: this.lexer.yylineno,
                            loc: yyloc,
                            expected: expected
                        });
                    }
                }
                if (action[0] instanceof Array && action.length > 1) {
                    throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
                }
                switch (action[0]) {
                    case 1:
                        stack.push(symbol);
                        vstack.push(this.lexer.yytext);
                        lstack.push(this.lexer.yylloc);
                        stack.push(action[1]);
                        symbol = null;
                        if (!preErrorSymbol) {
                            yyleng = this.lexer.yyleng;
                            yytext = this.lexer.yytext;
                            yylineno = this.lexer.yylineno;
                            yyloc = this.lexer.yylloc;
                            if (recovering > 0)
                                recovering--;
                        } else {
                            symbol = preErrorSymbol;
                            preErrorSymbol = null;
                        }
                        break;
                    case 2:
                        len = this.productions_[action[1]][1];
                        yyval.$ = vstack[vstack.length - len];
                        yyval._$ = {
                            first_line: lstack[lstack.length - (len || 1)].first_line,
                            last_line: lstack[lstack.length - 1].last_line,
                            first_column: lstack[lstack.length - (len || 1)].first_column,
                            last_column: lstack[lstack.length - 1].last_column
                        };
                        if (ranges) {
                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
                        }
                        r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
                        if (typeof r !== "undefined") {
                            return r;
                        }
                        if (len) {
                            stack = stack.slice(0, -1 * len * 2);
                            vstack = vstack.slice(0, -1 * len);
                            lstack = lstack.slice(0, -1 * len);
                        }
                        stack.push(this.productions_[action[1]][0]);
                        vstack.push(yyval.$);
                        lstack.push(yyval._$);
                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
                        stack.push(newState);
                        break;
                    case 3:
                        return true;
                }
            }
            return true;
        }
    };
    var lexer = (function() {
        var lexer = ({
            EOF: 1,
            parseError: function parseError(str, hash) {
                if (this.yy.parser) {
                    this.yy.parser.parseError(str, hash);
                } else {
                    throw new Error(str);
                }
            },
            setInput: function(input) {
                this._input = input;
                this._more = this._less = this.done = false;
                this.yylineno = this.yyleng = 0;
                this.yytext = this.matched = this.match = '';
                this.conditionStack = ['INITIAL'];
                this.yylloc = {
                    first_line: 1,
                    first_column: 0,
                    last_line: 1,
                    last_column: 0
                };
                if (this.options.ranges) this.yylloc.range = [0, 0];
                this.offset = 0;
                return this;
            },
            input: function() {
                var ch = this._input[0];
                this.yytext += ch;
                this.yyleng++;
                this.offset++;
                this.match += ch;
                this.matched += ch;
                var lines = ch.match(/(?:\r\n?|\n).*/g);
                if (lines) {
                    this.yylineno++;
                    this.yylloc.last_line++;
                } else {
                    this.yylloc.last_column++;
                }
                if (this.options.ranges) this.yylloc.range[1]++;
                this._input = this._input.slice(1);
                return ch;
            },
            unput: function(ch) {
                var len = ch.length;
                var lines = ch.split(/(?:\r\n?|\n)/g);
                this._input = ch + this._input;
                this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);
                this.offset -= len;
                var oldLines = this.match.split(/(?:\r\n?|\n)/g);
                this.match = this.match.substr(0, this.match.length - 1);
                this.matched = this.matched.substr(0, this.matched.length - 1);
                if (lines.length - 1) this.yylineno -= lines.length - 1;
                var r = this.yylloc.range;
                this.yylloc = {
                    first_line: this.yylloc.first_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.first_column,
                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len
                };
                if (this.options.ranges) {
                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];
                }
                return this;
            },
            more: function() {
                this._more = true;
                return this;
            },
            less: function(n) {
                this.unput(this.match.slice(n));
            },
            pastInput: function() {
                var past = this.matched.substr(0, this.matched.length - this.match.length);
                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\n/g, "");
            },
            upcomingInput: function() {
                var next = this.match;
                if (next.length < 20) {
                    next += this._input.substr(0, 20 - next.length);
                }
                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
            },
            showPosition: function() {
                var pre = this.pastInput();
                var c = new Array(pre.length + 1).join("-");
                return pre + this.upcomingInput() + "\n" + c + "^";
            },
            next: function() {
                if (this.done) {
                    return this.EOF;
                }
                if (!this._input) this.done = true;
                var token, match, tempMatch, index, col, lines;
                if (!this._more) {
                    this.yytext = '';
                    this.match = '';
                }
                var rules = this._currentRules();
                for (var i = 0; i < rules.length; i++) {
                    tempMatch = this._input.match(this.rules[rules[i]]);
                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                        match = tempMatch;
                        index = i;
                        if (!this.options.flex) break;
                    }
                }
                if (match) {
                    lines = match[0].match(/(?:\r\n?|\n).*/g);
                    if (lines) this.yylineno += lines.length;
                    this.yylloc = {
                        first_line: this.yylloc.last_line,
                        last_line: this.yylineno + 1,
                        first_column: this.yylloc.last_column,
                        last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length
                    };
                    this.yytext += match[0];
                    this.match += match[0];
                    this.matches = match;
                    this.yyleng = this.yytext.length;
                    if (this.options.ranges) {
                        this.yylloc.range = [this.offset, this.offset += this.yyleng];
                    }
                    this._more = false;
                    this._input = this._input.slice(match[0].length);
                    this.matched += match[0];
                    token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]);
                    if (this.done && this._input) this.done = false;
                    if (token) return token;
                    else return;
                }
                if (this._input === "") {
                    return this.EOF;
                } else {
                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    });
                }
            },
            lex: function lex() {
                var r = this.next();
                if (typeof r !== 'undefined') {
                    return r;
                } else {
                    return this.lex();
                }
            },
            begin: function begin(condition) {
                this.conditionStack.push(condition);
            },
            popState: function popState() {
                return this.conditionStack.pop();
            },
            _currentRules: function _currentRules() {
                return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
            },
            topState: function() {
                return this.conditionStack[this.conditionStack.length - 2];
            },
            pushState: function begin(condition) {
                this.begin(condition);
            }
        });
        lexer.options = {};
        lexer.performAction = function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {
            var YYSTATE = YY_START
            switch ($avoiding_name_collisions) {
                case 0:
                    if (yy_.yytext.slice(-1) !== "\\") this.begin("mu");
                    if (yy_.yytext.slice(-1) === "\\") yy_.yytext = yy_.yytext.substr(0, yy_.yyleng - 1), this.begin("emu");
                    if (yy_.yytext) return 14;
                    break;
                case 1:
                    return 14;
                    break;
                case 2:
                    if (yy_.yytext.slice(-1) !== "\\") this.popState();
                    if (yy_.yytext.slice(-1) === "\\") yy_.yytext = yy_.yytext.substr(0, yy_.yyleng - 1);
                    return 14;
                    break;
                case 3:
                    return 24;
                    break;
                case 4:
                    return 16;
                    break;
                case 5:
                    return 20;
                    break;
                case 6:
                    return 19;
                    break;
                case 7:
                    return 19;
                    break;
                case 8:
                    return 23;
                    break;
                case 9:
                    return 23;
                    break;
                case 10:
                    yy_.yytext = yy_.yytext.substr(3, yy_.yyleng - 5);
                    this.popState();
                    return 15;
                    break;
                case 11:
                    return 22;
                    break;
                case 12:
                    return 35;
                    break;
                case 13:
                    return 34;
                    break;
                case 14:
                    return 34;
                    break;
                case 15:
                    return 37;
                    break;
                case 16:
                    break;
                case 17:
                    this.popState();
                    return 18;
                    break;
                case 18:
                    this.popState();
                    return 18;
                    break;
                case 19:
                    yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2).replace(/\\"/g, '"');
                    return 29;
                    break;
                case 20:
                    yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2).replace(/\\"/g, '"');
                    return 29;
                    break;
                case 21:
                    yy_.yytext = yy_.yytext.substr(1);
                    return 27;
                    break;
                case 22:
                    return 31;
                    break;
                case 23:
                    return 31;
                    break;
                case 24:
                    return 30;
                    break;
                case 25:
                    return 34;
                    break;
                case 26:
                    yy_.yytext = yy_.yytext.substr(1, yy_.yyleng - 2);
                    return 34;
                    break;
                case 27:
                    return 'INVALID';
                    break;
                case 28:
                    return 5;
                    break;
            }
        };
        lexer.rules = [/^(?:[^\x00]*?(?=(\{\{)))/, /^(?:[^\x00]+)/, /^(?:[^\x00]{2,}?(?=(\{\{|$)))/, /^(?:\{\{>)/, /^(?:\{\{#)/, /^(?:\{\{\/)/, /^(?:\{\{\^)/, /^(?:\{\{\s*else\b)/, /^(?:\{\{\{)/, /^(?:\{\{&)/, /^(?:\{\{![\s\S]*?\}\})/, /^(?:\{\{)/, /^(?:=)/, /^(?:\.(?=[} ]))/, /^(?:\.\.)/, /^(?:[\/.])/, /^(?:\s+)/, /^(?:\}\}\})/, /^(?:\}\})/, /^(?:"(\\["]|[^"])*")/, /^(?:'(\\[']|[^'])*')/, /^(?:@[a-zA-Z]+)/, /^(?:true(?=[}\s]))/, /^(?:false(?=[}\s]))/, /^(?:[0-9]+(?=[}\s]))/, /^(?:[a-zA-Z0-9_$-]+(?=[=}\s\/.]))/, /^(?:\[[^\]]*\])/, /^(?:.)/, /^(?:$)/];
        lexer.conditions = {
            "mu": {
                "rules": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28],
                "inclusive": false
            },
            "emu": {
                "rules": [2],
                "inclusive": false
            },
            "INITIAL": {
                "rules": [0, 1, 28],
                "inclusive": true
            }
        };
        return lexer;
    })()
    parser.lexer = lexer;

    function Parser() {
        this.yy = {};
    }
    Parser.prototype = parser;
    parser.Parser = Parser;
    return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
    exports.parser = handlebars;
    exports.Parser = handlebars.Parser;
    exports.parse = function() {
        return handlebars.parse.apply(handlebars, arguments);
    }
    exports.main = function commonjsMain(args) {
        if (!args[1])
            throw new Error('Usage: ' + args[0] + ' FILE');
        var source, cwd;
        if (typeof process !== 'undefined') {
            source = require('fs').readFileSync(require('path').resolve(args[1]), "utf8");
        } else {
            source = require("file").path(require("file").cwd()).join(args[1]).read({
                charset: "utf-8"
            });
        }
        return exports.parser.parse(source);
    }
    if (typeof module !== 'undefined' && require.main === module) {
        exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require("system").args);
    }
};;
Handlebars.Parser = handlebars;
Handlebars.parse = function(string) {
    Handlebars.Parser.yy = Handlebars.AST;
    return Handlebars.Parser.parse(string);
};
Handlebars.print = function(ast) {
    return new Handlebars.PrintVisitor().accept(ast);
};
Handlebars.logger = {
    DEBUG: 0,
    INFO: 1,
    WARN: 2,
    ERROR: 3,
    level: 3,
    log: function(level, str) {}
};
Handlebars.log = function(level, str) {
    Handlebars.logger.log(level, str);
};;
(function() {
    Handlebars.AST = {};
    Handlebars.AST.ProgramNode = function(statements, inverse) {
        this.type = "program";
        this.statements = statements;
        if (inverse) {
            this.inverse = new Handlebars.AST.ProgramNode(inverse);
        }
    };
    Handlebars.AST.MustacheNode = function(rawParams, hash, unescaped) {
        this.type = "mustache";
        this.escaped = !unescaped;
        this.hash = hash;
        var id = this.id = rawParams[0];
        var params = this.params = rawParams.slice(1);
        var eligibleHelper = this.eligibleHelper = id.isSimple;
        this.isHelper = eligibleHelper && (params.length || hash);
    };
    Handlebars.AST.PartialNode = function(id, context) {
        this.type = "partial";
        this.id = id;
        this.context = context;
    };
    var verifyMatch = function(open, close) {
        if (open.original !== close.original) {
            throw new Handlebars.Exception(open.original + " doesn't match " + close.original);
        }
    };
    Handlebars.AST.BlockNode = function(mustache, program, inverse, close) {
        verifyMatch(mustache.id, close);
        this.type = "block";
        this.mustache = mustache;
        this.program = program;
        this.inverse = inverse;
        if (this.inverse && !this.program) {
            this.isInverse = true;
        }
    };
    Handlebars.AST.ContentNode = function(string) {
        this.type = "content";
        this.string = string;
    };
    Handlebars.AST.HashNode = function(pairs) {
        this.type = "hash";
        this.pairs = pairs;
    };
    Handlebars.AST.IdNode = function(parts) {
        this.type = "ID";
        this.original = parts.join(".");
        var dig = [],
            depth = 0;
        for (var i = 0, l = parts.length; i < l; i++) {
            var part = parts[i];
            if (part === "..") {
                depth++;
            } else if (part === "." || part === "this") {
                this.isScoped = true;
            } else {
                dig.push(part);
            }
        }
        this.parts = dig;
        this.string = dig.join('.');
        this.depth = depth;
        this.isSimple = parts.length === 1 && !this.isScoped && depth === 0;
    };
    Handlebars.AST.DataNode = function(id) {
        this.type = "DATA";
        this.id = id;
    };
    Handlebars.AST.StringNode = function(string) {
        this.type = "STRING";
        this.string = string;
    };
    Handlebars.AST.IntegerNode = function(integer) {
        this.type = "INTEGER";
        this.integer = integer;
    };
    Handlebars.AST.BooleanNode = function(bool) {
        this.type = "BOOLEAN";
        this.bool = bool;
    };
    Handlebars.AST.CommentNode = function(comment) {
        this.type = "comment";
        this.comment = comment;
    };
})();;
Handlebars.Exception = function(message) {
    var tmp = Error.prototype.constructor.apply(this, arguments);
    for (var p in tmp) {
        if (tmp.hasOwnProperty(p)) {
            this[p] = tmp[p];
        }
    }
    this.message = tmp.message;
};
Handlebars.Exception.prototype = new Error();
Handlebars.SafeString = function(string) {
    this.string = string;
};
Handlebars.SafeString.prototype.toString = function() {
    return this.string.toString();
};
(function() {
    var escape = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#x27;",
        "`": "&#x60;"
    };
    var badChars = /[&<>"'`]/g;
    var possible = /[&<>"'`]/;
    var escapeChar = function(chr) {
        return escape[chr] || "&amp;";
    };
    Handlebars.Utils = {
        escapeExpression: function(string) {
            if (string instanceof Handlebars.SafeString) {
                return string.toString();
            } else if (string == null || string === false) {
                return "";
            }
            if (!possible.test(string)) {
                return string;
            }
            return string.replace(badChars, escapeChar);
        },
        isEmpty: function(value) {
            if (typeof value === "undefined") {
                return true;
            } else if (value === null) {
                return true;
            } else if (value === false) {
                return true;
            } else if (Object.prototype.toString.call(value) === "[object Array]" && value.length === 0) {
                return true;
            } else {
                return false;
            }
        }
    };
})();;
Handlebars.Compiler = function() {};
Handlebars.JavaScriptCompiler = function() {};
(function(Compiler, JavaScriptCompiler) {
    Compiler.prototype = {
        compiler: Compiler,
        disassemble: function() {
            var opcodes = this.opcodes,
                opcode, out = [],
                params, param;
            for (var i = 0, l = opcodes.length; i < l; i++) {
                opcode = opcodes[i];
                if (opcode.opcode === 'DECLARE') {
                    out.push("DECLARE " + opcode.name + "=" + opcode.value);
                } else {
                    params = [];
                    for (var j = 0; j < opcode.args.length; j++) {
                        param = opcode.args[j];
                        if (typeof param === "string") {
                            param = "\"" + param.replace("\n", "\\n") + "\"";
                        }
                        params.push(param);
                    }
                    out.push(opcode.opcode + " " + params.join(" "));
                }
            }
            return out.join("\n");
        },
        guid: 0,
        compile: function(program, options) {
            this.children = [];
            this.depths = {
                list: []
            };
            this.options = options;
            var knownHelpers = this.options.knownHelpers;
            this.options.knownHelpers = {
                'helperMissing': true,
                'blockHelperMissing': true,
                'each': true,
                'if': true,
                'unless': true,
                'with': true,
                'log': true
            };
            if (knownHelpers) {
                for (var name in knownHelpers) {
                    this.options.knownHelpers[name] = knownHelpers[name];
                }
            }
            return this.program(program);
        },
        accept: function(node) {
            return this[node.type](node);
        },
        program: function(program) {
            var statements = program.statements,
                statement;
            this.opcodes = [];
            for (var i = 0, l = statements.length; i < l; i++) {
                statement = statements[i];
                this[statement.type](statement);
            }
            this.isSimple = l === 1;
            this.depths.list = this.depths.list.sort(function(a, b) {
                return a - b;
            });
            return this;
        },
        compileProgram: function(program) {
            var result = new this.compiler().compile(program, this.options);
            var guid = this.guid++,
                depth;
            this.usePartial = this.usePartial || result.usePartial;
            this.children[guid] = result;
            for (var i = 0, l = result.depths.list.length; i < l; i++) {
                depth = result.depths.list[i];
                if (depth < 2) {
                    continue;
                } else {
                    this.addDepth(depth - 1);
                }
            }
            return guid;
        },
        block: function(block) {
            var mustache = block.mustache,
                program = block.program,
                inverse = block.inverse;
            if (program) {
                program = this.compileProgram(program);
            }
            if (inverse) {
                inverse = this.compileProgram(inverse);
            }
            var type = this.classifyMustache(mustache);
            if (type === "helper") {
                this.helperMustache(mustache, program, inverse);
            } else if (type === "simple") {
                this.simpleMustache(mustache);
                this.opcode('pushProgram', program);
                this.opcode('pushProgram', inverse);
                this.opcode('pushLiteral', '{}');
                this.opcode('blockValue');
            } else {
                this.ambiguousMustache(mustache, program, inverse);
                this.opcode('pushProgram', program);
                this.opcode('pushProgram', inverse);
                this.opcode('pushLiteral', '{}');
                this.opcode('ambiguousBlockValue');
            }
            this.opcode('append');
        },
        hash: function(hash) {
            var pairs = hash.pairs,
                pair, val;
            this.opcode('push', '{}');
            for (var i = 0, l = pairs.length; i < l; i++) {
                pair = pairs[i];
                val = pair[1];
                this.accept(val);
                this.opcode('assignToHash', pair[0]);
            }
        },
        partial: function(partial) {
            var id = partial.id;
            this.usePartial = true;
            if (partial.context) {
                this.ID(partial.context);
            } else {
                this.opcode('push', 'depth0');
            }
            this.opcode('invokePartial', id.original);
            this.opcode('append');
        },
        content: function(content) {
            this.opcode('appendContent', content.string);
        },
        mustache: function(mustache) {
            var options = this.options;
            var type = this.classifyMustache(mustache);
            if (type === "simple") {
                this.simpleMustache(mustache);
            } else if (type === "helper") {
                this.helperMustache(mustache);
            } else {
                this.ambiguousMustache(mustache);
            }
            if (mustache.escaped && !options.noEscape) {
                this.opcode('appendEscaped');
            } else {
                this.opcode('append');
            }
        },
        ambiguousMustache: function(mustache, program, inverse) {
            var id = mustache.id,
                name = id.parts[0];
            this.opcode('getContext', id.depth);
            this.opcode('pushProgram', program);
            this.opcode('pushProgram', inverse);
            this.opcode('invokeAmbiguous', name);
        },
        simpleMustache: function(mustache, program, inverse) {
            var id = mustache.id;
            if (id.type === 'DATA') {
                this.DATA(id);
            } else if (id.parts.length) {
                this.ID(id);
            } else {
                this.addDepth(id.depth);
                this.opcode('getContext', id.depth);
                this.opcode('pushContext');
            }
            this.opcode('resolvePossibleLambda');
        },
        helperMustache: function(mustache, program, inverse) {
            var params = this.setupFullMustacheParams(mustache, program, inverse),
                name = mustache.id.parts[0];
            if (this.options.knownHelpers[name]) {
                this.opcode('invokeKnownHelper', params.length, name);
            } else if (this.knownHelpersOnly) {
                throw new Error("You specified knownHelpersOnly, but used the unknown helper " + name);
            } else {
                this.opcode('invokeHelper', params.length, name);
            }
        },
        ID: function(id) {
            this.addDepth(id.depth);
            this.opcode('getContext', id.depth);
            var name = id.parts[0];
            if (!name) {
                this.opcode('pushContext');
            } else {
                this.opcode('lookupOnContext', id.parts[0]);
            }
            for (var i = 1, l = id.parts.length; i < l; i++) {
                this.opcode('lookup', id.parts[i]);
            }
        },
        DATA: function(data) {
            this.options.data = true;
            this.opcode('lookupData', data.id);
        },
        STRING: function(string) {
            this.opcode('pushString', string.string);
        },
        INTEGER: function(integer) {
            this.opcode('pushLiteral', integer.integer);
        },
        BOOLEAN: function(bool) {
            this.opcode('pushLiteral', bool.bool);
        },
        comment: function() {},
        opcode: function(name) {
            this.opcodes.push({
                opcode: name,
                args: [].slice.call(arguments, 1)
            });
        },
        declare: function(name, value) {
            this.opcodes.push({
                opcode: 'DECLARE',
                name: name,
                value: value
            });
        },
        addDepth: function(depth) {
            if (isNaN(depth)) {
                throw new Error("EWOT");
            }
            if (depth === 0) {
                return;
            }
            if (!this.depths[depth]) {
                this.depths[depth] = true;
                this.depths.list.push(depth);
            }
        },
        classifyMustache: function(mustache) {
            var isHelper = mustache.isHelper;
            var isEligible = mustache.eligibleHelper;
            var options = this.options;
            if (isEligible && !isHelper) {
                var name = mustache.id.parts[0];
                if (options.knownHelpers[name]) {
                    isHelper = true;
                } else if (options.knownHelpersOnly) {
                    isEligible = false;
                }
            }
            if (isHelper) {
                return "helper";
            } else if (isEligible) {
                return "ambiguous";
            } else {
                return "simple";
            }
        },
        pushParams: function(params) {
            var i = params.length,
                param;
            while (i--) {
                param = params[i];
                if (this.options.stringParams) {
                    if (param.depth) {
                        this.addDepth(param.depth);
                    }
                    this.opcode('getContext', param.depth || 0);
                    this.opcode('pushStringParam', param.string);
                } else {
                    this[param.type](param);
                }
            }
        },
        setupMustacheParams: function(mustache) {
            var params = mustache.params;
            this.pushParams(params);
            if (mustache.hash) {
                this.hash(mustache.hash);
            } else {
                this.opcode('pushLiteral', '{}');
            }
            return params;
        },
        setupFullMustacheParams: function(mustache, program, inverse) {
            var params = mustache.params;
            this.pushParams(params);
            this.opcode('pushProgram', program);
            this.opcode('pushProgram', inverse);
            if (mustache.hash) {
                this.hash(mustache.hash);
            } else {
                this.opcode('pushLiteral', '{}');
            }
            return params;
        }
    };
    var Literal = function(value) {
        this.value = value;
    };
    JavaScriptCompiler.prototype = {
        nameLookup: function(parent, name, type) {
            if (/^[0-9]+$/.test(name)) {
                return parent + "[" + name + "]";
            } else if (JavaScriptCompiler.isValidJavaScriptVariableName(name)) {
                return parent + "." + name;
            } else {
                return parent + "['" + name + "']";
            }
        },
        appendToBuffer: function(string) {
            if (this.environment.isSimple) {
                return "return " + string + ";";
            } else {
                return "buffer += " + string + ";";
            }
        },
        initializeBuffer: function() {
            return this.quotedString("");
        },
        namespace: "Handlebars",
        compile: function(environment, options, context, asObject) {
            this.environment = environment;
            this.options = options || {};
            Handlebars.log(Handlebars.logger.DEBUG, this.environment.disassemble() + "\n\n");
            this.name = this.environment.name;
            this.isChild = !! context;
            this.context = context || {
                programs: [],
                aliases: {}
            };
            this.preamble();
            this.stackSlot = 0;
            this.stackVars = [];
            this.registers = {
                list: []
            };
            this.compileStack = [];
            this.compileChildren(environment, options);
            var opcodes = environment.opcodes,
                opcode;
            this.i = 0;
            for (l = opcodes.length; this.i < l; this.i++) {
                opcode = opcodes[this.i];
                if (opcode.opcode === 'DECLARE') {
                    this[opcode.name] = opcode.value;
                } else {
                    this[opcode.opcode].apply(this, opcode.args);
                }
            }
            return this.createFunctionContext(asObject);
        },
        nextOpcode: function() {
            var opcodes = this.environment.opcodes,
                opcode = opcodes[this.i + 1];
            return opcodes[this.i + 1];
        },
        eat: function(opcode) {
            this.i = this.i + 1;
        },
        preamble: function() {
            var out = [];
            if (!this.isChild) {
                var namespace = this.namespace;
                var copies = "helpers = helpers || " + namespace + ".helpers;";
                if (this.environment.usePartial) {
                    copies = copies + " partials = partials || " + namespace + ".partials;";
                }
                if (this.options.data) {
                    copies = copies + " data = data || {};";
                }
                out.push(copies);
            } else {
                out.push('');
            }
            if (!this.environment.isSimple) {
                out.push(", buffer = " + this.initializeBuffer());
            } else {
                out.push("");
            }
            this.lastContext = 0;
            this.source = out;
        },
        createFunctionContext: function(asObject) {
            var locals = this.stackVars.concat(this.registers.list);
            if (locals.length > 0) {
                this.source[1] = this.source[1] + ", " + locals.join(", ");
            }
            if (!this.isChild) {
                var aliases = [];
                for (var alias in this.context.aliases) {
                    this.source[1] = this.source[1] + ', ' + alias + '=' + this.context.aliases[alias];
                }
            }
            if (this.source[1]) {
                this.source[1] = "var " + this.source[1].substring(2) + ";";
            }
            if (!this.isChild) {
                this.source[1] += '\n' + this.context.programs.join('\n') + '\n';
            }
            if (!this.environment.isSimple) {
                this.source.push("return buffer;");
            }
            var params = this.isChild ? ["depth0", "data"] : ["Handlebars", "depth0", "helpers", "partials", "data"];
            for (var i = 0, l = this.environment.depths.list.length; i < l; i++) {
                params.push("depth" + this.environment.depths.list[i]);
            }
            if (asObject) {
                params.push(this.source.join("\n  "));
                return Function.apply(this, params);
            } else {
                var functionSource = 'function ' + (this.name || '') + '(' + params.join(',') + ') {\n  ' + this.source.join("\n  ") + '}';
                Handlebars.log(Handlebars.logger.DEBUG, functionSource + "\n\n");
                return functionSource;
            }
        },
        blockValue: function() {
            this.context.aliases.blockHelperMissing = 'helpers.blockHelperMissing';
            var params = ["depth0"];
            this.setupParams(0, params);
            this.replaceStack(function(current) {
                params.splice(1, 0, current);
                return current + " = blockHelperMissing.call(" + params.join(", ") + ")";
            });
        },
        ambiguousBlockValue: function() {
            this.context.aliases.blockHelperMissing = 'helpers.blockHelperMissing';
            var params = ["depth0"];
            this.setupParams(0, params);
            var current = this.topStack();
            params.splice(1, 0, current);
            this.source.push("if (!" + this.lastHelper + ") { " + current + " = blockHelperMissing.call(" + params.join(", ") + "); }");
        },
        appendContent: function(content) {
            this.source.push(this.appendToBuffer(this.quotedString(content)));
        },
        append: function() {
            var local = this.popStack();
            this.source.push("if(" + local + " || " + local + " === 0) { " + this.appendToBuffer(local) + " }");
            if (this.environment.isSimple) {
                this.source.push("else { " + this.appendToBuffer("''") + " }");
            }
        },
        appendEscaped: function() {
            var opcode = this.nextOpcode(),
                extra = "";
            this.context.aliases.escapeExpression = 'this.escapeExpression';
            if (opcode && opcode.opcode === 'appendContent') {
                extra = " + " + this.quotedString(opcode.args[0]);
                this.eat(opcode);
            }
            this.source.push(this.appendToBuffer("escapeExpression(" + this.popStack() + ")" + extra));
        },
        getContext: function(depth) {
            if (this.lastContext !== depth) {
                this.lastContext = depth;
            }
        },
        lookupOnContext: function(name) {
            this.pushStack(this.nameLookup('depth' + this.lastContext, name, 'context'));
        },
        pushContext: function() {
            this.pushStackLiteral('depth' + this.lastContext);
        },
        resolvePossibleLambda: function() {
            this.context.aliases.functionType = '"function"';
            this.replaceStack(function(current) {
                return "typeof " + current + " === functionType ? " + current + "() : " + current;
            });
        },
        lookup: function(name) {
            this.replaceStack(function(current) {
                return current + " == null || " + current + " === false ? " + current + " : " + this.nameLookup(current, name, 'context');
            });
        },
        lookupData: function(id) {
            this.pushStack(this.nameLookup('data', id, 'data'));
        },
        pushStringParam: function(string) {
            this.pushStackLiteral('depth' + this.lastContext);
            this.pushString(string);
        },
        pushString: function(string) {
            this.pushStackLiteral(this.quotedString(string));
        },
        push: function(expr) {
            this.pushStack(expr);
        },
        pushLiteral: function(value) {
            this.pushStackLiteral(value);
        },
        pushProgram: function(guid) {
            if (guid != null) {
                this.pushStackLiteral(this.programExpression(guid));
            } else {
                this.pushStackLiteral(null);
            }
        },
        invokeHelper: function(paramSize, name) {
            this.context.aliases.helperMissing = 'helpers.helperMissing';
            var helper = this.lastHelper = this.setupHelper(paramSize, name);
            this.register('foundHelper', helper.name);
            this.pushStack("foundHelper ? foundHelper.call(" +
                helper.callParams + ") " + ": helperMissing.call(" +
                helper.helperMissingParams + ")");
        },
        invokeKnownHelper: function(paramSize, name) {
            var helper = this.setupHelper(paramSize, name);
            this.pushStack(helper.name + ".call(" + helper.callParams + ")");
        },
        invokeAmbiguous: function(name) {
            this.context.aliases.functionType = '"function"';
            this.pushStackLiteral('{}');
            var helper = this.setupHelper(0, name);
            var helperName = this.lastHelper = this.nameLookup('helpers', name, 'helper');
            this.register('foundHelper', helperName);
            var nonHelper = this.nameLookup('depth' + this.lastContext, name, 'context');
            var nextStack = this.nextStack();
            this.source.push('if (foundHelper) { ' + nextStack + ' = foundHelper.call(' + helper.callParams + '); }');
            this.source.push('else { ' + nextStack + ' = ' + nonHelper + '; ' + nextStack + ' = typeof ' + nextStack + ' === functionType ? ' + nextStack + '() : ' + nextStack + '; }');
        },
        invokePartial: function(name) {
            var params = [this.nameLookup('partials', name, 'partial'), "'" + name + "'", this.popStack(), "helpers", "partials"];
            if (this.options.data) {
                params.push("data");
            }
            this.context.aliases.self = "this";
            this.pushStack("self.invokePartial(" + params.join(", ") + ");");
        },
        assignToHash: function(key) {
            var value = this.popStack();
            var hash = this.topStack();
            this.source.push(hash + "['" + key + "'] = " + value + ";");
        },
        compiler: JavaScriptCompiler,
        compileChildren: function(environment, options) {
            var children = environment.children,
                child, compiler;
            for (var i = 0, l = children.length; i < l; i++) {
                child = children[i];
                compiler = new this.compiler();
                this.context.programs.push('');
                var index = this.context.programs.length;
                child.index = index;
                child.name = 'program' + index;
                this.context.programs[index] = compiler.compile(child, options, this.context);
            }
        },
        programExpression: function(guid) {
            this.context.aliases.self = "this";
            if (guid == null) {
                return "self.noop";
            }
            var child = this.environment.children[guid],
                depths = child.depths.list,
                depth;
            var programParams = [child.index, child.name, "data"];
            for (var i = 0, l = depths.length; i < l; i++) {
                depth = depths[i];
                if (depth === 1) {
                    programParams.push("depth0");
                } else {
                    programParams.push("depth" + (depth - 1));
                }
            }
            if (depths.length === 0) {
                return "self.program(" + programParams.join(", ") + ")";
            } else {
                programParams.shift();
                return "self.programWithDepth(" + programParams.join(", ") + ")";
            }
        },
        register: function(name, val) {
            this.useRegister(name);
            this.source.push(name + " = " + val + ";");
        },
        useRegister: function(name) {
            if (!this.registers[name]) {
                this.registers[name] = true;
                this.registers.list.push(name);
            }
        },
        pushStackLiteral: function(item) {
            this.compileStack.push(new Literal(item));
            return item;
        },
        pushStack: function(item) {
            this.source.push(this.incrStack() + " = " + item + ";");
            this.compileStack.push("stack" + this.stackSlot);
            return "stack" + this.stackSlot;
        },
        replaceStack: function(callback) {
            var item = callback.call(this, this.topStack());
            this.source.push(this.topStack() + " = " + item + ";");
            return "stack" + this.stackSlot;
        },
        nextStack: function(skipCompileStack) {
            var name = this.incrStack();
            this.compileStack.push("stack" + this.stackSlot);
            return name;
        },
        incrStack: function() {
            this.stackSlot++;
            if (this.stackSlot > this.stackVars.length) {
                this.stackVars.push("stack" + this.stackSlot);
            }
            return "stack" + this.stackSlot;
        },
        popStack: function() {
            var item = this.compileStack.pop();
            if (item instanceof Literal) {
                return item.value;
            } else {
                this.stackSlot--;
                return item;
            }
        },
        topStack: function() {
            var item = this.compileStack[this.compileStack.length - 1];
            if (item instanceof Literal) {
                return item.value;
            } else {
                return item;
            }
        },
        quotedString: function(str) {
            return '"' + str.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\n/g, '\\n').replace(/\r/g, '\\r') + '"';
        },
        setupHelper: function(paramSize, name) {
            var params = [];
            this.setupParams(paramSize, params);
            var foundHelper = this.nameLookup('helpers', name, 'helper');
            return {
                params: params,
                name: foundHelper,
                callParams: ["depth0"].concat(params).join(", "),
                helperMissingParams: ["depth0", this.quotedString(name)].concat(params).join(", ")
            };
        },
        setupParams: function(paramSize, params) {
            var options = [],
                contexts = [],
                param, inverse, program;
            options.push("hash:" + this.popStack());
            inverse = this.popStack();
            program = this.popStack();
            if (program || inverse) {
                if (!program) {
                    this.context.aliases.self = "this";
                    program = "self.noop";
                }
                if (!inverse) {
                    this.context.aliases.self = "this";
                    inverse = "self.noop";
                }
                options.push("inverse:" + inverse);
                options.push("fn:" + program);
            }
            for (var i = 0; i < paramSize; i++) {
                param = this.popStack();
                params.push(param);
                if (this.options.stringParams) {
                    contexts.push(this.popStack());
                }
            }
            if (this.options.stringParams) {
                options.push("contexts:[" + contexts.join(",") + "]");
            }
            if (this.options.data) {
                options.push("data:data");
            }
            params.push("{" + options.join(",") + "}");
            return params.join(", ");
        }
    };
    var reservedWords = ("break else new var" + " case finally return void" + " catch for switch while" + " continue function this with" + " default if throw" + " delete in try" + " do instanceof typeof" + " abstract enum int short" + " boolean export interface static" + " byte extends long super" + " char final native synchronized" + " class float package throws" + " const goto private transient" + " debugger implements protected volatile" + " double import public let yield").split(" ");
    var compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};
    for (var i = 0, l = reservedWords.length; i < l; i++) {
        compilerWords[reservedWords[i]] = true;
    }
    JavaScriptCompiler.isValidJavaScriptVariableName = function(name) {
        if (!JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]+$/.test(name)) {
            return true;
        }
        return false;
    };
})(Handlebars.Compiler, Handlebars.JavaScriptCompiler);
Handlebars.precompile = function(string, options) {
    options = options || {};
    var ast = Handlebars.parse(string);
    var environment = new Handlebars.Compiler().compile(ast, options);
    return new Handlebars.JavaScriptCompiler().compile(environment, options);
};
Handlebars.compile = function(string, options) {
    options = options || {};
    var compiled;

    function compile() {
        var ast = Handlebars.parse(string);
        var environment = new Handlebars.Compiler().compile(ast, options);
        var templateSpec = new Handlebars.JavaScriptCompiler().compile(environment, options, undefined, true);
        return Handlebars.template(templateSpec);
    }
    return function(context, options) {
        if (!compiled) {
            compiled = compile();
        }
        return compiled.call(this, context, options);
    };
};;
Handlebars.VM = {
    template: function(templateSpec) {
        var container = {
            escapeExpression: Handlebars.Utils.escapeExpression,
            invokePartial: Handlebars.VM.invokePartial,
            programs: [],
            program: function(i, fn, data) {
                var programWrapper = this.programs[i];
                if (data) {
                    return Handlebars.VM.program(fn, data);
                } else if (programWrapper) {
                    return programWrapper;
                } else {
                    programWrapper = this.programs[i] = Handlebars.VM.program(fn);
                    return programWrapper;
                }
            },
            programWithDepth: Handlebars.VM.programWithDepth,
            noop: Handlebars.VM.noop
        };
        return function(context, options) {
            options = options || {};
            return templateSpec.call(container, Handlebars, context, options.helpers, options.partials, options.data);
        };
    },
    programWithDepth: function(fn, data, $depth) {
        var args = Array.prototype.slice.call(arguments, 2);
        return function(context, options) {
            options = options || {};
            return fn.apply(this, [context, options.data || data].concat(args));
        };
    },
    program: function(fn, data) {
        return function(context, options) {
            options = options || {};
            return fn(context, options.data || data);
        };
    },
    noop: function() {
        return "";
    },
    invokePartial: function(partial, name, context, helpers, partials, data) {
        var options = {
            helpers: helpers,
            partials: partials,
            data: data
        };
        if (partial === undefined) {
            throw new Handlebars.Exception("The partial " + name + " could not be found");
        } else if (partial instanceof Function) {
            return partial(context, options);
        } else if (!Handlebars.compile) {
            throw new Handlebars.Exception("The partial " + name + " could not be compiled when running in runtime-only mode");
        } else {
            partials[name] = Handlebars.compile(partial, {
                data: data !== undefined
            });
            return partials[name](context, options);
        }
    }
};
Handlebars.template = Handlebars.VM.template;;
! function() {
    var root = this;
    var DeferredImageLoader = function(selector, condition) {
        this.selector = selector || '[data-deferred]';
        this.deferredImages = $(this.selector);
        this.getDeferredData();
        this.loadDeferred();
    };
    DeferredImageLoader.prototype = {
        getDeferredData: function() {
            var len = this.deferredImages.length;
            var data = [];
            while (len--) {
                data.push($(this.deferredImages[len]).data('deferred').url);
            }
            this.data = data;
        },
        loadDeferred: function() {
            var resLoader = new EP2.ResourceLoader({
                url: this.data,
                callback: this.onLoaded.bind(this)
            });
            resLoader.load();
        },
        onLoaded: function() {
            this.deferredImages.each(function(i, el) {
                var dataDef = $(this).data('deferred');
                if (dataDef.type === "image") {
                    $(this).attr('src', dataDef.url);
                } else {
                    $(this).css('background-image', 'url(' + dataDef.url + ')');
                }
            })
        }
    };
    root.DeferredImageLoader = DeferredImageLoader
}.call(EP2);
! function() {
    var root = this;
    var DefaultConfigModel = function(data) {
        this.attributes = {};
        this.init(data);
    };
    DefaultConfigModel.prototype = new root.Mediator();
    DefaultConfigModel.prototype.constructor = DefaultConfigModel;
    DefaultConfigModel.prototype.init = function(data) {
        this.baseData = data;
        this.set('bodystyles', this.extractData(data, 'bodystyles'));
        this.set('interiorImages', this.extractData(data, 'interiorImages'));
        this.set('exteriorImages', this.extractData(data, 'exteriorImages'));
        this.setColors(0);
        this.set('idf', this.extractData(data, 'idf'));
    };
    DefaultConfigModel.prototype.extractData = function(data, key, outKey) {
        if (!data)
            return null;
        var out = {};
        if (outKey) {
            out[outKey] = key ? data[key] : data;
        } else {
            out = key ? data[key] : data;
        }
        return out;
    };
    DefaultConfigModel.prototype.indexIt = function(data) {
        for (var i = 0; i < data.length; i++) {
            data[i].idx = (function(in_i) {
                return in_i;
            })(i);
        }
        return data;
    };
    DefaultConfigModel.prototype.setColors = function(index) {
        var indx = index;
        if (indx === (undefined || 'null' || null)) return;
        this.set('colors', this.get('bodystyles').options[index].availableColors);
    };
    DefaultConfigModel.prototype.get = function(key) {
        return this.attributes[key];
    };
    DefaultConfigModel.prototype.set = function(key, data) {
        if (!data)
            return;
        if (data.options)
            this.indexIt(data.options);
        this.attributes[key] = data;
        this.notify('change:' + key, data);
    };
    root.SelectorDefaultConfigModel = function(data) {
        return new DefaultConfigModel(data);
    };
}.call(EP2);
! function() {
    var root = this;
    var defaults = {
        el: '#vehicleTools'
    };
    var SelectorView = function(options) {
        this.options = $.extend({}, defaults, options);
        this.template = this.options.template || Handlebars.compile($('#selectorTemplate').html());
        this.mediator = this.options.mediator;
        this.userSelection = {};
        this.init();
    };
    SelectorView.prototype = {
        dataOptions: {
            bsData: {
                className: "no-knockback body-styles"
            },
            colorData: {
                "className": "no-knockback colour-selector"
            }
        },
        init: function() {
            this.$el = $(this.options.el);
            this.$nextAngleSwitcher = $('.x-axis-wrapper > .pointer.right');
            this.$prevAngleSwitcher = $('.x-axis-wrapper > .pointer.left');
            this.$el.on('click', '.vehicle-selector', function(e) {
                e.preventDefault();
            });
            this.$el.on('click', '.body-styles ul li', this.bodyStyleSelected.bind(this));
            this.$el.on('click', '.colour-selector ul li', this.colorSelected.bind(this));
            this.$el.on('click', '.exterior-image ul li', this.exteriorImageSelected.bind(this));
            this.$nextAngleSwitcher.on({
                'click': this.exteriorImageSwitcher.bind(this),
                'mouseover': this.removePreview.bind(this)
            });
            this.$prevAngleSwitcher.on({
                'click': this.exteriorImageSwitcher.bind(this),
                'mouseover': this.removePreview.bind(this)
            });
            this.$el.on('click', '.interior-image ul li', this.interiorImageSelected.bind(this));
            this.$el.on('click', '.idf-image .js-overlay', this.idfSelected.bind(this));
            this.$el.on('click', '.selector-options', this.hideOptions.bind(this));
            this.$el.on('click', '.selector-options ul li', this.addClassSelected);
            this.mediator.subscribe('vehicleChange', this.updateUSC, this);
            this.mediator.subscribe('vehicleDataRequested', this.render, this);
            this.mediator.subscribe('exteriorImageData', this.updateExteriorImages, this);
            this.mediator.subscribe('interiorImageData', this.updateInteriorImages, this);
            this.mediator.subscribe('idfData', this.updateIdf, this);
            this.mediator.subscribe(EP2.XAxis.Events.MOVE, this.hide, this);
        },
        updateUSC: function(payload) {
            this.currentUSC = payload.data.uscCode;
            this.currentSeries = payload.data.seriesCode;
        },
        render: function(data) {
            this.exteriorAngleImagePosition = 0;
            this.aggregatedSelectorData = data;
            this.htmlBuffer = '';
            this.defaultConfigModel = new EP2.SelectorDefaultConfigModel(data);
            this.exteriorImages = new EP2.VehicleExteriorImageModel(data.exteriorImages, this.currentUSC, this.currentSeries, data.vehicleType, data.catalogId, {
                onSuccess: this.updateImages.bind(this)
            }, data.presId);
            this.defaultConfigModel.subscribe('change:colors', this.updateColorSelector, this);
            if (this.aggregatedSelectorData.supportSelector === 'true') {
                this.htmlBuffer += this.renderBodyStyles();
                this.htmlBuffer += this.renderColors();
                this.htmlBuffer += this.renderExteriorImages();
                this.htmlBuffer += this.renderInteriorImages();
            }
            if (this.defaultConfigModel.get('idf').options.length > 0) {
                this.htmlBuffer += this.renderIDF();
            }
            this.$el.html(this.htmlBuffer);
            if (this.aggregatedSelectorData.supportSelector === 'true') {
                this.notifyUserSelection(true);
                this.updateThumbnails();
                this.$el.fadeIn();
            }
            this.vehicleType = data.vehicleType;
            if (this.vehicleType == "CV") {
                $('.body-styles-wrapper').fadeOut();
            }
            if (this.exteriorAngleImagePosition === 0) {
                this.$prevAngleSwitcher.fadeOut('fast');
            }
            if (this.aggregatedSelectorData.supportSelector === 'true') {
                if (data && (!data.images || data.images.length < 1 || data.images[0] === "")) {
                    this.notifyUserSelection(true, false);
                }
            }
        },
        bodyStyleSelected: function(e) {
            e.preventDefault();
            var idx = $(e.target).closest('li').data('idx');
            var selectedBodyStyle = $('.body-styles').find('.selected').data('usc-code'),
                selectedColorIdx = $('.colour-selector').find('.selected').data('idx'),
                selectedExteriorIdx = $('.exterior-image').find('.selected').data('idx');
            if (this.selectedBodyStyle === this.defaultConfigModel.get('bodystyles').options[idx])
                return;
            this.defaultConfigModel.setColors(idx);
            this.selectedBodyStyle = this.defaultConfigModel.get('bodystyles').options[idx];
            this.emptyLocalStorageUserSelection();
            this.notifyUserSelection();
            this.updateThumbnails();
        },
        colorSelected: function(e) {
            e.preventDefault();
            var idx = $(e.target).closest('li').data('idx');
            var configureButton = $('#ctaDetails .btnLink:first > a');
            var configureButtonUrl = configureButton.attr('href'),
                configureButtonUrl = configureButtonUrl.split('?');
            var selectedBodyStyle = $('.body-styles').find('.selected').data('usc-code'),
                selectedBodyStyleIdx = $('.body-styles').find('.selected').data('idx'),
                selectedExteriorIdx = $('.exterior-image').find('.selected').data('idx'),
                selectedcolour = $(e.target).closest('li').data('usc-code');
            configureButton.attr('href', configureButtonUrl[0] + "?features=C" + selectedBodyStyle.replace(/:/g, ';') + ":C" + selectedcolour);
            if (this.selectedBodyStyle === this.defaultConfigModel.get('colors').options[idx])
                return;
            this.selectedColor = this.defaultConfigModel.get('colors').options[idx];
            this.emptyLocalStorageUserSelection();
            this.notifyUserSelection();
            this.updateThumbnails();
        },
        exteriorImageSelected: function(e) {
            e.preventDefault();
            this.emptyLocalStorageUserSelection();
            var idx = $(e.target).closest('li').data('idx');
            var listSize = this.$el.find('.exterior-image li').length;
            var selectedListIdx = this.$el.find('.exterior-image li.selected').data('idx');
            var selectedIdx = $(e.target).parent().data('idx');
            this.exteriorAngleImagePosition = idx;
            if (this.aggregatedSelectorData.imagePack) {
                this.$el.find('.exterior-image-wrapper > img').get(0).src = this.exteriorImages.get(idx, 'exteriorImagePack', 'thumbnail');
                this.mediator.notify('vehicleImageChange', {
                    index: idx,
                    images: this.exteriorImages.get(idx, 'exteriorImagePack')
                });
            } else {
                this.$el.find('.exterior-image-wrapper > img').get(0).src = this.exteriorImages.get(idx, 'exteriorImages', 'thumbnail');
                this.mediator.notify('vehicleImageChange', {
                    index: idx,
                    images: this.exteriorImages.get(idx, 'exteriorImages')
                });
            }
            var totalSize = listSize - 1;
            if (selectedIdx !== 0 && selectedIdx < totalSize) {
                this.$nextAngleSwitcher.fadeIn();
                this.$prevAngleSwitcher.fadeIn();
            } else if (selectedIdx === 0) {
                this.$nextAngleSwitcher.fadeIn();
                this.$prevAngleSwitcher.fadeOut();
            } else if (selectedIdx === totalSize) {
                this.$prevAngleSwitcher.fadeIn();
                this.$nextAngleSwitcher.fadeOut();
            }
        },
        exteriorImageSwitcher: function(e) {
            e.preventDefault();
            var $thisAttr = $(this).parent().attr('class');
            var el = this.$el.find('.exterior-image .selected');
            var idx = this.$el.find('.exterior-image .selected').data('idx');
            var listSize = this.$el.find('.exterior-image li').length;
            if ($(e.target).closest('a').hasClass('right')) {
                if ((idx + 1) === listSize) {
                    return;
                }
                var nextList = el.next('li');
                var nextListIdx = nextList.data('idx');
                this.exteriorAngleImagePosition = nextListIdx;
                el.removeClass('selected');
                nextList.addClass('selected');
                if (nextListIdx + 1 === listSize) $(e.target).closest('a').fadeOut();
                if (nextListIdx + 1 < listSize) this.$prevAngleSwitcher.fadeIn();
                this.updateselectedAngle(nextListIdx);
                this.emptyLocalStorageUserSelection();
            } else if ($(e.target).closest('a').hasClass('left')) {
                if (idx === 0) {
                    return;
                }
                var prevList = el.prev('li');
                var prevListIdx = prevList.data('idx');
                this.exteriorAngleImagePosition = prevListIdx;
                el.removeClass('selected');
                prevList.addClass('selected');
                if (prevListIdx === 0) $(e.target).closest('a').fadeOut();
                if (prevListIdx > 0) this.$nextAngleSwitcher.fadeIn();
                this.updateselectedAngle(prevListIdx);
                this.emptyLocalStorageUserSelection();
            }
        },
        emptyLocalStorageUserSelection: function() {
            localStorage.removeItem('userSelection');
            localStorage.removeItem('userSelectionImg');
            var selectedIdx = $('.exterior-image').find('.selected').data('idx');
            var listSize = this.$el.find('.exterior-image li').length;
            var totalSize = listSize - 1;
            var configureButton = $('#ctaDetails .btnLink:first > a');
            var configureButtonUrl = configureButton.attr('href'),
                configureButtonUrl = configureButtonUrl.split('?');
            var selectedBodyStyle = $('.body-styles').find('.selected').data('usc-code'),
                selectedcolour = $('.colour-selector').find('.selected').data('usc-code');
            configureButton.attr('href', configureButtonUrl[0] + "?features=C" + selectedBodyStyle.replace(/:/g, ';') + ":C" + selectedcolour);
            if (selectedIdx !== 0 && selectedIdx < totalSize) {
                this.$nextAngleSwitcher.fadeIn();
                this.$prevAngleSwitcher.fadeIn();
            } else if (selectedIdx === 0) {
                this.$nextAngleSwitcher.fadeIn();
                this.$prevAngleSwitcher.fadeOut();
            } else if (selectedIdx === totalSize) {
                this.$prevAngleSwitcher.fadeIn();
                this.$nextAngleSwitcher.fadeOut();
            }
            if (this.aggregatedSelectorData.imagePack) {
                this.mediator.notify('vehicleImageChange', {
                    index: selectedIdx,
                    images: this.exteriorImages.get(selectedIdx, 'exteriorImagePack')
                });
            } else {
                this.mediator.notify('vehicleImageChange', {
                    index: selectedIdx,
                    images: this.exteriorImages.get(selectedIdx, 'exteriorImages')
                });
            }
        },
        updateselectedAngle: function(idx) {
            var retrieveUserSelection = JSON.parse(localStorage.getItem('userSelection'));
            if (this.aggregatedSelectorData.imagePack) {
                if (retrieveUserSelection !== null) {
                    this.$el.find('.exterior-image-wrapper > img').get(0).src = this.exteriorImages.get(retrieveUserSelection.exteriorAngleIdx, 'exteriorImagePack', 'thumbnail');
                    this.mediator.notify('vehicleImageChange', {
                        index: retrieveUserSelection.exteriorAngleIdx,
                        images: this.exteriorImages.get(retrieveUserSelection.exteriorAngleIdx, 'exteriorImagePack')
                    });
                    return;
                }
                this.$el.find('.exterior-image-wrapper > img').get(0).src = this.exteriorImages.get(idx, 'exteriorImagePack', 'thumbnail');
                this.mediator.notify('vehicleImageChange', {
                    index: idx,
                    images: this.exteriorImages.get(idx, 'exteriorImagePack')
                });
            } else {
                if (retrieveUserSelection !== null) {
                    this.$el.find('.exterior-image-wrapper > img').get(0).src = this.exteriorImages.get(retrieveUserSelection.exteriorAngleIdx, 'exteriorImages', 'thumbnail');
                    this.mediator.notify('vehicleImageChange', {
                        index: retrieveUserSelection.exteriorAngleIdx,
                        images: this.exteriorImages.get(retrieveUserSelection.exteriorAngleIdx, 'exteriorImages')
                    });
                    return;
                }
                this.$el.find('.exterior-image-wrapper > img').get(0).src = this.exteriorImages.get(idx, 'exteriorImages', 'thumbnail');
                this.mediator.notify('vehicleImageChange', {
                    index: idx,
                    images: this.exteriorImages.get(idx, 'exteriorImages')
                });
            }
        },
        removePreview: function(e) {
            e.preventDefault();
            $('figure.vehicle-preview-rollover').remove();
        },
        interiorImageSelected: function(e) {
            e.preventDefault();
            var idx = $(e.target).closest('li').data('idx');
            this.$el.find('.interior-image-wrapper > img').get(0).src = this.exteriorImages.get(idx, 'interiorImages', 'thumbnail');
            this.mediator.notify('interiorImageSelected', {
                index: idx
            });
        },
        idfSelected: function(e) {
            e.preventDefault();
            var $this = $(e.target).closest('.js-overlay'),
                thumbSrc = $this.find('img').attr('src');
            this.$el.find('.idf-image-wrapper > img').get(0).src = thumbSrc;
        },
        addClassSelected: function() {
            $(this).addClass('selected').siblings('.selected').removeClass('selected');
        },
        notifyUserSelection: function(reset, silent) {
            var retrieveUserSelection = JSON.parse(localStorage.getItem('userSelection'));
            if (retrieveUserSelection !== null) {
                this.selectedBodyStyle = reset ? this.defaultConfigModel.get('bodystyles').options[retrieveUserSelection.bodyStyleOptIdx] : this.selectedBodyStyle || this.defaultConfigModel.get('bodystyles').options[retrieveUserSelection.bodyStyleOptIdx];
                this.selectedColor = reset ? this.selectedBodyStyle.availableColors.options[retrieveUserSelection.colorIdx] : this.selectedColor || this.selectedBodyStyle.availableColors.options[retrieveUserSelection.colorIdx];
            } else {
                this.selectedBodyStyle = reset ? this.defaultConfigModel.get('bodystyles').options[0] : this.selectedBodyStyle || this.defaultConfigModel.get('bodystyles').options[0];
                if (this.selectedBodyStyle.availableColors != undefined) {
                    this.selectedColor = reset ? this.selectedBodyStyle.availableColors.options[0] : this.selectedColor || this.selectedBodyStyle.availableColors.options[0];
                }
            }
            if (!this.isValidColorSelection()) {
                if (this.selectedBodyStyle.availableColors != undefined) {
                    this.selectedColor = this.selectedBodyStyle.availableColors.options[retrieveUserSelection.colorIdx || 0];
                }
            }
            if (!silent) {
                var userConfig = {
                    b: this.selectedBodyStyle,
                    c: this.selectedColor
                };
                this.exteriorImages.fetch(userConfig);
                this.mediator.notify('userConfigChange', userConfig);
            }
        },
        isValidColorSelection: function() {
            if (this.selectedBodyStyle.availableColors != undefined) {
                var aCols = this.selectedBodyStyle.availableColors.options,
                    len = aCols.length;
                while (len--) {
                    if (this.compare(aCols[len], this.selectedColor))
                        return true;
                }
            }
            return false;
        },
        compare: function(a, b) {
            if (!a.usc == b.usc) {
                return false;
            }
            return true;
        },
        hideOptions: function() {
            this.$el.find('.selector-options').addClass('clicked');
            setTimeout(this.showOptions.bind(this), 750);
        },
        showOptions: function() {
            this.$el.find('.selector-options').removeClass('clicked');
        },
        hide: function(speed) {
            this.$el.fadeOut(speed);
        },
        show: function() {
            this.$el.fadeIn();
        },
        renderBodyStyles: function() {
            var retrieveUserSelection = JSON.parse(localStorage.getItem('userSelection'));
            var data = this.defaultConfigModel.get('bodystyles');
            var len = data.options.length;
            var match = false;
            if (this.selectedBodyStyle && data.options.length > 0) {
                while (len--) {
                    if (this.selectedBodyStyle.usc === data.options[len].usc) {
                        data.options[len].selected = true;
                        match = true;
                    }
                }
            }
            if (!match) {
                if (retrieveUserSelection !== null) {
                    data.options[retrieveUserSelection.bodyStyleOptIdx].selected = true;
                } else {
                    data.options[0].selected = true;
                }
            }
            return this.template($.extend({}, this.dataOptions.bsData, data));
        },
        renderColors: function() {
            var data = this.defaultConfigModel.get('colors');
            var retrieveUserSelection = JSON.parse(localStorage.getItem('userSelection'));
            if (data !== undefined) {
                var len = data.options.length;
                var match = false;
                if (this.selectedColor && data.options.length > 0) {
                    while (len--) {
                        if (this.selectedColor.usc === data.options[len].usc) {
                            data.options[len].selected = true;
                            match = true;
                        }
                    }
                }
                if (!match) {
                    if (retrieveUserSelection !== null) {
                        data.options[retrieveUserSelection.colorIdx].selected = true;
                    } else {
                        data.options[0].selected = true;
                    }
                }
                return this.template($.extend({}, this.dataOptions.colorData, data));
            }
        },
        renderExteriorImages: function(data) {
            var data = data || {
                options: []
            };
            var retrieveUserSelection = JSON.parse(localStorage.getItem('userSelection'));
            data.className = 'exterior-image';
            this.defaultConfigModel.indexIt(data.options);
            if (data.options.length > 0) {
                if (retrieveUserSelection !== null) {
                    data.options[retrieveUserSelection.exteriorAngleIdx].selected = true;
                    $(document).ajaxComplete(function() {
                        $('.exterior-image li.selected').trigger('click', ["e"]);
                    });
                } else {
                    data.options[this.exteriorAngleImagePosition].selected = true;
                }
            }
            return this.template(data);
        },
        renderInteriorImages: function(data) {
            var data = data || {
                options: []
            };
            data.className = 'interior-image';
            this.defaultConfigModel.indexIt(data.options);
            return this.template(data || {});
        },
        renderIDF: function(data) {
            var data = this.defaultConfigModel.get('idf');
            data.className = 'idf-image';
            this.defaultConfigModel.indexIt(data);
            return this.template(data);
        },
        updateColorSelector: function() {
            this.$el.find('.' + this.dataOptions.colorData.className + '-wrapper').replaceWith(this.renderColors());
        },
        updateImages: function(data) {
            if (typeof data.exteriorImagePack === 'object' && data.exteriorImagePack.options.length > 0) {
                this.updateExteriorImages(data.exteriorImagePack);
            } else {
                this.updateExteriorImages(data.exteriorImages);
            }
            this.updateInteriorImages(data.interiorImages);
            this.updateIdf(data.idf);
            this.mediator.notify('selectorReady', this.aggregatedSelectorData);
        },
        updateExteriorImages: function(data) {
            this.$el.find('.exterior-image-wrapper').replaceWith(this.renderExteriorImages(data));
            this.aggregatedSelectorData.exteriorImages = data;
            var retrieveUserSelection = JSON.parse(localStorage.getItem('userSelection'));
            if (data.options.length > 0) {
                if (retrieveUserSelection !== null) {
                    this.mediator.notify('vehicleImageChange', {
                        index: retrieveUserSelection.exteriorAngleIdx,
                        images: data.options[retrieveUserSelection.exteriorAngleIdx].images
                    });
                    if (this.aggregatedSelectorData.imagePack) {
                        this.$el.find('.exterior-image-wrapper > img').get(0).src = this.exteriorImages.get(retrieveUserSelection.exteriorAngleIdx, 'exteriorImagePack', 'thumbnail');
                    } else {
                        this.$el.find('.exterior-image-wrapper > img').get(0).src = this.exteriorImages.get(retrieveUserSelection.exteriorAngleIdx, 'exteriorImages', 'thumbnail');
                    }
                } else {
                    this.mediator.notify('vehicleImageChange', {
                        index: this.exteriorAngleImagePosition,
                        images: data.options[this.exteriorAngleImagePosition].images
                    });
                    if (this.aggregatedSelectorData.imagePack) {
                        this.$el.find('.exterior-image-wrapper > img').get(0).src = this.exteriorImages.get(this.exteriorAngleImagePosition, 'exteriorImagePack', 'thumbnail');
                    } else {
                        this.$el.find('.exterior-image-wrapper > img').get(0).src = this.exteriorImages.get(this.exteriorAngleImagePosition, 'exteriorImages', 'thumbnail');
                    }
                }
            } else {
                this.mediator.notify('imageResourceUnavailable', {});
                this.$el.find('.exterior-image-wrapper').fadeOut();
            }
        },
        updateInteriorImages: function(data) {
            if (data.options.length > 0) {
                this.$el.find('.interior-image-wrapper').replaceWith(this.renderInteriorImages(data));
                $('.interior-image-wrapper > img').attr("src", data.options[0].thumbnail[0]);
            } else {
                this.$el.find('.interior-image-wrapper').fadeOut();
            }
            this.aggregatedSelectorData.interiorImages = data;
        },
        updateIdf: function(data) {
            var list = $('.idf-image-wrapper ul');
            if (list.length) {
                if (list.is(':empty')) {
                    list.fadeOut();
                } else {
                    this.$el.find('.idf-image-wrapper').replaceWith(this.renderIDF(data));
                }
            } else {
                $('.idf-image-wrapper').fadeOut();
            }
            this.aggregatedSelectorData.idf = data;
        },
        updateThumbnails: function() {
            this.$el.find('.' + this.dataOptions.bsData.className.replace(' ', '.') + '-wrapper > img').get(0).src = this.selectedBodyStyle.imagePath;
            if (this.selectedColor != undefined) {
                this.$el.find('.' + this.dataOptions.colorData.className.replace(' ', '.') + '-wrapper > img').get(0).src = this.selectedColor.imagePath;
            }
        }
    };
    root.SelectorView = function(options) {
        return new SelectorView(options);
    };
}.call(EP2);
! function() {
    var root = this;
    var defaults = {
        el: '#vvmRoot'
    };
    var VehicleTemplateRenderer = function(data, mediator, options) {
        this.data = data;
        this.options = $.extend({}, defaults, options);
        this.$el = $(this.options.el);
        this.viewportWidth = this.$el.parent().width();
        this.$el.width(data.vehicles.length * this.viewportWidth);
        this.mediator = mediator;
        this.mediator.subscribe(EP2.XAxis.Events.MOVE, this.onPointerClicked, this);
        this.mediator.subscribe('vehicleImageChange', this.onVehicleImageChange, this);
        this.mediator.subscribe('imageResourceUnavailable', this.onResourceUnavailable, this);
        this.template = this.options.template || Handlebars.compile($('#vehicleTemplate').html());
        this.currentPosition = this.findStart();
        this.$el.css({
            "margin-left": -(this.currentPosition * this.viewportWidth)
        });
        this.sendNotify(this.currentPosition);
        this.suppressImageChange = true;
    };
    VehicleTemplateRenderer.prototype = {
        render: function() {
            var templatedHTML = this.template(this.data);
            this.$el.html(templatedHTML);
            this.$heroes = this.$el.find('.image-holder');
            this.$backgrounds = this.$el.find('.vehicle-background');
            this.$disclaimers = this.$el.find('.nameplate-disclaimer');
        },
        findStart: function() {
            var len = this.data.vehicles.length;
            while (len--) {
                if (this.data.vehicles[len].current === true) {
                    return len;
                }
            }
            return 0;
        },
        getCurrentVehicle: function() {
            return this.data.vehicles[this.currentPosition];
        },
        slide: function(where) {
            var where = where || this.currentPosition;
            this.$el.animate({
                "margin-left": -(where * this.viewportWidth)
            }, 900, 'inOutQuad', this.sendNotify.bind(this, where));
        },
        onVehicleImageChange: function(payload) {
            if (this.suppressImageChange) {
                this.suppressImageChange = false;
                return;
            }
            $(this.$heroes[this.currentPosition]);
            var vehicleImageLoader = new EP2.ResourceLoader({
                url: payload.images,
                callback: this.renderImages.bind(this)
            }).load();
            var bgImage = this.getCurrentVehicle().backgroundImagePath[payload.index];
            this.currentImageIndex = payload.index;
            var currentImage = $(this.$backgrounds[this.currentPosition]).css('background-image');
            var currentBg = $(this.$backgrounds[this.currentPosition]);
            if (bgImage !== ('null' || null)) {
                if (currentImage.indexOf(bgImage) === -1) {
                    bgImage = [bgImage];
                    currentBg.stop(true, true).fadeOut(350);
                    var backgroundImageLoader = new EP2.ResourceLoader({
                        url: bgImage,
                        callback: this.updateBackgroundImage.bind(this)
                    }).load();
                }
            } else {
                currentBg.css('background-image', 'none');
            }
            var disclaimer = $(this.$disclaimers[this.currentPosition]);
            var color = this.getCurrentVehicle().disclaimerTextColor[0];
            if (color != null) {
                disclaimer.css('color', '#' + color);
            } else {
                disclaimer.css('color', '');
            }
        },
        onResourceUnavailable: function() {
            if (this.suppressImageChange) {
                this.suppressImageChange = false;
                return;
            }
            $(this.$heroes[this.currentPosition]).stop(true, true).fadeOut();
        },
        renderImages: function(images) {
            var hero = $(this.$heroes[this.currentPosition]),
                len = images.length,
                i = 0;
            hero.empty();
            for (i; i < len; i++) {
                hero.append(images[i].resource);
            }
            hero.stop(true, true).fadeIn();
        },
        updateBackgroundImage: function(images) {
            var bg = $(this.$backgrounds[this.currentPosition]);
            bg.css('background-image', 'url("' + images[0].url + '")');
            bg.css('background-size', 'cover');
            bg.stop(true, true).fadeIn(750);
        },
        sendNotify: function(index) {
            this.mediator.notify('vehicleChange', {
                vehicleIndex: index,
                data: this.data.vehicles[index]
            });
        },
        onPointerClicked: function(payload) {
            var oldPos = this.currentPosition;
            if (payload.direction === 'right') {
                this.currentPosition = this.currentPosition > 0 ? this.currentPosition - 1 : (this.data.vehicles.length - 1);
            } else {
                this.currentPosition = this.currentPosition < this.data.vehicles.length - 1 ? this.currentPosition + 1 : 0;
            }
            if (oldPos != this.currentPosition)
                this.timeout = setTimeout(this.slide.bind(this), 750);
        }
    };
    root.VehicleTemplateRenderer = function(data, options) {
        return new VehicleTemplateRenderer(data, options);
    };
}.call(EP2);
! function() {
    var hasStorage = Modernizr.sessionstorage;
    var storage = hasStorage ? window.sessionStorage : {};
    var nativeStorageMethods = {
        init: function(key) {
            storage[this.sessionKey] = storage[this.sessionKey] || '{}';
        },
        set: function(data) {
            storage[this.sessionKey] = JSON.stringify(data);
        },
        get: function() {
            return JSON.parse(storage[this.sessionKey]);
        },
        drop: function() {
            delete storage[this.sessionKey];
        }
    };
    var fallbackStorageMethods = {
        init: function() {
            storage[this.sessionKey] = {};
        },
        set: function(data) {
            storage[this.sessionKey] = data;
        },
        get: function() {
            return storage[this.sessionKey];
        },
        drop: function() {
            storage[this.sessionKey] = {};
        }
    };
    var JSONSessionStore = function(sessionStorageKey) {
        this.sessionKey = sessionStorageKey;
        this.init();
    };
    JSONSessionStore.prototype = fallbackStorageMethods;
    var root = this;
    var VehicleDataCache = function(bootstrapData, mediator) {
        this.baseData = bootstrapData;
        this.vehicleDataCache = new JSONSessionStore('vehicleDataCache');
        this.selectorDataURL = '/cs/ContentServer?pagename=' + EP2.getSiteName() + '/EP2/body/cars/xaxis_detailed/SelectorBlock';
        this.mediator = mediator;
        this.init();
    };
    VehicleDataCache.prototype = {
        init: function() {
            this.mediator.subscribe('vehicleChange', this.fetchSelectorData, this);
        },
        fetchSelectorData: function(payload) {
            var vehicleData = this.baseData.vehicles[payload.vehicleIndex];
            var vehicleCode = vehicleData.uscCode;
            var seriesCode = vehicleData.seriesCode;
            var vehicletype = vehicleData.vehicleType;
            var catalogid = vehicleData.catalogId;
            var gforcemode = EP2.getGforceMode();
            if (this.fromStorage(vehicleCode))
                return;
            $.ajax({
                url: this.selectorDataURL,
                error: function() {},
                dataType: 'json',
                data: {
                    uscCode: vehicleCode,
                    seriesCode: seriesCode,
                    vehicleType: vehicletype,
                    catalogId: catalogid,
                    gforceMode: gforcemode,
                    presid: vehicleimagepackpresid
                },
                success: this.addToDataSet.bind(this, vehicleCode, vehicleData)
            });
        },
        addToDataSet: function(vehicleCode, vehicleData, selectorData) {
            this.currentVehicle = vehicleCode;
            var aggregatedData = $.extend({}, vehicleData, selectorData);
            var dataSet = this.vehicleDataCache.get();
            dataSet[vehicleCode] = aggregatedData;
            this.vehicleDataCache.set(dataSet);
            this.notify(aggregatedData);
        },
        updateStoredConfiguration: function(payload) {
            var dataSet = this.vehicleDataCache.get();
            dataSet[this.currentVehicle].configuration = payload;
            this.vehicleDataCache.set(dataSet);
        },
        fromStorage: function(vehicleCode) {
            var value = this.vehicleDataCache.get()[vehicleCode];
            if (value && (typeof value != 'undefined')) {
                this.notify(value);
                return true;
            }
            return false;
        },
        notify: function(data) {
            var data = data;
            this.mediator.notify('vehicleDataRequested', data)
        }
    };
    root.VehicleDataCache = function(data, mediator) {
        return new VehicleDataCache(data, mediator);
    };
}.call(EP2);
! function() {
    var root = this;
    var defaults = {
        el: '#nameplateDetails'
    };
    var NameplateDetailsView = function(options) {
        this.options = $.extend({}, defaults, options);
        this.template = this.options.template || Handlebars.compile($('#nameplateDetailsTemplate').html());
        this.mediator = this.options.mediator;
        this.$el = $(this.options.el);
        this.mediator.subscribe('vehicleDataRequested', this.render, this);
        this.mediator.subscribe(EP2.XAxis.Events.MOVE, this.hide, this);
    };
    NameplateDetailsView.prototype = {
        render: function(data) {
            this.$el.html(this.template(data));
            this.$el.fadeIn();
        },
        hide: function() {
            this.$el.fadeOut();
        },
        show: function() {
            this.$el.fadeIn();
        }
    };
    root.NameplateDetailsView = function(options) {
        return new NameplateDetailsView(options);
    }
}.call(EP2);
! function() {
    var root = this;
    var defaults = {
        el: '#ctaDetails'
    };
    var CTAView = function(options) {
        Handlebars.registerHelper('ifCond', function(v1, operator, v2, options) {
            switch (operator) {
                case "==":
                    return (v1 == v2) ? options.fn(this) : options.inverse(this);
                case "!=":
                    return (v1 != v2) ? options.fn(this) : options.inverse(this);
                case "===":
                    return (v1 === v2) ? options.fn(this) : options.inverse(this);
                case "!==":
                    return (v1 !== v2) ? options.fn(this) : options.inverse(this);
                case "&&":
                    return (v1 && v2) ? options.fn(this) : options.inverse(this);
                case "||":
                    return (v1 || v2) ? options.fn(this) : options.inverse(this);
                case "<":
                    return (v1 < v2) ? options.fn(this) : options.inverse(this);
                case "<=":
                    return (v1 <= v2) ? options.fn(this) : options.inverse(this);
                case ">":
                    return (v1 > v2) ? options.fn(this) : options.inverse(this);
                case ">=":
                    return (v1 >= v2) ? options.fn(this) : options.inverse(this);
                default:
                    return options.inverse(this);
            }
        });
        this.options = $.extend({}, defaults, options);
        this.template = this.options.template || Handlebars.compile($('#ctaTemplate').html());
        this.mediator = this.options.mediator;
        this.$el = $(this.options.el);
        this.mediator.subscribe('vehicleDataRequested', this.render, this);
        this.mediator.subscribe(EP2.XAxis.Events.MOVE, this.hide, this);
    };
    CTAView.prototype = {
        render: function(data) {
            this.$el.html(this.template(data.cta));
            this.$el.fadeIn();
        },
        hide: function() {
            this.$el.fadeOut();
        },
        show: function() {
            this.$el.fadeIn();
        }
    };
    root.CTAView = function(options) {
        return new CTAView(options);
    };
}.call(EP2);
! function() {
    var root = this;
    var NameplateCarouselFacade = function(mediator, carousel) {
        this.template = Handlebars.compile($('#carouselSlideTemplate').html());
        this.mediator = mediator;
        this.mediator.subscribe('vehicleChange', this.render, this);
        this.mediator.subscribe('overlayOpen', this.pause, this);
        this.mediator.subscribe('overlayClose', this.start, this);
        this.mediator.subscribe(EP2.XAxis.Events.MOVE, this.fade, this);
        this.carousel = carousel;
    };
    NameplateCarouselFacade.prototype = {
        render: function(payload) {
            if (payload.data.promos && payload.data.promos.length > 0) {
                this.carousel.refresh(this.template(payload.data));
                this.carousel.$el.fadeIn();
                setTimeout(this.start.bind(this), 2500);
            }
        },
        start: function() {
            this.carousel.start();
        },
        pause: function() {
            this.carousel.pause();
        },
        fade: function() {
            this.pause();
            this.carousel.$el.fadeOut();
        }
    };
    root.NameplateCarouselFacade = function(mediator, carousel) {
        return new NameplateCarouselFacade(mediator, carousel);
    }
}.call(EP2);
! function() {
    var root = this;
    var defaults = {
        onSuccess: function() {},
        onError: function() {}
    };
    var VehicleExteriorImageModel = function(data, uscCode, seriesCode, vehicleType, catalogId, options, presId) {
        this.bootstrap(data, uscCode, seriesCode, vehicleType, catalogId, presId);
        this.init(options);
    };
    VehicleExteriorImageModel.prototype = {
        bootstrap: function(data, uscCode, seriesCode, vehicleType, catalogId, presId) {
            this.data = data;
            this.uscCode = uscCode;
            this.seriesCode = seriesCode;
            this.vehicleType = vehicleType;
            this.catalogId = catalogId;
            this.presId = presId;
        },
        init: function(options) {
            this.options = $.extend({}, defaults, options);
        },
        data: {},
        url: function(extraCodes) {
            return '/cs/ContentServer?pagename=' + EP2.getSiteName() + '/EP2/common/service/VehicleImageService&vehicleType=' + this.vehicleType + '&catalogId=' + this.catalogId + '&n=' + this.uscCode + '&s=' + this.seriesCode + '&site=' + EP2.getSiteName() + '&gforceMode=' + EP2.getGforceMode() + extraCodes + '&modelYear=' + vehicleimagepackyear + '&presId=' + this.presId;
        },
        fetch: function(payload, vehicleType) {
            var extraCodes = '';
            for (var key in payload) {
                if (payload[key] != undefined) {
                    if (payload[key]['usc']) {
                        extraCodes += ('&' + key + '=' + payload[key]['usc']);
                    }
                }
            }
            this.xhr = $.ajax({
                url: this.url(extraCodes),
                success: this.onSuccess.bind(this),
                error: this.onError.bind(this),
                dataType: 'json'
            });
        },
        reconcile: function(data, key) {
            var d = data[key];
            if ((!typeof d !== "undefined") && EP2.Utils.objectHasProperties(data) && EP2.Utils.objectHasProperties(d)) {
                var len = d.options.length;
                while (len--) {
                    d.options[len].imagePath = d.options[len].thumbnail;
                    d.options[len].images = d.options[len].image;
                }
            } else d = {
                options: ""
            };
            return d;
        },
        onSuccess: function(data) {
            if (!$.isEmptyObject(data)) {
                this.data['exteriorImagePack'] = this.reconcile(data, 'exteriorImagePack');
                this.data['exteriorImages'] = this.reconcile(data, 'exteriorImages');
                this.data['interiorImages'] = this.reconcile(data, 'interiorImages');
                this.data['idf'] = this.reconcile(data, 'idf');
                this.options.onSuccess(this.data);
            }
        },
        onError: function(error) {
            this.options.onError(error);
            console.log(error);
        },
        get: function(index, key, type) {
            var type = type || 'images';
            if (this.data[key].options[index] != undefined) {
                return this.data[key].options[index][type];
            }
        }
    };
    root.VehicleExteriorImageModel = VehicleExteriorImageModel;
}.call(EP2);
var EP2 = EP2 || {};
!(function(window, document, undefined) {
    'use strict';
    EP2.topNavigation = function() {
        var dataAttr = "",
            searchbox = $('.searchBox'),
            underlayer = $('#underLayer'),
            hpCarouselEle = $('#hpCarousel'),
            activeLi = $('.doormat').find('li.active').index();
        $('#wrapper').append('<div id="underLayer"></div>');
        $('.doormat').find('li.active, li.selected').removeAttr('class');
        var menu = {
            menuEvent: function() {
                var $el = $('#sections .levelOne');
                $el.on({
                    'mouseover': function(e) {
                        e.stopPropagation();
                        var $this = $(this);
                        var findchild = $this.find('.doormat');
                        dataAttr = $this.attr('data-nav');
                        $this.addClass('focused');
                        if (findchild.length) {
                            $this.find('> a').css('height', '27px');
                            if (hpCarouselEle.length) {
                                hpCarouselEle.cycle('pause');
                            }
                        }
                        if (dataAttr == "cv" || dataAttr == "pv") {
                            $('#underLayer').css({
                                display: 'block',
                                opacity: 0.6
                            });
                        }
                        searchbox.css('zIndex', 0);
                    },
                    'mouseleave': function(e) {
                        e.stopPropagation();
                        var $this = $(this);
                        var findchild = $this.find('.doormat');
                        $this.removeClass('focused');
                        if (findchild.length) {
                            $this.find('> a').removeAttr('style');
                            if (hpCarouselEle.length) {
                                hpCarouselEle.cycle('resume');
                            }
                        }
                        $('#underLayer').css({
                            display: 'none',
                            opacity: 0
                        });
                        searchbox.removeAttr('style');
                    }
                });
            },
            cvmenu: function() {
                var navSelector = $('.primary-nav-items');
                var childListElement = $('.navigation-grid-items');
                menu.menuEvent();
                navSelector.wrap('<div class="cvInnerWrap"></div>');
                navSelector.after('<div class="list-content"></div>');
                childListElement.each(function(i, v) {
                    $('.navigation-grid-wrapper .list-content').append($(this));
                });
                $('.cvInnerWrap').tabbifiedContent({
                    navEle: '.primary-nav-items li a',
                    tabPanelSelector: '.navigation-grid-items',
                    selectedTabLink: activeLi,
                    tabNavEvent: 'mouseenter',
                    afterTabSelected: function() {
                        var $this = $('.cvInnerWrap').find('.primary-nav-items li a');
                        $this.on('click', function(e) {
                            e.preventDefault();
                        });
                    }
                });
            },
            pvmenu: function() {
                if ($('.innerWrap').length) {
                    $('.innerWrap').tabbifiedContent({
                        tabPanelSelector: '.tabContent',
                        tabNavEvent: 'mouseenter'
                    });
                }
            },
            underLayer: function() {
                underlayer.css({
                    opacity: 0.3,
                    display: 'block',
                    height: $(window).height()
                });
                underlayer.stop(true).fadeIn();
            }
        };
        menu.pvmenu();
        menu.cvmenu();
        menu.menuEvent();
    };
    return EP2.topNavigation();
})(jQuery, window, document);
! function() {
    var root = this;
    var InteriorImageCarouselFacade = function(mediator) {
        this.carousel = EP2.Carousel({
            el: $('#intImageCarousel').hide(),
            autoPlay: false,
            interval: 1000
        });
        this.mediator = mediator;
        this.mediator.subscribe('selectorReady', this.render, this);
        this.mediator.subscribe(EP2.XAxis.Events.MOVE, this.fade, this);
        this.mediator.subscribe('interiorImageSelected', this.show, this);
        this.template = Handlebars.compile($('#interiorImageCarouselSlideTemplate').html());
        this.fade();
    };
    InteriorImageCarouselFacade.prototype = {
        render: function(payload) {
            this.carousel.refresh(this.template(payload.interiorImages));
        },
        fade: function() {
            this.carousel.$el.fadeOut();
            this.carousel.stop();
        },
        show: function(payload) {
            this.carousel.$el.fadeIn();
            this.carousel.jumpTo(payload.index);
            this.carousel.buildIndicator();
            this.carousel.buildPointers();
            this.carousel.start(true);
            overlayer.open({
                content: this.carousel.$el,
                onClose: function() {
                    this.mediator.notify('overlayClosed', {});
                    this.fade();
                    this.carousel.$el.appendTo('body');
                }.bind(this)
            });
            this.mediator.notify('overlayOpen', {});
            this.slideSize();
        },
        slideSize: function(payload) {
            var slideSize = this.carousel.$el.find('.slide-wrapper .slide').index();
            if (slideSize > 1) {
                this.carousel.$el.find('nav').show('fast');
            } else {
                this.carousel.$el.find('nav').hide('fast');
            }
        }
    };
    root.InteriorImageCarouselFacade = function(mediator, carousel) {
        return new InteriorImageCarouselFacade(mediator, carousel);
    }
}.call(EP2);
! function() {
    var root = this;
    var defaults = {
        el: '#vvmWrapper',
        templateSelector: '#vehicleRolloverTemplate'
    };
    var VehicleRolloverController = function(mediator, baseData, options) {
        this.options = $.extend({}, defaults, options);
        this.mediator = mediator;
    };
    VehicleRolloverController.prototype = {
        init: function() {
            this.mediator.subscribe('vehicleChange', this.onVehicleChange, this);
            this.template = Handlebars.compile($(this.options.templateSelector).html());
            this.$el = $(this.options.el);
        },
        onVehicleChange: function(payload) {
            var currentIndex = payload.vehicleIndex;
            var dataSet = {
                rollovers: []
            };
            if (currentIndex < this.data.vehicles.length - 1) {
                dataSet.rollovers.push(this.data.vehicles[currentIndex + 1]);
                dataSet.rollovers[0].className = 'right';
            }
            if (currentIndex > 0) {
                dataSet.rollovers.push(this.data.vehicles[currentIndex - 1]);
                dataSet.rollovers.length > 1 ? dataSet.rollovers[1].className = 'left' : dataSet.rollovers[0].className = 'left';
            }
            this.render(dataSet);
        },
        render: function(data) {
            var out = this.template(data);
            this.$el.find('.vehicle-preview-rollover').remove();
            this.$el.append(out);
        }
    };
    root.VehicleRolloverController = function(mediator, baseData, options) {}
}.call(EP2);
EP2 = EP2 || {};
EP2.initVehicleNameplate = function() {
    var $vvmRoot = $('#vvmRoot');
    if ($vvmRoot.length === 0)
        return null;
    var xmediator = EP2.Globals.Mediator || new EP2.Mediator();
    if (Modernizr.history && EP2.historyEnabled) {
        var axisPointerController = new EP2.XAxis.NavControls.ViewController({
            clickableElements: $('.pointer'),
            mediator: xmediator
        });
    }
    EP2.Globals.ssv = new EP2.SelectorView({
        mediator: xmediator
    });
    EP2.Globals.npd = EP2.NameplateDetailsView({
        mediator: xmediator
    });
    EP2.Globals.cta = EP2.CTAView({
        mediator: xmediator
    });
    xmediator.subscribe('vehicleChange', function(payload) {
        var bounds;
        if ((payload.vehicleIndex === 0) || payload.vehicleIndex === bootstrapVehicleData.vehicles.length - 1) {
            bounds = (payload.vehicleIndex === 0) ? 'start' : 'end';
        } else {
            bounds = 'active';
        }
        if (Modernizr.history && EP2.historyEnabled) {
            xmediator.notify(EP2.XAxis.Events.THRESHOLD, {
                bounds: bounds
            });
        } else {
            if (payload.vehicleIndex === 0) {
                $('.x-axis-wrapper > .pointer.right').show();
            } else if (payload.vehicleIndex === bootstrapVehicleData.vehicles.length - 1) {
                $('.x-axis-wrapper > .pointer.left').show();
            } else {
                $('.x-axis-wrapper > .pointer').show();
            }
        }
    }, this);
    EP2.VehicleRolloverController(xmediator, bootstrapVehicleData);
    EP2.Globals.dc = new EP2.VehicleDataCache(bootstrapVehicleData, xmediator);
    EP2.Globals.vvm = new EP2.VehicleTemplateRenderer(bootstrapVehicleData, xmediator);
    EP2.Globals.vvm.render();
    EP2.InteriorImageCarouselFacade(xmediator);
    xmediator.subscribe('vehicleChange', function(payload) {
        $('.breadCrumb ul li:eq(2)').text(payload.data.nameplate);
        $.ajax({
            url: '/cs/ContentServer?pagename=' + EP2.getSiteName() + '/EP2/body/cars/xaxis_detailed/M24_PrimaryTabsBlock&site=' + EP2.getSiteName() + '&cid=' + payload.data.cid + '&c=Page',
            success: function(data) {
                $('.nameplate-tab-content').get(0).innerHTML = data;
                var jaxer = new EP2.Link({
                    mediator: EP2.Globals.Mediator,
                    selector: '.js-link',
                    target: '.nameplate-main-content'
                });
                $('.js-link').click(function() {
                    $(this).closest('li').siblings('li').removeClass('selected');
                    $(this).closest('li').addClass('selected');
                });
                EP2.initializeMidpageTabs();
            }
        });
    }, this);
    if (EP2.Globals.promoCarousel) {
        EP2.Globals.mameplateCarouselFacade = EP2.NameplateCarouselFacade(xmediator, EP2.Globals.promoCarousel.carousel);
    }
    var hoverIn = function(e) {
        var $el = $(this),
            $parent = $el.parent();
        if ($parent.hasClass('left')) {
            $('.vehicle-preview-rollover.left').addClass('active');
        }
        if ($parent.hasClass('right')) {
            $('.vehicle-preview-rollover.right').addClass('active');
        }
    };
    var hoverOut = function(e) {
        var $el = $(this),
            $parent = $el.parent();
        if ($parent.hasClass('left')) {
            $('.vehicle-preview-rollover.left').removeClass('active');
        }
        if ($parent.hasClass('right')) {
            $('.vehicle-preview-rollover.right').removeClass('active');
        }
    };
    $('.vehicle-preview-rollover').on('mouseover click', function(e) {
        if (e.type === 'click') {
            if ($(this).hasClass('left')) document.location = $('a.pointer.left').attr('href');
            else document.location = $('a.pointer.right').attr('href');
        } else {
            if ($(this).hasClass('left')) $('a.pointer.left').toggleClass("hover");
            else $('a.pointer.right').toggleClass("hover");
        }
        $(this).addClass('active');
    });
    $('.vehicle-preview-rollover').on('mouseout', function() {
        if ($(this).hasClass('left')) $('a.pointer.left').toggleClass("hover");
        else $('a.pointer.right').toggleClass("hover");
        $(this).removeClass('active');
    });
    $(function() {
        new EP2.DeferredImageLoader();
        $('#vvmWrapper .pointer span').hover(hoverIn, hoverOut);
    });
};
EP2.initSeriesDetailsSelectors = function() {
    if ($('#yAxis-detailed').length === 0) {
        return;
    }
    var url = '/cs/ContentServer?pagename=' + EP2.getSiteName() + '/EP2/body/cars/yaxis_detailed/SeriesSelectorBlock&seriesUscCode=' + seriesUscCode + '&nameplateUscCode=' + nameplateUscCode + '&gforceMode=' + EP2.getGforceMode();
    var bootstrap = {
        data: {
            uscCode: nameplateUscCode,
            seriesCode: seriesUscCode
        }
    };
    var baseLink = $('#bp-yaxis-links a').attr('href');
    var ymediator = EP2.Globals.Mediator || new EP2.Mediator();
    ymediator.subscribe('userConfigChange', function(payload) {
        $('#bp-yaxis-links a').attr('href', baseLink + '?features=C' + seriesUscCode + ':C' + payload.b.usc + ':C' + payload.c.usc);
    }, this);
    EP2.Globals.ssv = new EP2.SelectorView({
        mediator: ymediator
    });
    EP2.Globals.ssv.updateUSC(bootstrap);
    $.ajax({
        url: url,
        dataType: 'json',
        success: function(data) {
            data.exteriorImagePack = {};
            data.exteriorImages = {};
            data.interiorImages = {};
            ymediator.notify('vehicleDataRequested', data);
        }
    })
    var VehicleHeroFacade = function(mediator) {
        this.hero = $('#series-hero-holder');
        this.background = $('.vehicle-background');
        this.disclaimer = $('#disclaimerColor');
        mediator.subscribe('vehicleImageChange', this.onVehicleImageChange, this);
        mediator.subscribe('imageResourceUnavailable', this.onResourceUnavailable, this);
    };
    VehicleHeroFacade.prototype = {
        suppressImageChange: true,
        onVehicleImageChange: function(payload) {
            if (this.suppressImageChange) {
                return this.suppressImageChange = false;
            }
            this.hero.stop(true, true).fadeOut();
            var rl = new EP2.ResourceLoader({
                url: payload.images,
                callback: this.renderImages.bind(this)
            }).load();
            var bgImage = bootstrapVehicleData.backgroundImagePath[payload.index];
            var currentImage = this.background.css('background-image');
            if (bgImage !== ('null' || null)) {
                if (currentImage.indexOf(bgImage) === -1) {
                    bgImage = [bgImage];
                    this.background.stop(true, true).fadeOut(350);
                    var backgroundImageLoader = new EP2.ResourceLoader({
                        url: bgImage,
                        callback: this.updateBackgroundImage.bind(this)
                    }).load();
                }
            } else {
                this.background.css('background-image', 'none');
            }
            var color = bootstrapVehicleData.disclaimerTextColor[payload.index];
            if (color != (null || "null")) {
                this.disclaimer.css('color', '#' + color);
            } else {
                this.disclaimer.css('color', '');
            }
        },
        renderImages: function(images) {
            var len = images.length,
                i = 0;
            this.hero.empty();
            for (i; i < len; i++) {
                this.hero.append(images[i].resource);
            }
            this.hero.stop(true, true).fadeIn();
        },
        updateBackgroundImage: function(images) {
            this.background.css('background-image', 'url("' + images[0].url + '")');
            this.background.css('background-size', 'cover');
            this.background.stop(true, true).fadeIn(750);
        },
        onResourceUnavailable: function() {
            if (this.suppressImageChange) {
                this.suppressImageChange = false;
                return;
            }
            this.hero.stop(true, true).fadeOut();
        }
    };
    new VehicleHeroFacade(ymediator);
    EP2.InteriorImageCarouselFacade(ymediator);
};
$(function() {
    EP2.initVehicleNameplate();
    EP2.initSeriesDetailsSelectors();
})
readcookie = function(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
}
var mobileSnifferCheckRedirect = function() {
    var MobileSnifferCookieName, userAgent, forceAgents, i, n;
    MobileSnifferCookieName = "ford_mobile_sniffer_forcefullsite";
    if (readcookie(MobileSnifferCookieName) === null) {
        if (MobileHomePageRedirectURL != 'null') {
            if (ForceRedirectUserAgents !== 'null') {
                userAgent = window.navigator.userAgent.toLowerCase();
                forceAgents = ForceRedirectUserAgents.split(",");
                for (i = 0, n = forceAgents.length; i < n; i++) {
                    if (userAgent.indexOf(forceAgents[i].toLowerCase()) > -1) {
                        redirect();
                    }
                }
            }
            if (ForceRedirectMinWidth !== 'null' && screen !== undefined && screen.width !== undefined) {
                if (screen.width < Number(ForceRedirectMinWidth)) {
                    redirect();
                }
            }
        }
    }
};
var redirect = function() {
    var path = window.location.pathname;
    var pattern = new RegExp("^/+(home/*)$", "i");
    if (path == "/" || path.search(pattern) != -1) {
        window.location.href = MobileHomePageRedirectURL;
    } else if (MobileRedirectURL) {
        window.location.href = MobileRedirectURL;
    }
};
try {
    mobileSnifferCheckRedirect();
} catch (ignore) {}
if (typeof EP2.cookieLegislation == "undefined") EP2.cookieLegislation = new Object();
EP2.cookieLegislation.cookieName = 'ford_cookie_legislation_seen';
EP2.cookieLegislation.cookieExpiryDays = 730;
EP2.cookieLegislation.trigger = function() {
    if (this.hasSeenCookieLegislation()) {} else {
        this.display();
        EP2.cookieLegislation.cookie(EP2.cookieLegislation.cookieExpiryDays);
    }
};
EP2.cookieLegislation.hasSeenCookieLegislation = function() {
    return readcookie(this.cookieName) == "true" ? true : false;
};
EP2.cookieLegislation.display = function() {
    $('#cookieAlertBoxID').slideDown(1500);
    var closCookieAlert = function() {
        var closebtn = $('#closeBtnID, #btnLinkID');
        var otherBtn = $('#linkID');
        closebtn.bind('click', function(e) {
            e.preventDefault();
            EP2.cookieLegislation.cookie(EP2.cookieLegislation.cookieExpiryDays);
            $('#cookieAlertBoxID').slideUp(1500);
        });
        otherBtn.bind('click', function(e) {
            e.preventDefault();
            EP2.cookieLegislation.cookie(EP2.cookieLegislation.cookieExpiryDays);
            var getHREF = $(this).attr('href');
            $('#cookieAlertBoxID').css('display', 'none');
            location.href = getHREF;
        });
    };
    closCookieAlert();
};
EP2.cookieLegislation.cookie = function(days) {
    return document.cookie = this.cookieName + '=true', this.cookieExpiryDays + '=' + days;
};
EP2.cookieLegislation.appendIFrameSrc = function(elementId) {
    var src = $(elementId).attr('src');
    if (EP2.cookieLegislation.hasSeenCookieLegislation()) {
        src = src + "&hc=true";
    } else {
        src = src + "&hc=false";
    }
    $(elementId).attr('src', src);
};
if (typeof(SetReturnValue) == undefined || typeof(SetReturnValue) == null || typeof(SetReturnValue) != 'function' || typeof(SetReturnValue) != 'object') {
    var SetReturnValue = {}, SetReturnValue = function() {};
}
var EP2 = EP2 || {};
! function() {
    var defaults = {
        el: '.js-overlay'
    };
    EP2.overlayMediaPlayer = function(options) {
        this.options = $.extend({}, defaults, options);
        this.launchvid = $(this.options.el), this.createhiddenDiv = $('<div id="launchVid" class="visuallyhidden"></div>').append('body');
        var dataMedia = this.launchvid.data('media-overlay');
        var vSrcA = dataMedia.src1,
            vSrcB = dataMedia.src2,
            vW = dataMedia.width,
            vH = dataMedia.height,
            vidSrcFormat = "",
            vidtype = "";
        if (dataMedia !== undefined && dataMedia.mediaType == ("Video" || "video")) {
            var userAgent = window.navigator.userAgent;
            if ($.browser.mozilla || userAgent.match(/Chrome/i) || userAgent.match(/Opera/i)) {
                vidSrcFormat = vSrcB;
                vidtype = "video/webm";
            } else {
                vidSrcFormat = vSrcA;
                vidtype = "video/mp4";
            }
            var createVidElement = $('<video>');
            createVidElement.attr({
                'id': 'videodemo',
                controls: 'false',
                width: vW,
                height: vH,
                preload: 'none',
                type: vidtype,
                src: vidSrcFormat
            });
            $('#launchVid').html(createVidElement);
            var cloneVidElement = $('#launchVid').clone();
            overlayer.open({
                content: createVidElement,
                width: vW,
                height: vH
            });
            var el = $('#overlayBlock');
            var fadeinClsBtn = el.find('.closeBtn');
            var fadeoutClsBtn = el.find('.closeBtn');
            var leftPos = ((vW - 432) / 2) / vW;
            var repositionControls = function() {
                var getWidth = $('.mejs-container').width();
                var getHeight = $('.mejs-container').height();
                var newleftPos = ((getWidth - 432) / 2) / getWidth;
                var playBtnPos = (getHeight / 2) - 20;
                el.find('.mejs-controls').css({
                    'left': newleftPos * 100 + '%'
                });
                el.find('.mejs-overlay-button').css({
                    'margin-top': playBtnPos
                });
            };
            if (($.browser.msie && $.browser.version <= 9) || ($.browser.safari && userAgent.match(/Windows/i))) {
                var mode = 'shim';
            }
            $('video').mediaelementplayer({
                mode: mode,
                startVolume: 0.7,
                alwaysShowControls: false,
                pauseOtherPlayers: true,
                features: ['loadstart', 'playpause', 'progress', 'current', 'tracks', 'volume', 'fullscreen'],
                plugins: ['flash'],
                pluginPath: '/cs/ENGInE/flash/',
                flashName: 'flashmediaelement.swf',
                framesPerSecond: 25,
                alwaysShowHours: false,
                showTimecodeFrameCount: false,
                success: function(mediaElement, domObject) {
                    repositionControls();
                    mediaElement.pause();
                    mediaElement.addEventListener('timeupdate', function() {}, false);
                    mediaElement.addEventListener('play', function() {
                        mediaElement.play();
                    }, false);
                    mediaElement.addEventListener('ended', function() {}, false);
                },
                startLanguage: 'en',
                translations: ['es', 'ar', 'zh', 'ru'],
                translationSelector: false,
                enableKeyboard: true,
                error: function() {}
            });
            var elementHoverOn = $('.mejs-button');
            var timeHandler = $('.mejs-time-handle');
            elementHoverOn.on({
                'mouseover.vid': function() {
                    $(this).find('button').removeAttr('title');
                    $(this).find('.tooltip').stop(true, true).fadeIn();
                },
                'mouseleave.vid': function() {
                    $(this).find('.tooltip').stop(true, true).fadeOut();
                }
            });
            timeHandler.on({
                'mouseover.vid': function() {
                    $(this).find('button').removeAttr('title');
                    $(this).siblings('.tooltip').stop(true, true).fadeIn();
                },
                'mouseleave.vid': function() {
                    $(this).siblings('.tooltip').stop(true, true).fadeOut();
                }
            });
            $('.mejs-container .mejs-fullscreen-button').on('click.reposCntrl', function() {
                repositionControls();
            });
            $('.mejs-container .mejs-fullscreen-button.mejs-unfullscreen').on('click.reposCntrl', function() {
                repositionControls();
            });
            $(document).keydown(function(e) {
                $('.mejs-fullscreen-button.mejs-unfullscreen button').trigger('click.reposCntrl', function() {
                    repositionControls();
                });
                repositionControls();
            });
        }
    };
    EP2.overlayMediaPlayer.prototype.renderVideoInIE = function(options) {
        this.options = $.extend({}, defaults, options);
        ("prototype render");
        if (($.browser.msie && $.browser.version <= 9) || ($.browser.safari && userAgent.match(/Windows/i))) {
            new MediaElement('videodemo', {
                mode: 'shim',
                startVolume: 0.7,
                alwaysShowControls: false,
                pauseOtherPlayers: true,
                features: ['playpause', 'progress', 'current', 'tracks', 'volume', 'fullscreen'],
                plugins: ['flash'],
                pluginPath: '/cs/ENGInE/flash/',
                flashName: 'flashmediaelement.swf',
                timerRate: 250,
                success: function(vid, domObject) {
                    repositionControls();
                    mediaElement.pause();
                    mediaElement.addEventListener('play', function() {
                        mediaElement.play();
                    }, false);
                },
                error: function() {}
            });
        }
    };
}();
var EP2 = EP2 || {};
EP2.gobalMpgCalculator = function() {
    function calcuMpg() {
        var bnpFlag = $('#buildandprice'),
            bnpView = bnpFlag.find('#engineTransmissionPanel'),
            xAxisView = $('#cv-data-spec'),
            siteTermControl = bnpView.attr('data-siteTerm-dataGap'),
            elementAttr = bnpFlag.length > 0 ? bnpView.find(".panel-content td") : xAxisView.find('[data-mpg]');
        if (siteTermControl == 'true' || xAxisView.length > 0) {
            elementAttr.each(function(i, v) {
                var mpgVal = $(this).attr('data-mpg');
                var calvalue = '';
                if ((mpgVal !== null || mpgVal !== '') && mpgVal !== undefined) {
                    if (mpgVal.indexOf("-") != -1) {
                        mpgVal = mpgVal.replace(/\s/g, "");
                        var firstValue = mpgVal.substr(0, mpgVal.indexOf("-"));
                        var firstCalcValue = calculateMPGValue(firstValue);
                        var secondValue = mpgVal.substr(mpgVal.indexOf("-") + 1, mpgVal.length);
                        var secondCalcValue = calculateMPGValue(secondValue);
                        calvalue = '<span class="calculated-value"><span>' + firstValue + '</span>' + '(' + firstCalcValue + ')' + '<i>-</i>' + secondValue + '<span>(' + secondCalcValue + ')</span></span>';
                        if (mpgVal !== (null || undefined || "")) {
                            $(this).html(calvalue);
                        }
                    } else {
                        calvalue = calculateMPGValue(mpgVal);
                        if (mpgVal !== (null || undefined || "")) {
                            $(this).find('.calculated-value').html("(" + calvalue + ")");
                        }
                    }
                }
            });
        }
    }

    function calculateMPGValue(mpgVal) {
        var calvalue = '';
        if (mpgVal > 0) {
            calvalue = (282.48 / mpgVal).toFixed(1);
        }
        return calvalue;
    };
    return {
        init: function() {
            if ($('#cv-data-spec').length > 0) {
                calcuMpg();
            }
        },
        calcuMpg: function() {
            calcuMpg();
        }
    };
}();
$(function() {
    EP2.gobalMpgCalculator.init();
});
(window.onpopstate = function() {
    var match, pl = /\+/g,
        search = /([^&=]+)=?([^&]*)/g,
        decode = function(s) {
            return decodeURIComponent(s.replace(pl, " "));
        }, query = window.location.search.substring(1);
    urlParams = {};
    while (match = search.exec(query))
        urlParams[decode(match[1])] = decode(match[2]);
})();
if (!Array.prototype.indexOf) {
    Array.prototype.indexOf = function(searchElement) {
        "use strict";
        if (this == null) {
            throw new TypeError();
        }
        var t = Object(this);
        var len = t.length >>> 0;
        if (len === 0) {
            return -1;
        }
        var n = 0;
        if (arguments.length > 1) {
            n = Number(arguments[1]);
            if (n != n) {
                n = 0;
            } else if (n != 0 && n != Infinity && n != -Infinity) {
                n = (n > 0 || -1) * Math.floor(Math.abs(n));
            }
        }
        if (n >= len) {
            return -1;
        }
        var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);
        for (; k < len; k++) {
            if (k in t && t[k] === searchElement) {
                return k;
            }
        }
        return -1;
    }
}
if (!Object.create) {
    Object.create = function(o) {
        if (arguments.length > 1) {
            throw new Error('Object.create implementation only accepts the first parameter.');
        }

        function F() {}
        F.prototype = o;
        return new F();
    };
}
EP2.Utils = EP2.Utils || {};
EP2.Utils.queryObject = function(obj, key, val) {
    var objects = [];
    for (var k in obj) {
        if (!obj.hasOwnProperty(k)) continue;
        if (typeof obj[k] == 'object') {
            objects = objects.concat(EP2.Utils.queryObject(obj[k], key, val));
        } else if (k == key && obj[key] == val) {
            objects.push(obj);
        }
    }
    return objects;
};
EP2.CV = EP2.CV || {};
EP2.CV.BuildAndPrice = {
    isSelected: function(value) {
        return !!(['DEFAULT', 'SELECTED', 'INCLUDED'].indexOf(value) > -1);
    },
    each: function(arr, func) {
        var i = 0,
            len = arr.length;
        for (i; i < len; i++) {
            func(arr[i], i, arr);
        }
    }
};
EP2.Templates = {};
! function() {
    var root = this;
    var htmlEscapes = {
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        "'": '&#x27;',
        '/': '&#x2F;'
    };
    var htmlEscaper = /[&<>"'\/]/g;
    var htmlUnEscaper = /[&amp;&lt;&gt;&quot;&#x27;&#x2F;]/g;
    root.escape = function(string) {
        return ('' + string).replace(htmlEscaper, function(match) {
            return htmlEscapes[match];
        });
    };
    root.defaults = {
        evaluate: /{{%([\s\S]+?)%}}/g,
        interpolate: /{{=([\s\S]+?)}}/g,
        escape: /{{-([\s\S]+?)}}/g
    };
    root.partials = {};
    var helpers = {
        isSelected: function(value, returnVal) {
            return EP2.CV.BuildAndPrice.isSelected(value) ? returnVal : '';
        },
        isExcluded: function(value, returnVal) {
            return (value === 'EXCLUDED') ? returnVal : '';
        },
        loop: function(arr, func) {
            var i = 0,
                len = arr.length;
            for (i; i < len; i++) {
                func(arr[i], i, arr);
            }
        },
        partial: function(partialName, data) {
            return root.partials[partialName] ? root.partials[partialName]
                (data) : '';
        }
    };
    var escapers = {
        "'": "'",
        '\\': '\\',
        '\r': 'r',
        '\n': 'n',
        '\t': 't',
        '\u2028': 'u2028',
        '\u2029': 'u2029'
    };
    var noMatch = /(.)^/;
    root.template = function(tpl, data, options) {
        options = $.extend({}, root.defaults, options);
        var rgx = new RegExp([(options.escape || noMatch).source, (options.interpolate || noMatch).source, (options.evaluate || noMatch).source].join("|") + "|$", "g");
        var index = 0,
            render, source = "__p+='",
            escaper = /\\|'|\r|\n|\t|\u2028|\u2029/g;
        tpl.replace(rgx, function(match, escape, interpolate, evaluate, offset) {
            source += tpl.slice(index, offset).replace(escaper, function(match) {
                return "\\" + escapers[match];
            });
            if (escape) {
                source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
            }
            if (interpolate) {
                source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
            }
            if (evaluate) {
                source += "';\n" + evaluate + "\n__p+='";
            }
            index = offset + match.length;
            return match
        });
        source += "';\n";
        if (!options.variable)
            source = 'obj=obj||{};with(obj){\n' + source + '}\n';
        source = "var __t,__p='',__j=Array.prototype.join," + "print=function(){__p+=__j.call(arguments,'');};\n" + source + "return __p;\n";
        try {
            render = new Function(options.variable || 'obj', source);
        } catch (e) {
            e.source = source;
            throw e;
        }
        if (data) {
            data = $.extend({}, data, helpers);
            return render(data);
        }
        var template = function(data) {
            data = $.extend({}, data, helpers);
            return render.call(this, data);
        };
        template.source = 'function(' + (options.variable || 'obj') + '){\n' + source + '}';
        return template;
    };
    root.registerPartial = function(partialName, tpl) {
        root.partials[partialName] = typeof tpl === 'string' ? root.template(tpl) : tpl;
    }
}.call(EP2.Templates);
EP2.Forms = {};
EP2.Forms.RadioGroupBehaviour = function(root) {
    $(root).on('click', 'input[type=radio]', function() {
        var $self = $(this);
        $self.closest('.radio-group').find('.input-wrapper').removeClass('selected');
        $self.parent().addClass('selected');
    })
};
! function() {
    var root = this;
    var VehicleHeroFacade = function(mediator, heroSelector, template) {
        this.$hero = $(heroSelector);
        this.mediator = mediator;
        this.template = template;
        this.init();
    };
    VehicleHeroFacade.prototype = {
        init: function() {
            this.mediator.subscribe('vehicleImageChange', this.updateHero, this);
            this.mediator.subscribe('configurationChange', this.render, this);
            this.mediator.subscribe('featureGroupChange', this.switchToInterior, this);
            this.$hero.on('click', '.thumbnailAngleSwitcher', this.updateHero.bind(this));
            this.$hero.on('click', '.hero-angle-switcher-left', this.decrement.bind(this));
            this.$hero.on('click', '.hero-angle-switcher-right', this.increment.bind(this));
            this.currentIndex = 0;
        },
        increment: function(e) {
            e.preventDefault();
            var newIndex = this.currentIndex + 1 < this.availableHeroLength ? this.currentIndex + 1 : 0;
            this.updateHero({
                index: newIndex
            })
        },
        decrement: function(e) {
            e.preventDefault();
            var newIndex = this.currentIndex - 1 > -1 ? this.currentIndex - 1 : this.availableHeroLength - 1;
            this.updateHero({
                index: newIndex
            })
        },
        updateHero: function(e) {
            if (e.preventDefault)
                e.preventDefault();
            var idx = (!isNaN(parseFloat(e.index)) && isFinite(e.index)) ? e.index : $(e.target).closest('.thumbnailAngleSwitcher').data('idx'),
                type = e.type ? e.type : $(e.target).closest('.thumbnailAngleSwitcher').data('image-type');
            var images = this.data.images[idx].Hero;
            var vehicleImageLoader = new EP2.ResourceLoader({
                url: images,
                callback: this.renderImages.bind(this)
            }).load();
            this.currentIndex = idx;
            this.showHidePrevNext();
        },
        switchToInterior: function(featureGroup) {
            var len = this.data.images.length,
                i = 0;
            if (featureGroup.panelKey === 'trim') {
                for (i; i < len; i++) {
                    if (this.data.images[i].type === 'interior') {
                        this.updateHero({
                            index: i
                        });
                        break;
                    }
                }
            }
        },
        renderImages: function(images) {
            var len = images.length,
                i = 0,
                heroHolder = this.$hero.find('.hero-holder');
            heroHolder.empty();
            for (i; i < len; i++) {
                heroHolder.append(images[i].resource);
            }
            if (this.data.images[this.currentIndex].type === 'interior') {
                this.$hero.addClass('interior-hero')
            } else {
                this.$hero.removeClass('interior-hero');
            };
        },
        showHidePrevNext: function() {
            this.prevButton[this.currentIndex > 0 ? 'show' : 'hide']();
            this.nextButton[(this.currentIndex < (this.availableHeroLength - 1)) ? 'show' : 'hide']();
        },
        reconcile: function(data) {
            var imageArray, exts = data.ImageSet.exterior,
                ints = data.ImageSet.interior,
                len;
            len = exts.length;
            while (len--) {
                exts[len].type = 'exterior';
            }
            len = ints.length;
            while (len--) {
                ints[len].type = 'interior';
            }
            imageArray = exts.concat(ints);
            var defaultHero = '';
            if (this.currentIndex && (typeof imageArray[this.currentIndex] != 'undefined')) {
                defaultHero = imageArray[this.currentIndex].Hero;
            } else {
                if (typeof imageArray[0] != 'undefined') {
                    defaultHero = imageArray[0].Hero;
                }
            }
            var returnObj = {
                images: imageArray,
                defaultHero: defaultHero
            };
            return returnObj;
        },
        render: function(data) {
            this.data = this.reconcile(data);
            if (this.data.images && this.data.images[this.currentIndex]) {
                var images = this.data.images[this.currentIndex].Hero;
                var vehicleImageLoader = new EP2.ResourceLoader({
                    url: images,
                    callback: function() {
                        this.$hero.html(this.template(this.data));
                        this.availableHeroLength = this.$hero.find('.thumbnailAngleSwitcher').length;
                        this.prevButton = this.$hero.find('.hero-angle-switcher-left');
                        this.nextButton = this.$hero.find('.hero-angle-switcher-right');
                        this.showHidePrevNext();
                        this.mediator.notify('vehicleHeroRendered', {});
                    }.bind(this)
                }).load();
            }
        }
    };
    this.VehicleHeroFacade = function(mediator, heroSelector, template) {
        return new VehicleHeroFacade(mediator, heroSelector, template);
    }
}.call(EP2.CV.BuildAndPrice);
! function() {
    var root = this;
    var VehicleConfigurationManager = function() {
        this.init.apply(this, arguments);
        if (this.data.configState === null) {
            return;
        }
        this.notify();
    };
    VehicleConfigurationManager.prototype = {
        init: function(options) {
            if (!options.data) {
                throw new Error("VehicleConfigurationManager requires bootstrapped data to run.")
            }
            this.url = options.url || '/cs/ContentServer?pagename=' + EP2.getSiteName() + '/EP2/body/cvs/bp/CVConfiguratorService';
            this.mediator = options.mediator;
            this.data = options.data;
            this.mediator.subscribe('userConfigChange', this.getUpdatedModel, this);
            this.mediator.subscribe('conflictAccepted', this.notify, this);
            this.mediator.subscribe('conflictRejected', this.requestPreviousState, this);
        },
        getUpdatedModel: function(payload) {
            this.showConflict = payload.isConflicted;
            this.lastUserSelection = this.lookup(payload.WERSCode);
            var operation = payload.operation || 'update';
            params = {
                operation: operation,
                feature: payload.WERSCode,
                config_state: String(this.data.configState),
                selected: payload.selected,
                gforceMode: EP2.getGforceMode()
            };
            this.xhr = $.ajax({
                url: this.url,
                data: params,
                success: this.onDataSuccess.bind(this),
                error: this.error.bind(this)
            });
        },
        requestPreviousState: function() {
            var params = {
                operation: 'view',
                config_state: this.data.conflictResolution.rejectConfigState,
                site: EP2.getSiteName(),
                gforceMode: EP2.getGforceMode()
            };
            this.xhr = $.ajax({
                url: this.url,
                data: params,
                success: this.onDataSuccess.bind(this),
                error: this.error.bind(this)
            });
        },
        notify: function(data) {
            var data = data || this.data;
            this.mediator.notify('configurationChange', data);
        },
        onDataSuccess: function(data, msgCode, xhr) {
            if (!this.data) {
                console.log('Fatal error: request was successfull, but got no data');
                return;
            }
            this.previousConfigState = this.data.configState;
            if (EP2._bootstrappedIsConversion) {
                data.allSeries = data.allBodystyles;
            }
            this.data = data;
            if (this.data.conflictResolution) {
                var conflictData = this.data.conflictResolution;
                if (!conflictData.hasOwnProperty('selectedFeature')) {
                    conflictData.selectedFeature = this.lastUserSelection;
                }
                this.mediator.notify('conflictResolution', this.data.conflictResolution);
            } else {
                this.notify();
            }
        },
        error: function() {
            console.log('Error in XHR request');
            this.notify();
        },
        lookup: function(wersCode) {
            var matches = EP2.Utils.queryObject(this.data, 'WERSCode', wersCode);
            return matches.length > 0 ? matches[0] : {
                name: 'No Matching Feature Found'
            };
        }
    };
    root.VehicleConfigurationManager = function(mediator, bootstrapData) {
        return new VehicleConfigurationManager(mediator, bootstrapData);
    };
}.call(EP2.CV.BuildAndPrice);
! function() {
    var root = this;
    var ConflictResolutionFacade = function() {
        this.init.apply(this, arguments);
    };
    ConflictResolutionFacade.prototype = {
        init: function(options) {
            this.$el = $(options.el);
            this.template = options.template;
            this.mediator = options.mediator;
            this.mediator.subscribe('conflictResolution', this.showConflicts, this);
        },
        showConflicts: function(conflicts) {
            if (overlayer) {
                overlayer.open({
                    content: this.template(conflicts)
                });
            }
            $('#overlayBlock').on('click', '.conflictContinue', this.commitConflictChanges.bind(this))
            $('#overlayBlock').on('click', '.conflictCancel', this.rejectConflictChanges.bind(this))
            $('#overlayBlock').on('click', '.closeBtn', this.rejectConflictChanges.bind(this))
            if (overlayer) {
                $('body').on('click', '#overlay', this.rejectConflictChanges.bind(this))
            }
        },
        commitConflictChanges: function(e) {
            e.preventDefault();
            this.mediator.notify('conflictAccepted');
            overlayer.close();
            $('#overlayBlock').off('click', '.conflictContinue');
            $('#overlayBlock').off('click', '.conflictCancel');
            $('#overlayBlock').off('click', '.closeBtn');
            $('body').off('click', '#overlay');
            var func = EP2.tabslider('.tabOptions:visible');
            func;
            if (func !== undefined) {
                func.animateTabAfterPanelRefresh();
            }
        },
        rejectConflictChanges: function(e) {
            e.preventDefault();
            this.mediator.notify('conflictRejected');
            overlayer.close();
            $('#overlayBlock').off('click', '.conflictContinue');
            $('#overlayBlock').off('click', '.conflictCancel');
            $('#overlayBlock').off('click', '.closeBtn');
            $('body').off('click', '#overlay');
        }
    };
    root.ConflictResolutionFacade = function(options) {
        return new ConflictResolutionFacade(options);
    };
}.call(EP2.CV.BuildAndPrice);
! function() {
    var root = this;
    var Panel = function(mediator, template, el, dataKey, filterActive) {
        this.init.apply(this, arguments);
        this.filterActive = filterActive || true;
        this.hasExclusions = false;
    };
    Panel.prototype = {
        init: function(mediator, template, el, dataKey) {
            this.mediator = mediator;
            this.template = template;
            if (dataKey)
                this.dataKey = dataKey;
            this.$el = $(el);
            this.$content = this.$el.find('.panel-content');
            this.mediator.subscribe('configurationChange', this.render, this);
            this.$el.on('click', 'input,.config-element', this.notify.bind(this));
            this.$el.on('click', '.toggle-show-all', this.toggleShowAll.bind(this));
        },
        render: function(data) {
            if (data != undefined) {
                if (typeof this.dataKey !== 'undefined') {
                    if (data[this.dataKey].length === 0) {
                        return;
                    }
                }
                this.lastKnownDataSet = data;
                if (!this.suppressRender) {
                    var data;
                    this.prevExclusionState = this.hasExclusions;
                    var unFilteredData = this.parse(data);
                    this.hasExclusions = EP2.Utils.queryObject(unFilteredData, 'state', 'EXCLUDED').length > 0;
                    this.$el.toggleClass('no-exclusions', !this.hasExclusions);
                    data = this.parse(this.filterActive ? this.filter(data) : data);
                    this.$content.html(this.template(data));
                    this.carousels = this.$content.find('.genericListCarousel');
                    EP2.equalizer('#colorPanel .smallHeading');
                    EP2.equalizer('#featuresPanel .smallHeading');
                    EP2.equalizer('#modelPanel .smallHeading');
                    var $thisTab = $('#cvBPRoot').attr('data-idx');
                    if (this.carousels.length > 0) {
                        var len = this.carousels.length;
                        while (len--) {
                            var crsl = $(this.carousels[len]);
                            var cntrls = $(this.carousels[len]).parent().find('.nextPrevBtn').hide();
                            var pager = crsl.next('.paginate');
                            crsl.cycle('destroy');
                            if (crsl.children().length > 1) {
                                crsl.children('li.galleryView').css('text-align', 'left');
                                var factFunc = (function(c) {
                                    var controls = c;
                                    var l = len;
                                    return function(curr, next, opts) {
                                        var index = opts.currSlide;
                                        controls.find('.prevSlide')[index === 0 ? 'hide' : 'show']();
                                        controls.find('.nextSlide')[index === opts.slideCount - 1 ? 'hide' : 'show']();
                                    }
                                })(cntrls, len);
                                cntrls.show();
                                crsl.cycle({
                                    fx: 'scrollHorz',
                                    timeout: 0,
                                    cssBefore: {
                                        'text-align': 'left'
                                    },
                                    prev: this.$el.find('.prevSlide'),
                                    next: this.$el.find('.nextSlide'),
                                    startingSlide: data.startSlide,
                                    pager: pager.find('.indicator').empty(),
                                    after: factFunc
                                });
                                crsl.parent().addClass('has-pagination');
                            } else {
                                cntrls.hide();
                                pager.addClass('collapse');
                                crsl.closest('').removeClass('has-pagination');
                            }
                        }
                    }
                    if (typeof OM.bp == "object" && typeof OM.bp.userjourney == "function") {
                        if (typeof bp.carousel[$('.activeNameplate').index()].superGroupData == "object") {
                            OM.bp.userjourney(this.$el.selector, "cv", this.lastKnownDataSet, bp.carousel[$('.activeNameplate').index()].superGroupData);
                        } else if (typeof bp.carousel[$('.activeNameplate').index()].nameplateData == "object") {
                            OM.bp.userjourney(this.$el.selector, "cv", this.lastKnownDataSet, bp.carousel[$('.activeNameplate').index()].nameplateData);
                        }
                    }
                    this.suppressedData = null;
                    this.postRender();
                    this.mediator.notify('panelRendered', this);
                    this.$content.find('.tabOptions li').eq($thisTab).addClass('selected').siblings('li').removeClass('selected');
                } else {
                    this.suppressedData = this.lastKnownDataSet;
                    this.$content.find('.tabOptions li').eq($thisTab).addClass('selected').siblings('li').removeClass('selected');
                }
            }
        },
        toggleShowAll: function(e) {
            var $el = $(e.target);
            this.filterActive = !this.filterActive;
            $el.toggleClass('selected');
            var selectedTabIdx = this.$content.find('.tabOptions li.selected').attr('data-idx');
            this.suppressRender = false;
            this.render(this.lastKnownDataSet);
            var el = $('.tabOptions:visible').attr('id');
            var func = EP2.tabslider('.tabOptions:visible');
            func;
            if (func !== undefined) {
                func.animateTabAfterPanelRefresh();
            }
        },
        postRender: function() {},
        hide: function() {
            this.$el.hide();
            this.suppressRender = true;
        },
        show: function() {
            this.$el.show();
            if (this.suppressRender && this.suppressedData) {
                this.suppressRender = false;
                this.render(this.suppressedData)
            } else {
                this.suppressRender = false;
                this.render(this.lastKnownDataSet);
            }
        },
        notify: function(e) {
            var wersCode, isConflicted, feature;
            if (e.target.tagName === 'INPUT') {
                wersCode = e.target.value;
                feature = e.target.name;
            } else {
                e.preventDefault();
                wersCode = e.target.getAttribute('data-wers-code');
                feature = e.target.getAttribute('data-feature-type');
            }
            isConflicted = !! e.target.getAttribute('data-conflict');
            isSelected = !! e.target.getAttribute('data-selected');
            this.mediator.notify('userConfigChange', {
                WERSCode: wersCode,
                isConflicted: isConflicted,
                feature: feature,
                selected: !isSelected
            });
        },
        filter: function(data) {
            return data;
        },
        parse: function(data) {
            return data;
        }
    };
    root.Panel = Panel;
}.call(EP2.CV.BuildAndPrice);
! function() {
    var root = this;
    var PanelManager = function(mediator, options) {
        this.init.apply(this, arguments)
    };
    PanelManager.prototype = {
        activePanel: null,
        panels: {},
        panelCount: 0,
        init: function(mediator, options) {
            this.mediator = mediator;
            this.mediator.subscribe('featureGroupChange', this.switchPanels, this);
            this.startKey = window.urlParams.menuStartKey || EP2._bootstrappedHeadingMenuData[0].eventKey;
        },
        attachPanel: function(key, panel) {
            var panelObj = {
                seen: false,
                panel: panel
            };
            this.panels[key] = panelObj;
            if (typeof this.startKey !== 'undefined') {
                if (this.startKey === key) {
                    this.activePanel = panelObj;
                } else {
                    panel.hide();
                }
            } else {
                if (this.panelCount === 0) {
                    this.activePanel = panelObj;
                } else {
                    panel.hide();
                }
            }
            this.panelCount++;
        },
        switchPanels: function(payload) {
            if (!this.panels.hasOwnProperty(payload.panelKey)) {
                return;
            }
            if (this.activePanel) {
                this.activePanel.panel.hide();
            }
            this.activePanel = this.panels[payload.panelKey];
            this.activePanel.panel.show();
        }
    };
    root.PanelManager = function(mediator, options) {
        return new PanelManager(mediator, options)
    };
}.call(EP2.CV.BuildAndPrice);
! function() {
    var root = this;
    var PanelSwitcher = function(mediator, view) {
        this.init.apply(this, arguments)
    };
    PanelSwitcher.prototype = {
        init: function(mediator, view) {
            this.mediator = mediator;
            this.$view = $(view);
            this.$view.on('click', '.link-span', this.notify.bind(this));
        },
        notify: function(e) {
            e.preventDefault();
            this.$view.find('.selected.visited').removeClass('selected visited');
            var key = $(e.target).closest('.link-span').data('event');
            console.log("clicked from menu render mpg");
            this.mediator.notify('featureGroupChange', {
                panelKey: key
            });
            this.$view.find('.link-span[data-event="' + key + '"]').parent().addClass('selected visited');
            var $check = this.$view.find('.link-span[data-event="' + key + '"]').parent().find('.icon-span');
            this.formatFeatureCost = function() {
                if ($('#summaryPanel').is(':visible')) {
                    var getFeatureCost = $('dd.toFormatCurrency');
                    getFeatureCost.each(function(i, v) {
                        var featurecost = parseFloat($(this).attr('data-feature-cost'));
                        var formatFeatureCost = EngineGlobals.i18n.formatCurrency(featurecost, currencySymb);
                        $(this).html(formatFeatureCost);
                    });
                }
            };
            if ($check.is(':empty')) {
                $check.append('<span></span>');
            }
            this.formatFeatureCost();
        }
    };
    root.PanelSwitcher = function(mediator, view) {
        return new PanelSwitcher(mediator, view)
    };
}.call(EP2.CV.BuildAndPrice);
! function() {
    var root = this;
    var MenuView = function(mediator, el, data) {
        this.init.apply(this, arguments);
    };
    MenuView.prototype = {
        init: function(mediator, el, data) {
            this.mediator = mediator;
            this.$el = $(el);
            this.template = EP2.Templates.template('{{% loop(headings,function(item){ %}}<li><div class="{{=_setStart(item.eventKey)}}"><p class="icon-span">{{=_setIcon(item.eventKey)}}</p><a href="#" class="link-span selected visited" data-event="{{=item.eventKey}}">{{=item.text}}</a></div></li>{{% }) %}}');
            this.data = {
                headings: data
            };
            this.render();
        },
        render: function(data) {
            this.data = data || this.data;
            var startKey = window.urlParams.menuStartKey || this.data.headings[0].eventKey;
            this.data._setStart = function(value) {
                return (value === startKey) ? 'selected visited' : ''
            };
            this.data._setIcon = function(value) {
                return (value === startKey) ? '<span></span>' : '';
            }
            this.$el.html(this.template(this.data));
        }
    };
    root.MenuView = function(mediator, el, data) {
        return new MenuView(mediator, el, data)
    };
    var PanelHeaderView = function(mediator, el, tpl, data) {
        this.init.apply(this, arguments);
    };
    PanelHeaderView.prototype = {
        init: function(mediator, el, tpl, data) {
            this.mediator = mediator;
            this.mediator.subscribe('featureGroupChange', this.render, this);
            this.mediator.subscribe('panelExclusionChange', this.toggleClass, this);
            this.$el = $(el);
            this.template = tpl;
            this.data = data;
            this.startKey = window.urlParams.menuStartKey || this.data[0].eventKey;
            this.render();
        },
        render: function(payload) {
            var key = payload ? payload.panelKey : this.startKey;
            this.$el.html(this.template(this.find(key)));
        },
        toggleClass: function(payload) {
            this.$el.toggleClass('withInnerTab', payload.hasExclusions);
        },
        find: function(key) {
            var len = this.data.length,
                empty = {
                    text: '',
                    eventKey: ''
                }, intselected = 0;
            while (len--) {
                if (this.data[len].eventKey === key) {
                    intselected = len;
                }
            }
            var title = this.data[intselected];
            var prev = intselected > 0 ? this.data[intselected - 1] : empty;
            var next = intselected < this.data.length - 1 ? this.data[intselected + 1] : empty;
            return [prev, title, next];
        }
    };
    root.PanelHeaderView = function(mediator, el, tpl, data) {
        return new PanelHeaderView(mediator, el, tpl, data)
    };
}.call(EP2.CV.BuildAndPrice);
! function() {
    var root = this;
    var MoreInfoManager = function(configManager, mediator, t) {
        this.init.apply(this, arguments)
    };
    MoreInfoManager.prototype = {
        init: function(c, m, t) {
            this.mediator = m;
            this.configManager = c;
            this.template = t;
            this.mediator.subscribe('moreInfo', this.combineData, this);
        },
        combineData: function(payload) {
            var wersCode = payload.wersCode;
            var feature = this.configManager.lookup(wersCode);
            var ctx = {
                feature: feature
            };
            if (overlayer)
                overlayer.open({
                    content: this.template(ctx)
                });
        }
    }
    root.MoreInfoManager = MoreInfoManager;
}.call(EP2.CV.BuildAndPrice);
! function() {
    var root = this;
    var SetupFactory = function(mediator, panelManager) {
        this.mediator = mediator;
        this.panelManager = panelManager;
    };
    SetupFactory.prototype = {
        createPanel: function(panelTemplate, panelKey, el, dataKey) {
            var panel = new root.Panel(this.mediator, panelTemplate, el, dataKey);
            this.panelManager.attachPanel(panelKey, panel);
            return panel;
        }
    };
    var setupFactory, panelManager;
    root.initPanelFactory = function(mediator) {
        panelManager = new EP2.CV.BuildAndPrice.PanelManager(mediator);
        setupFactory = new SetupFactory(mediator, panelManager);
        return {
            create: function(panelTemplate, panelKey, el, dataKey) {
                return setupFactory.createPanel(panelTemplate, panelKey, el, dataKey);
            }
        };
    };
}.call(EP2.CV.BuildAndPrice);
! function() {
    var showAllTheOptions = function() {
        $(".tabs").find("li").each(function(i) {
            var $this = $(this);
            $this.show();
            if ($this.hasClass("selected"))
                $this.addClass("weareopen");
        });
        var cssObj = {
            "height": "auto"
        }
        $(".tab-wrapper").css(cssObj);
    };
    var hideAllTheOptions = function() {
        $(".tabs").find("li").each(function(i) {
            var $this = $(this);
            if ($this.hasClass("selected")) $this.show();
            if ($this.hasClass("weareopen")) $this.removeClass("weareopen");
        });
        var cssObj = {
            "height": "35px"
        };
    };
    var displayDropDown = function() {
        var thisParent = $('.tabs:visible').closest('.panel-content').parent('div'),
            $this = $(thisParent),
            $liSize = $this.find('.tabs li').length;
        if ($liSize == 1) {
            $('.tab-wrapper').hide('fast');
        } else {
            $('.tab-wrapper').show('fast');
        }
        $('.tabs').find("li").on({
            mouseenter: function(e) {
                showAllTheOptions();
            },
            mouseleave: function(e) {
                hideAllTheOptions();
            }
        });
        hideAllTheOptions();
    };

    function generateCVPDF() {
        var selector = $('#cvBPRoot');
        selector.find('.view-specification').on('click', function(e) {
            e.preventDefault();
            var $this = $(this),
                $cvPDFUrl = $this.attr('data-cvpdf');
            if ($cvPDFUrl !== (undefined || null)) {
                var $getDialogDiv = '<iframe src="' + $cvPDFUrl + '" height="850px" width="780px"></iframe>';
                console.log("cv pdf url: ", $cvPDFUrl);
                overlayer.open({
                    content: $getDialogDiv
                });
            }
            return false;
        });
    }

    function bodystyleSetup() {
        if (document.getElementById('bodystyleLoadspacePayloadPanel')) {
            var bodyStylePanel = EP2.Globals.CV.panelFactory.create(EP2.Templates.template($('#bodyStyleLoadspacePayloadTemplate').html()), 'body', $('#bodystyleLoadspacePayloadPanel'));
            bodyStylePanel.filter = EP2.CV.BuildAndPrice.multiFilterFactory('allPayloads', 'allLengths', 'allHeights');
            bodyStylePanel.postRender = function() {
                var overlayLinks = this.$el.find('.more-info-link');
                var scope = this;
                overlayLinks.off();
                overlayLinks.on('click', function(e) {
                    e.preventDefault();
                    scope.mediator.notify('moreInfo', {
                        wersCode: $(this).data('wers-code')
                    });
                });
                EP2.tabslider('#tabOptions-bodyStyle');
                generateCVPDF();
                if (EP2.Utils.queryObject(this.lastKnownDataSet.allPayloads, 'state', 'EXCLUDED').length > 0 || EP2.Utils.queryObject(this.lastKnownDataSet.allLengths, 'state', 'EXCLUDED').length > 0 || EP2.Utils.queryObject(this.lastKnownDataSet.allHeights, 'state', 'EXCLUDED').length > 0) {
                    this.$el.find('.cvBSfootnote').show();
                } else {
                    this.$el.find('.cvBSfootnote').hide();
                }
                this.$el.find('.toggle-wrapper').show();
                if (!this.$el.find('.paginate').hasClass('collapse')) {
                    this.$el.find('.paginate').removeClass('visuallyhidden');
                    this.$el.find('.paginate').addClass('expand');
                    this.$el.find('.footnote').addClass('pager-footnote');
                } else {
                    this.$el.find('.paginate').removeClass('expand');
                    this.$el.find('.footnote').removeClass('pager-footnote');
                    this.$el.find('.paginate').addClass('visuallyhidden');
                }
            }
        } else if (document.getElementById('carouselBodystyle')) {
            var bodyStylePanel = EP2.Globals.CV.panelFactory.create(EP2.Templates.template($('#galleryTemplate').html()), 'body', $('#carouselBodystyle'));
            bodyStylePanel.parse = EP2.CV.BuildAndPrice.parseCarouselDataFactory('allBodystyleLengthHeightDrivePayload');
            bodyStylePanel.filter = EP2.CV.BuildAndPrice.filterFactory('allBodystyleLengthHeightDrivePayload');
            bodyStylePanel.postRender = function() {
                this.$el.find('.toggle-wrapper').show();
                if (!this.$el.find('.paginate').hasClass('collapse')) {
                    this.$el.find('.paginate').removeClass('visuallyhidden');
                    this.$el.find('.paginate').addClass('expand');
                    this.$el.find('.footnote').addClass('pager-footnote');
                } else {
                    this.$el.find('.paginate').removeClass('expand');
                    this.$el.find('.footnote').removeClass('pager-footnote');
                    this.$el.find('.paginate').addClass('visuallyhidden');
                }
            };
        }
    }

    function colorsSetup() {
        if (document.getElementById('colorPanel')) {
            var colorPanel = EP2.Globals.CV.panelFactory.create(EP2.Templates.template($('#galleryTemplate').html()), 'color', $('#colorPanel'), 'allColors');
            colorPanel.parse = EP2.CV.BuildAndPrice.parseCarouselDataFactory('allColors');
            colorPanel.filter = EP2.CV.BuildAndPrice.filterFactory('allColors');
            colorPanel.postRender = function(e) {
                this.$el.find('.toggle-wrapper').show();
                if (this.$el.find('.toggle-show-all').hasClass('selected') && EP2.Utils.queryObject(this.lastKnownDataSet.allColors, 'state', 'EXCLUDED').length > 0) {
                    this.$el.find('.conflictText').removeClass('invisible');
                } else {
                    this.$el.find('.conflictText').addClass('invisible');
                }
                if (!this.$el.find('.paginate').hasClass('collapse')) {
                    this.$el.find('.paginate').removeClass('visuallyhidden');
                    this.$el.find('.paginate').addClass('expand');
                    this.$el.find('.footnote').addClass('pager-footnote');
                } else {
                    this.$el.find('.paginate').removeClass('expand');
                    this.$el.find('.footnote').removeClass('pager-footnote');
                    this.$el.find('.paginate').addClass('visuallyhidden');
                }
            }
        }
    }

    function engineSetup() {
        if (document.getElementById('engineTransmissionPanel')) {
            generateCVPDF();
            var et = EP2.Globals.CV.panelFactory.create(EP2.Templates.template($('#engineTransmissionTemplate').html()), 'et', $('#engineTransmissionPanel'), 'allEnTDriveAxle');
            et.filter = EP2.CV.BuildAndPrice.filterFactory('allEnTDriveAxle');
            et.postRender = function(e) {
                this.$el.find('.toggle-wrapper').show();
                EP2.gobalMpgCalculator.calcuMpg();
            };
        }
    }

    function featuresSetup() {
        if (document.getElementById('featuresPanel')) {
            var featuresPanel = EP2.Globals.CV.panelFactory.create(EP2.Templates.template($('#extrasTemplate').html()), 'extras', $('#featuresPanel'), 'allExtras');
            featuresPanel.parse = function(data) {
                var i = 0,
                    j = 0,
                    len = data.allExtras.length,
                    groupLen, headings = [],
                    featureGroups = [],
                    step = 5,
                    featGroup;
                for (i; i < len; i++) {
                    headings.push(data.allExtras[i].group);
                    j = 0;
                    featGroup = data.allExtras[i].features;
                    groupLen = featGroup.length;
                    var tmpGroup = {
                        startSlide: 0,
                        groups: []
                    };
                    for (var j = 0; j < featGroup.length; j += step) {
                        tmpGroup.groups.push(featGroup.slice(j, j + step));
                    }
                    featureGroups.push(tmpGroup);
                }
                EP2.displayTotalPriceVat = data.displayTotalPriceVat;
                EP2.displayTotalPriceNoVat = data.displayTotalPriceNoVat;
                return {
                    headings: headings,
                    featureGroups: featureGroups
                };
            };
            featuresPanel.postRender = function() {
                var showCorrespondingPane = function(e) {
                    e.preventDefault();
                    tabListitems.removeClass('selected');
                    var li = $(this).closest('li');
                    li.addClass('selected');
                    var i = li.index();
                    featuresPanel.selectedLiIndex = li.index();
                    panes.hide();
                    $(panes[i]).show();
                };
                var tabLinks = this.$el.find('.extras-carousel-tab').on('click', showCorrespondingPane);
                var tabListitems = this.$el.find('.tabs li');
                var panes = this.$el.find('.extras-carousel-wrapper');
                var overlayLinks = this.$el.find('.more-info-link');
                var scope = this;
                overlayLinks.off();
                overlayLinks.on('click', function(e) {
                    e.preventDefault();
                    scope.mediator.notify('moreInfo', {
                        wersCode: $(this).data('wers-code')
                    });
                });
                this.$el.find('.toggle-wrapper').show();
                if (this.$el.find('.toggle-show-all').hasClass('selected') && EP2.Utils.queryObject(this.lastKnownDataSet.allExtras, 'state', 'EXCLUDED').length > 0) {
                    this.$el.find('.conflictText').removeClass('invisible');
                } else {
                    this.$el.find('.conflictText').addClass('invisible');
                }
                var currentTab, len = this.lastKnownDataSet.allExtras.length;
                for (i = 0; i < len; i++) {
                    currentTab = '#extrasTab' + i + '>';
                    if (this.$el.find("#extrasTab" + i).hasClass('has-pagination')) {
                        this.$el.find(currentTab + ' .paginate').addClass('expand');
                        this.$el.find(currentTab + ' .footnote').addClass('pager-footnote');
                    } else {
                        this.$el.find('#extrasTab' + i + '> .paginate').removeClass('expand');
                        this.$el.find('#extrasTab' + i + '> .footnote').removeClass('pager-footnote');
                    }
                }
                if (typeof this.previousFeatureCode !== 'undefined') {
                    var scopedFeature = this.$el.find('#' + this.previousFeatureCode);
                    if (scopedFeature.length > 0) {
                        scopedFeature.slideDown(1000);
                    }
                    setTimeout(function() {
                        scopedFeature.slideUp(1000)
                    }, 3000);
                }
                if (typeof this.selectedLiIndex !== 'undefined') {
                    tabListitems.removeClass('selected');
                    tabListitems.eq(featuresPanel.selectedLiIndex).addClass('selected');
                    panes.hide();
                    $(panes[this.selectedLiIndex]).show()
                }
                EP2.tabslider('#tabOptions-extra');
            };
            featuresPanel.filter = function(data) {
                var adjusted = [];
                var i = 0,
                    len = data.allExtras.length;
                EP2.CV.BuildAndPrice.each(data.allExtras, function(featureGroup, index) {
                    var filteredFeatureGroup = {
                        group: featureGroup.group,
                        features: []
                    };
                    EP2.CV.BuildAndPrice.each(featureGroup.features, function(feature) {
                        if (feature.state !== 'EXCLUDED') {
                            filteredFeatureGroup.features.push(feature);
                        }
                    });
                    adjusted.push(filteredFeatureGroup);
                });
                return $.extend({}, data, {
                    allExtras: adjusted
                });
            }
            EP2.Globals.Mediator.subscribe('userConfigChange', function(payload) {
                featuresPanel.previousFeatureCode = payload.WERSCode;
            }, this);
        }
    }

    function infostageSetup() {
        if (document.getElementById('infoStage')) {
            if (!EP2.Globals.Mediator) {
                EP2.Globals.Mediator = new EP2.Mediator();
            }
            var infoStage = new EP2.CV.BuildAndPrice.Panel(EP2.Globals.Mediator, EP2.Templates.template($('#infoStageTemplate').html()), $('#infoStage'));
            infoStage.parse = function(data) {
                if (data.series.name != null) {
                    var modelTitleArray = data.series.name.split("-");
                    if (typeof(modelTitleArray[0]) !== 'undefined') {
                        data.modelTitle = modelTitleArray[0];
                    } else {
                        data.modelTitle = null;
                    }
                    if (typeof(modelTitleArray[1]) !== 'undefined') {
                        data.modelSubTitle = modelTitleArray[1];
                    } else {
                        data.modelSubTitle = null;
                    }
                } else {
                    data.modelTitle = null;
                    data.modelSubTitle = null;
                }
                return data;
            };
            infoStage.postRender = function(e) {
                var overlayLinks = this.$el.find($('.js-price-overlay'), $('#price-popover'));
                var scope = this;
                overlayLinks.off();
                overlayLinks.on('click', function(e) {
                    e.preventDefault();
                    var hiddenDiv = $(this).data('clone-contentid');
                    var getDialogDiv = $("#" + hiddenDiv).clone();
                    overlayer.open({
                        content: getDialogDiv
                    });
                });
                var discountOverlayLinks = this.$el.find($('.js-price-overlay'), $('#discount-popover'));
                var scope = this;
                discountOverlayLinks.off();
                discountOverlayLinks.on('click', function(e) {
                    e.preventDefault();
                    var hiddenDiv = $(this).data('clone-contentid');
                    var getDialogDiv = $("#" + hiddenDiv).clone();
                    overlayer.open({
                        content: getDialogDiv
                    });
                });
            };
        }
    }

    function modelsSetup() {
        if (document.getElementById('modelsPanel')) {
            var modelsPanel = EP2.Globals.CV.panelFactory.create(EP2.Templates.template($('#galleryTemplate').html()), 'model', $('#modelsPanel'), 'allSeries');
            modelsPanel.filter = EP2.CV.BuildAndPrice.filterFactory('allSeries');
            var modParser = EP2.CV.BuildAndPrice.parseCarouselDataFactory('allSeries');
            modelsPanel.parse = function(data) {
                var retObj = modParser(data);
                return retObj;
            };
            modelsPanel.postRender = function(e) {
                var overlayLinks = this.$el.find('.more-info-link');
                var scope = this;
                overlayLinks.off();
                overlayLinks.on('click', function(e) {
                    e.preventDefault();
                    scope.mediator.notify('moreInfo', {
                        wersCode: $(this).data('wers-code')
                    });
                });
                this.$el.find('.toggle-wrapper').show();
                if (this.$el.find('.toggle-show-all').hasClass('selected') && EP2.Utils.queryObject(this.lastKnownDataSet.allSeries, 'state', 'EXCLUDED').length > 0) {
                    this.$el.find('.conflictText').removeClass('invisible');
                } else {
                    this.$el.find('.conflictText').addClass('invisible');
                }
                if (!this.$el.find('.paginate').hasClass('collapse')) {
                    log('test');
                    this.$el.find('.paginate').removeClass('visuallyhidden');
                    this.$el.find('.paginate').addClass('expand');
                    this.$el.find('.footnote').addClass('pager-footnote');
                } else {
                    this.$el.find('.paginate').removeClass('expand');
                    this.$el.find('.footnote').removeClass('pager-footnote');
                    this.$el.find('.paginate').addClass('visuallyhidden');
                }
            }
        }
    }

    function summarySetup() {
        if (document.getElementById('summaryPanel')) {
            var panelSummary = EP2.Globals.CV.panelFactory.create(EP2.Templates.template($('#summaryTemplate').html()), 'summary', $('#summaryPanel'));
            panelSummary.postRender = function(e) {
                var activeNameplate = $('.activeNameplate'),
                    activeNameplateIndex = activeNameplate.index();
                if (EP2.Tag && EP2.Tag.fireEvent) {
                    var configdata = EP2.getConfigUrl();
                    var usc_cd;
                    if (bp.carousel[activeNameplateIndex]["superGroup"]) {
                        usc_cd = bp.carousel[activeNameplateIndex]["superGroup"].WERSCode;
                    } else {
                        usc_cd = bp.carousel[activeNameplateIndex]["nameplate"].WERSCode;
                    }
                    try {
                        EP2.Tag.fireEvent(EP2.Tag.CTX_BNP_CV, EP2.Tag.EVENT_CFG_SUMMARY, {
                            usccode: usc_cd,
                            model: EP2.Globals.superGroupName.toLowerCase(),
                            config: configdata.substring(configdata.indexOf("features=") + 9)
                        });
                        $('body .view-specification').on('click');
                        console.log("timeout to trigger generateCVPDF for summary panel started...");
                        generateCVPDF();
                    } catch (e) {
                        console.log('Error calling EngineTag: ' + e);
                    }
                }
                EP2.printSummaryData = this.lastKnownDataSet;
            }
            panelSummary.parse = function(data) {
                if (data.series.name != null) {
                    var modelTitleArray = data.series.name.split("-");
                    if (typeof(modelTitleArray[0]) !== 'undefined') {
                        data.modelTitle = modelTitleArray[0];
                    } else {
                        data.modelTitle = null;
                    }
                    if (typeof(modelTitleArray[1]) !== 'undefined') {
                        data.modelSubTitle = modelTitleArray[1];
                    } else {
                        data.modelSubTitle = null;
                    }
                } else {
                    data.modelTitle = null;
                    data.modelSubTitle = null;
                }
                return data;
            };
        }
    }
    var root = this,
        _transitions = null;

    function _instance(mediator) {
        var mediator = mediator,
            _oldBuilderVis;
        return {
            heroFlag: false,
            builderRoot: $('#builderPage'),
            isSet: false,
            bind: function() {
                if (this.builderRoot.length > 0) {
                    window.startPVConfigurator = window.startPVConfigurator || function(e) {};
                    $('#nameplateAnchoredBtn a, .vehicle-list-wrapper a').on('click.transitions', function(e) {
                        e.preventDefault();
                        this.loadBuilder();
                    }.bind(this));
                }
                this.setup();
            },
            setup: function() {
                if (this.isSet)
                    return;
                if (bp.superGroupName == null) {
                    $('.bpSuperGroupSlider,.bpNameplateSlider').css('display', 'block');
                }
                var self = this;
                $.extend($.easing, {
                    def: 'easeOutQuad',
                    easeInOutQuad: function(x, t, b, c, d) {
                        if ((t /= d / 2) < 1) return c / 2 * t * t + b;
                        return -c / 2 * ((--t) * (t - 2) - 1) + b;
                    }
                });
                mediator.subscribe('vehicleHeroRendered', function() {
                    var _oldBuilderVis = $('#builderPage').css('visibility');
                    $('#builderPage').css('visibility', '');
                    if (!self.heroFlag) {
                        $('.bpSuperGroupSlider,.bpNameplateSlider').hide();
                        self.builderRoot.css({
                            position: 'relative',
                            height: 'auto',
                            overflow: ''
                        });
                        getCarouselImagePosition();
                        $('#heroStage .hero-holder').css('marginLeft', 0);
                        var ht = $('#heroStage .hero-holder').offset().top;
                        var hl = $('#heroStage .hero-holder').offset().left;
                        bp.heroImageStart = {};
                        var cssObj;
                        if (bp.superGroupName == null) {
                            bp.heroImageStart.width = bp.carouselImageWidth;
                            bp.heroImageStart.height = bp.carouselImageHeight;
                            bp.heroImageStart.top = bp.carouselImageTop - ht;
                            bp.heroImageStart.left = bp.carouselImageLeft - hl;
                            cssObj = {
                                "marginLeft": bp.heroImageStart.left,
                                "marginTop": bp.heroImageStart.top,
                                "width": bp.heroImageStart.width,
                                "height": bp.heroImageStart.height
                            };
                        } else {
                            cssObj = {
                                "marginLeft": 519,
                                "marginTop": 174,
                                "width": 1,
                                "height": 1
                            };
                        }
                        $('#heroStage .hero-holder').css(cssObj);
                        $('#heroStage .hero-holder').animate({
                            width: 618,
                            height: 348,
                            marginLeft: 210,
                            marginTop: '0px'
                        }, 800, 'easeInOutQuad', function() {
                            $('#buildandprice').css('height', 'auto');
                            $('#buildandprice .genericListPanel,#heroStageWrapper .leftControl, #infoStage, .thumbnailAngleSwitcher,.hero-angle-switcher-right, .hero-angle-switcher-left').animate({
                                marginTop: 0,
                                marginLeft: 0,
                                opacity: 1
                            }, 800, 'easeInOutQuad');
                        });
                    } else {
                        $('#heroStage .hero-holder').css({
                            height: 348,
                            width: 618,
                            marginLeft: 210
                        });
                        $('#heroStageWrapper').addClass('painted');
                    }
                    self.heroFlag = true;
                }, {});
                mediator.subscribe('backToCarousel', function() {
                    var _oldBuilderVis = 'visibility';
                    $('#buildandprice .genericListPanel').animate({
                        marginTop: 80,
                        opacity: 0
                    }, 800, 'easeInOutQuad');
                    $('#heroStageWrapper .leftControl').animate({
                        marginleft: -160,
                        opacity: 0
                    }, 800, 'easeInOutQuad');
                    $('#infoStage,.thumbnailAngleSwitcher,.hero-angle-switcher-right, .hero-angle-switcher-left').animate({
                        opacity: 0
                    }, 800, 'easeInOutQuad', function() {});
                    getCarouselImagePosition();
                    var mt = bp.heroImageStart.top;
                    var iw = bp.carouselImageWidth;
                    var ih = bp.carouselImageHeight;
                    bp.superGroupName = null;
                    EP2._bootstrappedFeature = "null";
                    setTimeout(function() {
                        $('#heroStage .hero-holder').css('marginLeft', 'auto').animate({
                            width: iw,
                            height: ih,
                            marginTop: mt
                        }, 800, 'easeInOutQuad', function() {
                            $('.breadCrumb').hide();
                            $('body').removeAttr('style');
                            self.builderRoot.html('');
                            $('.bpSuperGroupSlider,.bpNameplateSlider').css('position', 'absolute').fadeIn('fast', function() {
                                $('.bpSuperGroupSlider').css('position', 'relative');
                            });
                            $('#builderPage').css('visibility', _oldBuilderVis);
                        });
                    }, 450);
                }, {});
                this.bootToNameplate();
            },
            bootToNameplate: function() {
                if (bp.superGroupName != null) {
                    if (bp.isFrmPVxAxis == undefined || !bp.isFrmPVxAxis) {
                        for (var i = 0; i < bp.carousel.length; i++) {
                            if (bp.carousel[i].superGroupData.fwName === bp.superGroupName) {
                                EP2.CVBuilderCarousel.axisViewController.jumpTo(i);
                                break;
                            }
                        }
                        this.loadBuilder(undefined, bp.superGroupName);
                    } else {
                        this.loadBuilder(bp.isFrmPVxAxis, bp.superGroupName);
                    }
                }
            },
            unbind: function() {
                $('#nameplateAnchoredBtn a').off('click.transitions');
            },
            loadBuilder: function(isFromPV, superGroup) {
                EP2.Globals.Mediator.flushTopic('configurationChange');
                EP2.Globals.Mediator.flushTopic('conflictAccepted');
                EP2.Globals.Mediator.flushTopic('conflictRejected');
                EP2.Globals.Mediator.flushTopic('conflictResolution');
                EP2.Globals.Mediator.flushTopic('featureGroupChange');
                EP2.Globals.Mediator.flushTopic('moreInfo');
                EP2.Globals.Mediator.flushTopic('panelExclusionChange');
                EP2.Globals.Mediator.flushTopic('userConfigChange');
                EP2.Globals.Mediator.flushTopic('vehicleImageChange');
                isFromPV = isFromPV || false;
                var activeNameplate = $('.activeNameplate'),
                    activeNameplateIndex = activeNameplate.index();
                if (superGroup === undefined) {
                    superGroup = bp.carousel[activeNameplateIndex][isFromPV ? "nameplateData" : "superGroupData"].fwName;
                }
                var image = activeNameplate.find('img');
                var height = image.height(),
                    width = image.width();
                $('.breadCrumb').show();
                this.heroFlag = false;
                EP2.Globals.superGroupName = superGroup;
                if (EP2.Tag && EP2.Tag.fireEvent) {
                    try {
                        var ctx = isFromPV ? EP2.Tag.CTX_BNP : EP2.Tag.CTX_BNP_CV;
                        EP2.Tag.fireEvent(ctx, EP2.Tag.EVENT_CFG_START, {
                            usccode: bp.carousel[activeNameplateIndex][isFromPV ? "nameplate" : "superGroup"].WERSCode,
                            model: superGroup.toLowerCase()
                        });
                    } catch (e) {
                        console.log('Error calling EngineTag: ' + e);
                    }
                }
                var bpBackgroundImage = bp.carousel[activeNameplateIndex][isFromPV ? "nameplateData" : "superGroupData"].BPBackgroundImage;
                if (bpBackgroundImage != null) {
                    $('body').css("background", "url('" + bpBackgroundImage + "') no-repeat center 0");
                }
                $('#bpChangeModel').off('click.changeModel');
                $('#bpChangeModel').on('click.changeModel', function(e) {
                    e.preventDefault();
                    mediator.notify('backToCarousel', {});
                });
                var url = "/cs/ContentServer?pagename=" + EP2.getSiteName() + "/EP2/body/cvs/bp/CVBuilder&superGroupName=" + superGroup + "&GforceMode=" + EP2._bootstrappedGforceMode;
                if (isFromPV) {
                    url = url + "&source=PV";
                }
                $.ajax({
                    url: url,
                    dataType: 'html',
                    success: function(dataHTMLResponse, statusCode) {
                        this.builderRoot.css({
                            position: 'absolute',
                            height: 0,
                            overflow: 'hidden'
                        }).html(dataHTMLResponse);;
                        EP2.CV.BuildAndPrice.init();
                        bodystyleSetup();
                        colorsSetup();
                        engineSetup();
                        featuresSetup();
                        modelsSetup();
                        infostageSetup();
                        summarySetup();
                        if (EP2._bootstrappedFeature == undefined) {
                            EP2._bootstrappedFeature = null;
                        }
                        $.ajax({
                            url: '/cs/ContentServer?pagename=' + EP2.getSiteName() + '/EP2/body/cvs/bp/CVConfiguratorService&operation=' + EP2._bootstrappedOperation + '&catalog_id=' + EP2._bootstrappedCatalogId + '&gforceMode=' + EP2._bootstrappedGforceMode + '&feature=' + EP2._bootstrappedFeature,
                            type: "POST",
                            data: $(this).serialize(),
                            success: function(data) {
                                EP2._bootstrappedVehicleConfigurationModel = data;
                                if (EP2._bootstrappedIsConversion) {
                                    EP2._bootstrappedVehicleConfigurationModel.allSeries = EP2._bootstrappedVehicleConfigurationModel.allBodystyles;
                                }
                                var vcm = new EP2.CV.BuildAndPrice.VehicleConfigurationManager({
                                    mediator: EP2.Globals.Mediator,
                                    data: EP2._bootstrappedVehicleConfigurationModel
                                });
                                var mim = new EP2.CV.BuildAndPrice.MoreInfoManager(vcm, EP2.Globals.Mediator, EP2.Templates.template($('#moreInfoPopOverTemplate').html()));
                                EP2.Globals.CV.configManager = vcm;
                                if (EP2.isMyGarage !== undefined && EP2.isMyGarage !== "false" && EP2.isMyGarage !== null && EP2.isMyGarage !== "null" && EP2.isMyGarage.length > 0) {
                                    EP2.Globals.Mediator.notify('featureGroupChange', {
                                        panelKey: 'summary'
                                    });
                                }
                                EP2.gobalMpgCalculator.calcuMpg();
                            },
                            error: function(xhr, statusCode, err) {
                                console.log(arguments);
                            }
                        });
                    }.bind(this),
                    error: function(xhr, statusCode, err) {
                        console.log(arguments);
                    }
                });
            }
        };
    };
    root.Transition = {
        init: function(mediator) {
            return _transitions = _transitions || _instance(mediator);
        }
    };
}.call(EP2.CV.BuildAndPrice);
! function() {
    var root = this,
        _initialised = false;
    root.parseCarouselDataFactory = function(key, step) {
        return function(data) {
            var data = data[key];
            var i = 0,
                len = data.length,
                step = step || 5;
            var groups = [];
            var retVal = {};
            for (i; i < len; i++) {
                if (EP2.CV.BuildAndPrice.isSelected(data[i].state)) {
                    retVal.startSlide = Math.floor(i / step);
                }
            }
            i = 0;
            for (i; i < len; i += step) {
                groups.push(data.slice(i, i + step))
            }
            retVal.groups = groups;
            return retVal;
        }
    };
    root.filterFactory = function(key) {
        return function(data) {
            var i = 0,
                len = data.allExtras.length;
            var filteredItems = [];
            EP2.CV.BuildAndPrice.each(data[key], function(item, index) {
                if (item.state !== 'EXCLUDED') {
                    filteredItems.push(item);
                }
            });
            var merge = {};
            merge[key] = filteredItems;
            return $.extend({}, data, merge);
        }
    }
    root.multiFilterFactory = function(key1, key2, key3) {
        return function(data) {
            var filteredItems = [];
            var merge = {};
            EP2.CV.BuildAndPrice.each(data[key1], function(item, index) {
                if (item.state !== 'EXCLUDED') {
                    filteredItems.push(item);
                }
            });
            merge = {};
            merge[key1] = filteredItems;
            var data2 = $.extend({}, data, merge);
            filteredItems = [];
            EP2.CV.BuildAndPrice.each(data[key2], function(item, index) {
                if (item.state !== 'EXCLUDED') {
                    filteredItems.push(item);
                }
            });
            merge = {};
            merge[key2] = filteredItems;
            var data3 = $.extend({}, data2, merge);
            filteredItems = [];
            EP2.CV.BuildAndPrice.each(data[key3], function(item, index) {
                if (item.state !== 'EXCLUDED') {
                    filteredItems.push(item);
                }
            });
            merge = {};
            merge[key3] = filteredItems;
            return $.extend({}, data3, merge);
        }
    }
    root.init = function() {
        EP2.Templates.registerPartial("radioOptions", $("#radioOptionsPartial").html());
        if (!EP2.Globals.Mediator) {
            EP2.Globals.Mediator = new EP2.Mediator();
        }
        EP2.Globals.CV = EP2.Globals.CV || {};
        var mediator = EP2.Globals.Mediator;
        var menuView = EP2.CV.BuildAndPrice.MenuView(mediator, $('#cvNavigationListRoot'), EP2._bootstrappedHeadingMenuData);
        var panelHeaderView = EP2.CV.BuildAndPrice.PanelHeaderView(mediator, $('#panelHeader'), EP2.Templates.template($('#panelHeaderTemplate').html()), EP2._bootstrappedHeadingMenuData);
        var galleryTemplate = EP2.Templates.template($('#galleryTemplate').html());
        EP2.Templates.registerPartial("gallery", galleryTemplate);
        var vhf = new EP2.CV.BuildAndPrice.VehicleHeroFacade(mediator, $('#heroStage'), EP2.Templates.template($('#angleSwitcherTemplate').html()));
        var panelFactory = EP2.Globals.CV.panelFactory = EP2.CV.BuildAndPrice.initPanelFactory(mediator);
        var panelSwitcher = '';
        panelSwitcher = new EP2.CV.BuildAndPrice.PanelSwitcher(mediator, 'body');
        EP2.Forms.RadioGroupBehaviour('#bodystyleLoadspacePayloadPanel');
        var conflictFacade = new EP2.CV.BuildAndPrice.ConflictResolutionFacade({
            template: EP2.Templates.template($('#conflictResolutionTemplate').html()),
            mediator: mediator
        });
        _initialised = true;
    };
}.call(EP2.CV.BuildAndPrice);
$().ajaxError(function(event, xhr, settings, error) {
    console.log('AjaxError: event [' + event + '] error [' + error + ']');
});
! function() {
    var root = EP2 || {};
    root.Tag = {
        CTX_BNP: 'BNP',
        CTX_BNP_CV: 'BNP_CV',
        EVENT_CFG_START: 'EU_ENGInE_configurator_initated',
        EVENT_CFG_SUMMARY: 'EU_ENGInE_configurator_completed',
        fireEvent: function(context, event, payload) {
            confDataLayer = [];
            var nameplateID;
            var nameplateName;
            var configurationData;
            var page_id;
            if (typeof payload === 'object' && JSON && JSON.stringify) {
                nameplateID = payload.usccode;
                nameplateName = payload.model;
                configurationData = payload.config;
                if (configurationData) {
                    configurationData = configurationData.replace(/:/g, ",");
                }
                if (context === EP2.Tag.CTX_BNP && event === EP2.Tag.EVENT_CFG_START) {
                    page_id = 'EU_ENGInE_configurator-PV_initated';
                } else if (context === EP2.Tag.CTX_BNP && event === EP2.Tag.EVENT_CFG_SUMMARY) {
                    page_id = 'EU_ENGInE_configurator-PV_completed';
                } else if (context === EP2.Tag.CTX_BNP_CV && event === EP2.Tag.EVENT_CFG_START) {
                    page_id = 'EU_ENGInE_configurator-CV_initated';
                } else if (context === EP2.Tag.CTX_BNP_CV && event === EP2.Tag.EVENT_CFG_SUMMARY) {
                    page_id = 'EU_ENGInE_configurator-CV_completed';
                }
            }
            for (var i = 0; i < dataLayer.length; ++i) {
                if (dataLayer[i].URL) {
                    confDataLayer.push({
                        'URL': dataLayer[i].URL
                    });
                }
                if (dataLayer[i].visitorLoginState) {
                    confDataLayer.push({
                        'visitorLoginState': dataLayer[i].visitorLoginState
                    });
                }
                if (dataLayer[i].userAgent) {
                    confDataLayer.push({
                        'userAgent': dataLayer[i].userAgent
                    });
                }
                if (dataLayer[i].siteID) {
                    confDataLayer.push({
                        'siteID': dataLayer[i].siteID
                    });
                }
                if (dataLayer[i].country) {
                    confDataLayer.push({
                        'country': dataLayer[i].country
                    });
                }
                if (dataLayer[i].pageTitle) {
                    confDataLayer.push({
                        'pageTitle': dataLayer[i].pageTitle
                    });
                }
                if (dataLayer[i].pageCategory) {
                    confDataLayer.push({
                        'pageCategory': dataLayer[i].pageCategory
                    });
                }
                if (dataLayer[i].language) {
                    confDataLayer.push({
                        'language': dataLayer[i].language
                    });
                }
                if (dataLayer[i].pageTestVariation) {
                    confDataLayer.push({
                        'pageTestVariation': dataLayer[i].pageTestVariation
                    });
                }
                if (dataLayer[i].visitorID) {
                    confDataLayer.push({
                        'visitorID': dataLayer[i].visitorID
                    });
                }
            }
            var contextExist = false;
            $.each(confDataLayer, function(i, item) {
                if (item.context) {
                    if (nameplateID) {
                        item.nameplateID = nameplateID;
                    }
                    if (nameplateName) {
                        item.nameplateName = 'ford ' + nameplateName;
                    }
                    if (configurationData) {
                        item.configurationData = configurationData;
                    }
                    if (page_id) {
                        item.pageID = page_id;
                    }
                    contextExist = true;
                } else {
                    contextExist = false;
                }
            });
            if (contextExist === false) {
                if (nameplateID) {
                    confDataLayer.push({
                        'nameplateID': nameplateID
                    });
                }
                if (nameplateName) {
                    confDataLayer.push({
                        'nameplateName': 'ford ' + nameplateName
                    });
                }
                if (configurationData) {
                    confDataLayer.push({
                        'configurationData': configurationData
                    });
                }
                if (page_id) {
                    confDataLayer.push({
                        'pageID': page_id
                    });
                }
            }
            dataLayer = confDataLayer;
            (function(w, d, s, l, i) {
                w[l] = w[l] || [];
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js'
                });
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : '';
                j.async = true;
                j.src = '//www.googletagmanager.com/gtm.js?id=' + i + dl;
                f.parentNode.insertBefore(j, f);
            })(window, document, 'script', 'dataLayer', 'GTM-PLW9L');
        }
    };
}();

function displaySummaryView(siteTermJSON, bookingJSON, amendFlag) {
    document.getElementById("bookingRefNO").innerHTML = "<b>" + siteTermJSON.SiteTerm.YourBookingNo + " : " + bookingJSON.bookingCustomerRefNum + "</b>" + "<br>";
    if (document.getElementById("titleID") != null) {
        document.getElementById("titleID").innerHTML = siteTermJSON.SiteTerm.summaryScreen;
    }
    var leftResult = "<h3 class='osbTabTitle'>" + siteTermJSON.SiteTerm.PersDetsCrumb + "<a href=\"javascript:OSB.submit('Action_AmendCustomerBooking','amendPersonalDetails',true);\" class='osbAmendButton'>";
    if (amendFlag) {
        leftResult += siteTermJSON.SiteTerm.amend;
    }
    leftResult += "</a>" + "</h3>" + "<div class='osbBordered'>" +
        checkNull(bookingJSON.customer.title) + "&nbsp;" + checkNull(bookingJSON.customer.firstName) + "&nbsp;" + checkNull(bookingJSON.customer.lastName) + "<br>" +
        siteTermJSON.SiteTerm.phone + "&nbsp;" + checkNull(bookingJSON.customer.phone) + "<br>" +
        siteTermJSON.SiteTerm.email + "&nbsp;" + checkNull(bookingJSON.customer.email) + "</div>";
    var rightResult = "<h3 class='osbTabTitle'>" + siteTermJSON.SiteTerm.YourCarLabel + "</h3>" + "<div class='osbBordered'>" + "<div class='osbVehicleInfoSummary'>" + "<h3>" + checkNull(bookingJSON.vehicle.vehicleLineDescription) + "</h3>" + "<table>" + "<tr>" + "<th align='left'>" + siteTermJSON.SiteTerm.Engine + "</th>" + "<td>" + checkNull(bookingJSON.vehicle.engineType) + "</td>" + "</tr>" + "<tr>" + "<th align='left'>" + siteTermJSON.SiteTerm.FuelType + "</th>" + "<td>" + checkNull(bookingJSON.vehicle.fuelType) + "</td>" + "</tr>" + "<tr>" + "<th align='left'>" + siteTermJSON.SiteTerm.Colour + "</th>" + "<td>" + checkNull(bookingJSON.vehicle.exteriorPaint) + "</td>" + "</tr>" + "<tr>" + "<th align='left'>" + siteTermJSON.SiteTerm.SummaryVIN + "</th>" + "<td>" + checkNull(bookingJSON.vehicle.vin) + "</td>" + "</tr>";
    if ('Y' == siteTermJSON.SiteTerm.ShowRegistrationField) {
        rightResult += "<tr>" + "<th align='left'>" + siteTermJSON.SiteTerm.RegistrationNo + "</th>" + "<td>" + checkNull(bookingJSON.vehicle.licenseplate) + "</td>" + "</tr>";
    }
    rightResult += "<tr>" + "<th align='left'>" + siteTermJSON.SiteTerm.mileage + "</th>" + "<td>" + checkNull(bookingJSON.odometer) + "</td>" + "</tr>" + "</table>" + "</div>" + "</div>";
    var FSADesc = " - " + siteTermJSON.SiteTerm.FSADesc;
    if (siteTermJSON.SiteTerm.FSADesc == 'FSADesc') {
        FSADesc = '';
    }
    rightResult += "<h3 class='osbTabTitle'>" + siteTermJSON.SiteTerm.FSAAction + FSADesc + "</h3>" + "<div class='osbBordered'>" + "<span>" + "<table>";
    var splits = [];
    var descOnly = [];
    var FsaDecsription = bookingJSON.fsaActions;
    if (FsaDecsription != null && FsaDecsription != '') {
        splits = FsaDecsription.split("||");
        for (var i = 0; i < splits.length; i++) {
            var desc = splits[i];
            if (desc != null && desc != '') {
                descOnly = desc.split(" - ");
                rightResult += "<tr>" + "<td>&#x25cf;&nbsp;" + descOnly[1] + "</td>" + "</tr>";
            }
        }
    } else {
        rightResult += "<tr><td>" + siteTermJSON.SiteTerm.NoFSAAction + "</td></tr>";
    }
    rightResult += "</table>" + "</span>" + "</div>";
    rightResult += "<h3 class='osbTabTitle'>" + siteTermJSON.SiteTerm.service_appointment + "<a href=\"javascript:OSB.submit('Action_AmendCustomerBooking','amendServiceAppointments',true);\" class='osbAmendButton'>";
    if (amendFlag) {
        rightResult += siteTermJSON.SiteTerm.amend;
    }
    rightResult += "</a>" + "</h3>" + "<div class='osbBordered'>";
    rightResult += bookingJSON.appointmentDate + "&nbsp;" + bookingJSON.appointmentTime + "</div>";
    rightResult += "<h3 class='osbTabTitle'>" + siteTermJSON.SiteTerm.RegMainServices + "</h3>" + "<div class='osbBordered'>" +
        checkNull(bookingJSON.customerServiceDescription) + "&nbsp;";
    var siteTermMainServiceDescription = "";
    if ("55555" == bookingJSON.mainServiceId) {
        if (bookingJSON.mainServicePrice == -1) {
            rightResult += siteTermJSON.SiteTerm.WinterServicePrice_NotAvailableMsg;
            siteTermMainServiceDescription = siteTermJSON.SiteTerm.WinterServicePrice_NotAvailableMsg;
        } else {
            rightResult += bookingJSON.newMainServicePrice;
        }
    } else {
        if (bookingJSON.mainServicePrice == -1) {
            rightResult += siteTermJSON.SiteTerm.Price_NotAvailable;
            siteTermMainServiceDescription = siteTermJSON.SiteTerm.Price_NotAvailable;;
        } else {
            rightResult += bookingJSON.newMainServicePrice;
        }
    }
    rightResult += "<br><br>" +
        siteTermJSON.SiteTerm.STDisclaimer + "</div>";
    if ("55555" != bookingJSON.mainServiceId) {
        rightResult += "<h3 class='osbTabTitle'>" + siteTermJSON.SiteTerm.AddServices + "<a href=\"javascript:OSB.submit('Action_AmendCustomerBooking','amendAdditionalServices',true);\" class='osbAmendButton'>";
        if (amendFlag) {
            rightResult += siteTermJSON.SiteTerm.amend;
        }
        rightResult += "</a>" + "</h3>" + "<div class='osbBordered'>" + "<p>";
        if (siteTermJSON.SiteTerm.showFreeService != 'Y') {
            rightResult += siteTermJSON.SiteTerm.VisualHealthCheck_Title + "<br>";
        }
        var additionalServicePrices = 0;
        if (bookingJSON.bookedAdditionalServices != null && bookingJSON.bookedAdditionalServices.length > 0) {
            for (var i = 0; i < bookingJSON.bookedAdditionalServices.length; i++) {
                additionalServicePrices = additionalServicePrices + bookingJSON.bookedAdditionalServices[i].price;
                rightResult += getAdditionalServiceName(bookingJSON.bookedAdditionalServices[i].additionalServiceID, siteTermJSON) + "&nbsp;" + bookingJSON.bookedAdditionalServices[i].newPrice + "<br>";
            }
        }
        rightResult += "</p>";
        rightResult += "<p>" + "<strong>" + siteTermJSON.SiteTerm.ExpectedTotal + "</strong>" + "&nbsp;" + bookingJSON.totalServicePrice + "</p>" + "</div>";
    }
    if ("55555" != bookingJSON.mainServiceId) {
        rightResult += "<h3 class='osbTabTitle'>" + siteTermJSON.SiteTerm.Your_annotations + "<a href=\"javascript:OSB.submit('Action_AmendCustomerBooking','amendAnnotations',true);\" class='osbAmendButton'>";
        if (amendFlag) {
            rightResult += siteTermJSON.SiteTerm.amend;
        }
        rightResult += "</a>" + "</h3>" + "<div class='osbBordered word-break' >" + "<p>" + checkNull(bookingJSON.customerAnnotation) + "</p>" + "</div>";
    } else if ("55555" == bookingJSON.mainServiceId) {
        rightResult += "<h3 class='osbBorderedTitle'>" + siteTermJSON.SiteTerm.AnnotationsTxt + "</h3>" + "<p>" + siteTermJSON.SiteTerm.AnnotationsDesc + "</p>" + "<br>";
        if (amendFlag) {
            rightResult += "<textarea name='note' title='textID' rows='9' id='textID' onchange='validateTextAreaSize();' onkeydown='limitText();' onkeyup='limitText();'>" + checkNull(bookingJSON.customerAnnotation) + "</textarea>";
        } else {
            rightResult += "<textarea name='note' title='textID' rows='9' id='textID' onchange='validateTextAreaSize();' onkeydown='limitText();' onkeyup='limitText();' disabled='true'>" + checkNull(bookingJSON.customerAnnotation) + "</textarea>";
        }
    }
    document.getElementById('blockLeftID').innerHTML = leftResult;
    document.getElementById('blockRightID').innerHTML = rightResult;
    document.getElementById('footerID').innerHTML = siteTermJSON.SiteTerm.SummaryFootnote;
    document.getElementById("bookingJSON").value = bookingJSON;
}

function getAdditionalServiceName(serviceID, siteTermJSON) {
    var serviceName = "";
    switch (serviceID) {
        case '1':
            serviceName = siteTermJSON.SiteTerm.AdditionalServiceName_Id_1;
            break;
        case '2':
            serviceName = siteTermJSON.SiteTerm.AdditionalServiceName_Id_2;
            break;
        case '3':
            serviceName = siteTermJSON.SiteTerm.AdditionalServiceName_Id_3;
            break;
        case '4':
            serviceName = siteTermJSON.SiteTerm.AdditionalServiceName_Id_4;
            break;
        case '5':
            serviceName = siteTermJSON.SiteTerm.AdditionalServiceName_Id_5;
            break;
        case '6':
            serviceName = siteTermJSON.SiteTerm.AdditionalServiceName_Id_6;
            break;
        case '7':
            serviceName = siteTermJSON.SiteTerm.AdditionalServiceName_Id_7;
            break;
        case '8':
            serviceName = siteTermJSON.SiteTerm.AdditionalServiceName_Id_8;
            break;
    }
    return serviceName;
}

function displayAmendContactDetails(siteTermJSON, bookingJSON) {
    var spanResult = siteTermJSON.SiteTerm.EnterContactDetls;
    var result = "<label for='title'>" + siteTermJSON.SiteTerm.Title + "</label>";
    result += "<br>";
    result += "<select id='title' name='title' class='title'>";
    var customerTitle = siteTermJSON.SiteTerm.Customer_Title;
    var titleArray = customerTitle.split(',');
    for (var i = 0; i < titleArray.length; i++) {
        title = titleArray[i].replace(/(^\s+|\s+$)/g, '');
        if (title == checkNull(bookingJSON.customer.title)) {
            result += "<option value=" + title + " selected='selected'>" + title + "</option>";
        } else {
            result += "<option value=" + title + ">" + title + "</option>";
        }
    }
    result += "</select>";
    result += "<br>";
    result += "<label for='firstname'>" + siteTermJSON.SiteTerm.FirstName + "</label>";
    result += "<br>";
    result += "<input type='text' name='firstname' id='firstname' value='" + checkNull(bookingJSON.customer.firstName) + "'/>";
    result += "<br>";
    result += "<label for='lastname'>" + siteTermJSON.SiteTerm.LastName + "</label>";
    result += "<br>";
    result += "<input type='text' id='lastname' name='lastname' value='" + checkNull(bookingJSON.customer.lastName) + "'/>";
    result += "<br>";
    result += "<label  for='contactno'>" + siteTermJSON.SiteTerm.ContactNo + "</label>";
    result += "<br>";
    result += "<input type='text' id='contactno' name='contactno' value='" + checkNull(bookingJSON.customer.phone) + "' />";
    result += "<br>";
    result += "<label  for='email'>" + siteTermJSON.SiteTerm.Email + "</label>";
    result += "<br>";
    result += "<input type='text' name='email' id='email' readonly value='" + checkNull(bookingJSON.customer.email) + "'/>";
    result += "<br>";
    result += "<label for='confirmEmail'>" + siteTermJSON.SiteTerm.RetypeEmail + "</label>";
    result += "<br>";
    result += "<input type='text' name='confirmEmail' id='confirmEmail' readonly value='" + checkNull(bookingJSON.customer.email) + "'/>";
    var privacyResult = "<strong>" + siteTermJSON.SiteTerm.PrivacyStmt + "</strong>";
    privacyResult += "<br>";
    privacyResult += siteTermJSON.SiteTerm.PrivacyStmt;
    var checkResult = "<input type='checkbox' name='privacystmt' id='privacystmt' value='accepted' checked='checked' onclick='return false;' onkeydown='return false;' style='vertical-align: middle'/>";
    checkResult += "<label for='privacystmt' style='vertical-align: middle; margin: 0; padding: 10px 5px'>" + siteTermJSON.SiteTerm.AcceptPrivacyStmt + "</label>";
    checkResult += "<br>";
    checkResult += "<br>";
    var Mandresult = "<p>" + siteTermJSON.SiteTerm.MandatoryInfo + "</p>";
    document.getElementById('amendSpan').innerHTML = spanResult;
    document.getElementById('amendInnerBlock').innerHTML = result;
    document.getElementById('osbPrivacyStmt').innerHTML = privacyResult;
    document.getElementById('osbPrivacyCheck').innerHTML = checkResult;
    document.getElementById('osbMandatory').innerHTML = Mandresult;
}

function displayAmendDateAndTime(siteTermJSON, bookingJSON) {
    var hResult = siteTermJSON.SiteTerm.PleaseSelect;
    var prevAppiontmentDate = parseAppointmentDate(siteTermJSON, bookingJSON.appointmentTimeAsDate);
    var sResult = "Previous appointment date and time :&nbsp;" + prevAppiontmentDate.weekName + ",&nbsp;" + prevAppiontmentDate.date + prevAppiontmentDate.month + "&nbsp;" + prevAppiontmentDate.year + "&nbsp;" + prevAppiontmentDate.time;
    document.getElementById('osbBlueTitleCalendarId').innerHTML = hResult;
    document.getElementById('previousDateID').innerHTML = sResult;
}

function displayDealerDetails(bookingJSON, siteTermJSON, hideShowMap) {
    var result = "<h3 class=\"osbTabTitle\">" + siteTermJSON.SiteTerm.YourSelectedDealer + "</h3> ";
    result += "<div class=\"osbBordered\">";
    result += checkNull(bookingJSON.dealer.dealerProfile.dealerName) + "<br>";
    result += checkNull(bookingJSON.dealer.dealerProfile.street) + "<br>";
    result += checkNull(bookingJSON.dealer.dealerProfile.town) + "<br>";
    result += checkNull(bookingJSON.dealer.dealerProfile.country) + "<br>";
    result += checkNull(bookingJSON.dealer.dealerProfile.postalCode) + "<br>";
    if (hideShowMap == "null" || hideShowMap == null) {
        result += "<a href=\"javascript:showDealerDetails('');\">" + siteTermJSON.SiteTerm.Showmap + "</a>";
    }
    result += "<input type=\"hidden\" name=\"addressSearchString\" id=\"dlAddressSearchString\" value=\"london\" >";
    result += "<input type=\"hidden\" name=\"dlRangeString\" id=\"dlRangeString\" value=\"10\" >";
    result += "<br><br>";
    if (siteTermJSON.SiteTerm.OpeningDealerHours == 'Y') {
        result += "<strong>" + siteTermJSON.SiteTerm.BusinessHours + "</strong><br>";
        result += siteTermJSON.SiteTerm.weekdays + "<br>";
        result += checkNull(bookingJSON.dealer.dealerProfile.openingHoursServiceMonday) + "<br>";
        result += checkNull(bookingJSON.dealer.dealerProfile.openingHoursServiceTuesday) + "<br>";
        result += checkNull(bookingJSON.dealer.dealerProfile.openingHoursServiceWednesday) + "<br>";
        result += checkNull(bookingJSON.dealer.dealerProfile.openingHoursServiceThursday) + "<br>";
        result += checkNull(bookingJSON.dealer.dealerProfile.openingHoursServiceFriday) + "<br>";
        result += siteTermJSON.SiteTerm.Saturday + "<br>";
        result += checkNull(bookingJSON.dealer.dealerProfile.openingHoursServiceSaturday) + "<br>";
        result += siteTermJSON.SiteTerm.Sunday + "<br>";
        result += checkNull(bookingJSON.dealer.dealerProfile.openingHoursServiceSunday) + "<br>";
    }
    result += "<strong>" + siteTermJSON.SiteTerm.contact + "</strong><br>";
    result += siteTermJSON.SiteTerm.phone + checkNull(bookingJSON.dealer.dealerProfile.phone) + "<br>";
    result += siteTermJSON.SiteTerm.fax + checkNull(bookingJSON.dealer.dealerProfile.fax) + "<br>";
    result += siteTermJSON.SiteTerm.email + checkNull(bookingJSON.dealer.dealerProfile.osbEmails) + "<br>";
    result += "</div>";
    document.getElementById("osbDealerID").innerHTML = result;
}

function checkNull(objValue) {
    var strValue = "";
    if (objValue != "null" && objValue != null) {
        strValue = objValue;
    }
    return strValue;
}

function parseAppointmentDate(siteTermJSON, dateString) {
    var dateTimeString = {
        "month": "",
        "weekName": "",
        "year": "",
        "date": "",
        "time": ""
    };
    var months = siteTermJSON.SiteTerm.MonthCaptions;
    var weeks = siteTermJSON.SiteTerm.WeekDays;
    var day = dateString.day;
    if (months != null && months != '') {
        var monthsNames = months.split(',');
        dateTimeString.month = monthsNames[dateString.month];
    }
    if (weeks != null && weeks != '') {
        var weeksNames = weeks.split(',');
        dateTimeString.weekName = weeksNames[day - 1];
    }
    dateTimeString.year = dateString.year;
    dateTimeString.date = dateString.date;
    if (dateString.minutes < 9) {
        dateTimeString.time = dateString.hours + ":" + dateString.minutes + "0";
    } else {
        dateTimeString.time = dateString.hours + ":" + dateString.minutes;
    }
    return dateTimeString;
}

function getAdditionalServiceDescription(serviceID, siteTermJSON) {
    var serviceName = "";
    switch (serviceID) {
        case '1':
            serviceName = siteTermJSON.SiteTerm.AdditonalService_Id_1;
            break;
        case '2':
            serviceName = siteTermJSON.SiteTerm.AdditonalService_Id_2;
            break;
        case '3':
            serviceName = siteTermJSON.SiteTerm.AdditonalService_Id_3;
            break;
        case '4':
            serviceName = siteTermJSON.SiteTerm.AdditonalService_Id_4;
            break;
        case '5':
            serviceName = siteTermJSON.SiteTerm.AdditonalService_Id_5;
            break;
        case '6':
            serviceName = siteTermJSON.SiteTerm.AdditonalService_Id_6;
            break;
        case '7':
            serviceName = siteTermJSON.SiteTerm.AdditonalService_Id_7;
            break;
        case '8':
            serviceName = siteTermJSON.SiteTerm.AdditonalService_Id_8;
            break;
    }
    return serviceName;
}

function checkAvailableInBookedService(bookingJSON, dealerAdditionalServiceID, bookedAdditionalService) {
    var flag = false;
    if (bookingJSON.bookedAdditionalServices != null && bookingJSON.bookedAdditionalServices.length > 0) {
        for (var k = 0; k < bookingJSON.bookedAdditionalServices.length; k++) {
            if (bookingJSON.bookedAdditionalServices[k].additionalServiceID == dealerAdditionalServiceID) {
                flag = true;
                bookedAdditionalService.push({
                    "price": bookingJSON.bookedAdditionalServices[k].newPrice
                });
                break;
            }
        }
    }
    return flag;
}

function checkAvailableInDealerService(dealer, bookedAdditionalServiceID) {
    var flag = false;
    if (dealer.dealerAddlServicesList != null && dealer.dealerAddlServicesList.length > 0) {
        for (var i = 0; i < dealer.dealerAddlServicesList.length; i++) {
            if (dealer.dealerAddlServicesList[i].additionalService.additionalServiceId == bookedAdditionalServiceID) {
                flag = true;
                break;
            }
        }
    }
    return flag;
}

function displayAdditionalServices(sitetermJSON, bookingJSON) {
    dealerJSON = bookingJSON.dealer;
    siteTermJSON = sitetermJSON;
    var dealer = bookingJSON.dealer;
    var finalAdditionalServices = [];
    var amendAdditional_Services = "";
    amendAdditional_Services += '<span class="osbAdditionalServicesBlock">';
    if (dealer != null) {
        if (siteTermJSON.SiteTerm.showFreeService != 'Y') {
            amendAdditional_Services += '<h3 class="osbTabTitle">';
            amendAdditional_Services += '<input type="checkbox" name="selectedAdditionalServices"  checked="true" disabled="true" id="checkId" value="0"/>';
            amendAdditional_Services += '&nbsp;' + '<label for="checkId">' + siteTermJSON.SiteTerm.VisualHealthCheck_Title + '</label>';
            amendAdditional_Services += '</h3>';
            amendAdditional_Services += '<div class="osbBordered osbAdditionalServiceInfo" style="position: relative">' + siteTermJSON.SiteTerm.Visualhealthchecktext + '</div>';
        }
        var serviceSelected = "false";
        if (dealer.dealerAddlServicesList != null) {
            for (var i = 0; i < dealer.dealerAddlServicesList.length; i++) {
                var bookedAdditionalService = [];
                var flag = checkAvailableInBookedService(bookingJSON, dealer.dealerAddlServicesList[i].additionalService.additionalServiceId, bookedAdditionalService);
                if (flag) {
                    finalAdditionalServices.push({
                        "additionalServiceID": dealer.dealerAddlServicesList[i].additionalService.additionalServiceId,
                        "serviceSelected": flag,
                        "serviceAvailability": flag,
                        "message": "",
                        "price": bookedAdditionalService[0].price
                    });
                } else {
                    finalAdditionalServices.push({
                        "additionalServiceID": dealer.dealerAddlServicesList[i].additionalService.additionalServiceId,
                        "serviceSelected": flag,
                        "serviceAvailability": flag,
                        "message": "",
                        "price": dealer.dealerAddlServicesList[i].newPrice
                    });
                }
            }
        }
        if (bookingJSON.bookedAdditionalServices != null) {
            for (var i = 0; i < bookingJSON.bookedAdditionalServices.length; i++) {
                var flag = checkAvailableInDealerService(dealer, bookingJSON.bookedAdditionalServices[i].additionalServiceID);
                if (!flag) {
                    finalAdditionalServices.push({
                        "additionalServiceID": bookingJSON.bookedAdditionalServices[i].additionalServiceID,
                        "serviceSelected": true,
                        "serviceAvailability": flag,
                        "message": "This service is no longer available, please check with dealer.",
                        "price": bookingJSON.bookedAdditionalServices[i].newPrice
                    });
                }
            }
        }
        if (finalAdditionalServices.length > 0) {
            for (var i = 0; i < finalAdditionalServices.length; i++) {
                var serviceId = finalAdditionalServices[i].additionalServiceID;
                amendAdditional_Services += '<h3 class="osbTabTitle" id="' + 'osbTabTitleID' + serviceId + '" >';
                amendAdditional_Services += '<input type="hidden" name="checkBoxChanged" id="checkBoxChangedID" value="">';
                if (finalAdditionalServices[i].serviceSelected == true) {
                    amendAdditional_Services += '<input type="checkbox" checked="' + finalAdditionalServices[i].serviceSelected + '" name="selectedAdditionalServices" value="' + serviceId + '" onClick="updateAdditionalServicePrice(' + serviceId + ')">';
                } else {
                    amendAdditional_Services += '<input type="checkbox" name="selectedAdditionalServices" value="' + serviceId + '" onClick="updateAdditionalServicePrice(' + serviceId + ')">';
                }
                amendAdditional_Services += '&nbsp;' + '<label for="checkId' + i + '">' + getAdditionalServiceName(serviceId, siteTermJSON) + '</label>';
                amendAdditional_Services += '</h3>';
                amendAdditional_Services += '<div class="osbBordered osbAdditionalServiceInfo" style="position: relative" id="' + 'osbBorderedID' + serviceId + '">';
                amendAdditional_Services += '&nbsp;' + '<label class="osbAdditionalServicePrice" id="' + 'servicePriceID' + serviceId + '" >' + finalAdditionalServices[i].price + '</label>';
                amendAdditional_Services += getAdditionalServiceDescription(serviceId, siteTermJSON);
                if (finalAdditionalServices[i].message != '') {
                    amendAdditional_Services += "<br><b><font color=\"red\">" + finalAdditionalServices[i].message + "</font></b>";
                }
                amendAdditional_Services += '</div>';
            }
        }
    }
    amendAdditional_Services += '</span>';
    var customerAnnotation = "";
    customerAnnotation += '<h3 class="osbBorderedTitle">' + siteTermJSON.SiteTerm.AnnotationsTxt + '</h3>';
    customerAnnotation += '<p>' + siteTermJSON.SiteTerm.AnnotationsDesc + '</p><br>';
    customerAnnotation += '<textarea name="note" title="textID" rows="9" id="textID" onchange="validateTextAreaSize();" onkeydown="limitText();" onkeyup="limitText();">';
    customerAnnotation += checkNull(bookingJSON.customerAnnotation) + '</textarea>';
    document.getElementById('additionalServicesTitle').innerHTML = siteTermJSON.SiteTerm.AddServices;
    document.getElementById('amendAdditionalServices').innerHTML = amendAdditional_Services;
    document.getElementById('customerAnnotation').innerHTML = customerAnnotation;
}

function displayMainServicePrice(siteTermJSON, bookingJSON) {
    var mainServicePriceResult = "";
    mainServicePriceResult += "<h3 class='osbTabTitle'>" + siteTermJSON.SiteTerm.RegMainServices + "</h3>" + "<div class='osbBordered'>" +
        bookingJSON.customerServiceDescription + "&nbsp;";
    if (bookingJSON.mainServicePrice == -1) {
        mainServicePriceResult += siteTermJSON.SiteTerm.Price_NotAvailable;
    } else {
        if (bookingJSON.mainServicePrice != "" && bookingJSON.mainServicePrice != null && bookingJSON.mainServicePrice != undefined) {
            mainServicePriceResult += bookingJSON.newMainServicePrice;
        } else {
            mainServicePriceResult += " ";
        }
    }
    mainServicePriceResult += "<br>" + "</div>";
    document.getElementById('mainServicePrice').innerHTML = mainServicePriceResult;
}

function updateAdditionalServicePrice(serviceId) {
    var priceID = "servicePriceID" + serviceId;
    var titleID = "osbTabTitleID" + serviceId;
    var boarderID = "osbBorderedID" + serviceId;
    var flag = false;
    for (var i = 0; i < dealerJSON.dealerAddlServicesList.length; i++) {
        if (dealerJSON.dealerAddlServicesList[i].additionalService.additionalServiceId == serviceId) {
            document.getElementById(priceID).innerHTML = dealerJSON.dealerAddlServicesList[i].newPrice;
            flag = true;
            break;
        }
    }
    if (!flag) {
        document.getElementById(titleID).style.display = 'none';
        document.getElementById(boarderID).style.display = 'none';
    }
    if (document.getElementById("checkBoxChangedID") == null) {
        var div = document.getElementById("amendAdditionalServices");
        var input = document.createElement("input");
        input.setAttribute("type", "hidden");
        input.setAttribute("name", "checkBoxChanged");
        input.setAttribute("value", "");
        input.setAttribute("id", "checkBoxChangedID");
        div.appendChild(atag);
    }
    var checkBoxServiceID = document.getElementById("checkBoxChangedID").value;
    var chengedList = 0;
    if (checkBoxServiceID == '') {
        chengedList = serviceId;
    } else {
        if (checkBoxServiceID.indexOf(serviceId) == -1) {
            chengedList = checkBoxServiceID + ',' + serviceId;
        } else {
            chengedList = checkBoxServiceID;
        }
    }
    document.getElementById('checkBoxChangedID').value = chengedList;
}

function validateTextAreaSize() {
    var textvalue = document.getElementById('textID').value;
    if (textvalue.length > 300) {
        alert("Text entered is more than 300 characters. Please enter less than 300 ");
        document.getElementById('textID').focus();
    }
}

function limitText() {
    var customerComments = document.getElementById('textID').value;
    if (customerComments.length > 300) {
        document.getElementById('textID').value = customerComments.substring(0, 300);
    }
}
